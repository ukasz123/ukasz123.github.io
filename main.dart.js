// Generated by dart2js (NullSafetyMode.sound, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 2.19.4.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key))
        to[key] = from[key];
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazyOld(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        A.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel)
        holder[name] = initializer();
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel)
          A.throwLateFieldADI(name);
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number")
      funType += typesOffset;
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var A = {JS_CONST: function JS_CONST(t0) {
      this.code = t0;
    },
    CastIterable_CastIterable(source, $S, $T) {
      if ($S._eval$1("EfficientLengthIterable<0>")._is(source))
        return new A._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new A.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    LateError$fieldADI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has been assigned during initialization.");
    },
    LateError$fieldNI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has not been initialized.");
    },
    LateError$localNI(localName) {
      return new A.LateError("Local '" + localName + "' has not been initialized.");
    },
    LateError$fieldAI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has already been initialized.");
    },
    hexDigitValue(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    SystemHash_combine(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    SystemHash_finish(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    SubListIterable$(_iterable, _start, _endOrLength, $E) {
      A.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        A.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          A.throwExpression(A.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new A.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      A.ArgumentError_checkNotNull(takeCount, _s9_, type$.int);
      A.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new A.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        A.ArgumentError_checkNotNull(count, _s5_, type$.int);
        A.RangeError_checkNotNegative(count, _s5_);
        return new A.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      A.ArgumentError_checkNotNull(count, _s5_, type$.int);
      A.RangeError_checkNotNegative(count, _s5_);
      return new A.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    IterableElementError_noElement() {
      return new A.StateError("No element");
    },
    IterableElementError_tooMany() {
      return new A.StateError("Too many elements");
    },
    IterableElementError_tooFew() {
      return new A.StateError("Too few elements");
    },
    Sort_sort(a, compare, $E) {
      A.Sort__doSort(a, 0, J.get$length$asx(a) - 1, compare, $E);
    },
    Sort__doSort(a, left, right, compare, $E) {
      if (right - left <= 32)
        A.Sort__insertionSort(a, left, right, compare, $E);
      else
        A.Sort__dualPivotQuicksort(a, left, right, compare, $E);
    },
    Sort__insertionSort(a, left, right, compare, $E) {
      var i, t1, el, j, t2, j0;
      for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
        el = t1.$index(a, i);
        j = i;
        while (true) {
          if (j > left) {
            t2 = compare.call$2(t1.$index(a, j - 1), el);
            if (typeof t2 !== "number")
              return t2.$gt();
            t2 = t2 > 0;
          } else
            t2 = false;
          if (!t2)
            break;
          j0 = j - 1;
          t1.$indexSet(a, j, t1.$index(a, j0));
          j = j0;
        }
        t1.$indexSet(a, j, el);
      }
    },
    Sort__dualPivotQuicksort(a, left, right, compare, $E) {
      var t0, less, great, k, ak, comp, great0, less0, pivots_are_equal,
        sixth = B.JSInt_methods._tdivFast$1(right - left + 1, 6),
        index1 = left + sixth,
        index5 = right - sixth,
        index3 = B.JSInt_methods._tdivFast$1(left + right, 2),
        index2 = index3 - sixth,
        index4 = index3 + sixth,
        t1 = J.getInterceptor$asx(a),
        el1 = t1.$index(a, index1),
        el2 = t1.$index(a, index2),
        el3 = t1.$index(a, index3),
        el4 = t1.$index(a, index4),
        el5 = t1.$index(a, index5),
        t2 = compare.call$2(el1, el2);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el4, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t2 = compare.call$2(el1, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el2, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el1, el4);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el3, el4);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      t2 = compare.call$2(el2, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el2, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el4, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t1.$indexSet(a, index1, el1);
      t1.$indexSet(a, index3, el3);
      t1.$indexSet(a, index5, el5);
      t1.$indexSet(a, index2, t1.$index(a, left));
      t1.$indexSet(a, index4, t1.$index(a, right));
      less = left + 1;
      great = right - 1;
      if (J.$eq$(compare.call$2(el2, el4), 0)) {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp = compare.call$2(ak, el2);
          if (comp === 0)
            continue;
          if (comp < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else
            for (; true;) {
              comp = compare.call$2(t1.$index(a, great), el2);
              if (comp > 0) {
                --great;
                continue;
              } else {
                great0 = great - 1;
                if (comp < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                  break;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  break;
                }
              }
            }
        }
        pivots_are_equal = true;
      } else {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) > 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) > 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        pivots_are_equal = false;
      }
      t2 = less - 1;
      t1.$indexSet(a, left, t1.$index(a, t2));
      t1.$indexSet(a, t2, el2);
      t2 = great + 1;
      t1.$indexSet(a, right, t1.$index(a, t2));
      t1.$indexSet(a, t2, el4);
      A.Sort__doSort(a, left, less - 2, compare, $E);
      A.Sort__doSort(a, great + 2, right, compare, $E);
      if (pivots_are_equal)
        return;
      if (less < index1 && great > index5) {
        for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)
          ++less;
        for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) === 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) === 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) === 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        A.Sort__doSort(a, less, great, compare, $E);
      } else
        A.Sort__doSort(a, less, great, compare, $E);
    },
    CastStreamTransformer: function CastStreamTransformer(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastConverter: function CastConverter(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap: function CastMap(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap_forEach_closure: function CastMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    CastMap_entries_closure: function CastMap_entries_closure(t0) {
      this.$this = t0;
    },
    LateError: function LateError(t0) {
      this.__internal$_message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this.__internal$_string = t0;
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    SentinelValue: function SentinelValue() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1, t2) {
      this._iterator = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterable: function ExpandIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterator: function ExpandIterator(t0, t1, t2, t3) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._currentExpansion = t2;
      _.__internal$_current = null;
      _.$ti = t3;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1, t2) {
      this._iterator = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipWhileIterable: function SkipWhileIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    SkipWhileIterator: function SkipWhileIterator(t0, t1, t2) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._hasSkipped = false;
      _.$ti = t2;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator(t0) {
      this.$ti = t0;
    },
    WhereTypeIterable: function WhereTypeIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    WhereTypeIterator: function WhereTypeIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    ReversedListIterable: function ReversedListIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    instantiate1(f, T1) {
      var t1 = new A.Instantiation1(f, T1._eval$1("Instantiation1<0>"));
      t1.Instantiation$1(f);
      return t1;
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      if (3 >= match.length)
        return A.ioore(match, 3);
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((B.JSString_methods._codeUnitAt$1(digitsPart, i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_objectTypeName(object) {
      return A.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti(object) {
      var interceptor, dispatchName, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.JS_CONST_u2C(object);
        if (dispatchName !== "Object" && dispatchName !== "")
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_currentUri() {
      if (!!self.location)
        return self.location.href;
      return null;
    },
    Primitives__fromCharCodeApply(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints(codePoints) {
      var t1, _i, i,
        a = A._setArrayType([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, A.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i <= 65535)
          B.JSArray_methods.add$1(a, i);
        else if (i <= 1114111) {
          B.JSArray_methods.add$1(a, 55296 + (B.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          B.JSArray_methods.add$1(a, 56320 + (i & 1023));
        } else
          throw A.wrapException(A.argumentErrorValue(i));
      }
      return A.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i < 0)
          throw A.wrapException(A.argumentErrorValue(i));
        if (i > 65535)
          return A.Primitives_stringFromCodePoints(charCodes);
      }
      return A.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
        }
      }
      throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._core$_value);
      return receiver.date;
    },
    Primitives_getYear(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0;
      return t1;
    },
    Primitives_getMonth(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1;
      return t1;
    },
    Primitives_getDay(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0;
      return t1;
    },
    Primitives_getHours(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0;
      return t1;
    },
    Primitives_getMinutes(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0;
      return t1;
    },
    Primitives_getSeconds(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0;
      return t1;
    },
    Primitives_getMilliseconds(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0;
      return t1;
    },
    iae(argument) {
      throw A.wrapException(A.argumentErrorValue(argument));
    },
    ioore(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = A._asInt(J.get$length$asx(indexable));
      if (index < 0 || index >= $length)
        return A.IndexError$withLength(index, $length, indexable, null, _s5_);
      return A.RangeError$value(index, _s5_);
    },
    diagnoseRangeError(start, end, $length) {
      if (start < 0 || start > $length)
        return A.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return A.RangeError$range(end, start, $length, "end", null);
      return new A.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue(object) {
      return new A.ArgumentError(true, object, null, null);
    },
    wrapException(ex) {
      var wrapper, t1;
      if (ex == null)
        ex = new A.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex) {
      throw A.wrapException(ex);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      var t1;
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace) {
        t1 = ex.dartException;
        return A.saveStackTrace(ex, t1 == null ? type$.Object._as(t1) : t1);
      }
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, t1, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, _null = null;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              t1 = A.S(message);
              return A.saveStackTrace(ex, new A.NullError(t1 + " (Error " + ieErrorCode + ")", _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t1 = match != null;
                        } else
                          t1 = true;
                      } else
                        t1 = true;
                    } else
                      t1 = true;
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
            if (t1) {
              A._asString(message);
              return A.saveStackTrace(ex, new A.NullError(message, match == null ? _null : match.method));
            }
          }
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new A._StackTrace(exception);
    },
    objectHashCode(object) {
      if (object == null || typeof object != "object")
        return J.get$hashCode$(object);
      else
        return A.Primitives_objectHashCode(object);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      type$.Function._as(closure);
      switch (A._asInt(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(A.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else
        $constructor = function tear_off(a, b) {
          this.$initialize(a, b);
        };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunctionNewRti(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      var arity, t1;
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      arity = $function.length;
      t1 = A.Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var t1, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template), type$.nullable_Object);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    boolConversionCheck(value) {
      if (value == null)
        A.assertThrow("boolean expression must not be null");
      return value;
    },
    assertThrow(message) {
      throw A.wrapException(new A._AssertionError(message));
    },
    throwCyclicInit(staticName) {
      throw A.wrapException(new A.CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    defineProperty(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = A._asString($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = A._asStringQ($.alternateTagFunction.call$2(obj, tag));
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.JS_CONST_bDt();
      hooks = A.applyHooksTransformer(B.JS_CONST_0, A.applyHooksTransformer(B.JS_CONST_rr7, A.applyHooksTransformer(B.JS_CONST_Fs4, A.applyHooksTransformer(B.JS_CONST_Fs4, A.applyHooksTransformer(B.JS_CONST_gkc, A.applyHooksTransformer(B.JS_CONST_4hp, A.applyHooksTransformer(B.JS_CONST_QJm(B.JS_CONST_u2C), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, unicode, dotAll, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw A.wrapException(A.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked(receiver, other, startIndex) {
      var t1;
      if (typeof other == "string")
        return receiver.indexOf(other, startIndex) >= 0;
      else if (other instanceof A.JSSyntaxRegExp) {
        t1 = B.JSString_methods.substring$1(receiver, startIndex);
        return other._nativeRegExp.test(t1);
      } else {
        t1 = J.allMatches$1$s(other, B.JSString_methods.substring$1(receiver, startIndex));
        return !t1.get$isEmpty(t1);
      }
    },
    escapeReplacement(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    stringReplaceFirstRE(receiver, regexp, replacement, startIndex) {
      var match = regexp._execGlobal$2(receiver, startIndex);
      if (match == null)
        return receiver;
      return A.stringReplaceRangeUnchecked(receiver, match._match.index, match.get$end(), replacement);
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked(receiver, pattern, replacement) {
      var nativeRegexp;
      if (typeof pattern == "string")
        return A.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      if (pattern instanceof A.JSSyntaxRegExp) {
        nativeRegexp = pattern.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, A.escapeReplacement(replacement));
      }
      return A.stringReplaceAllGeneral(receiver, pattern, replacement);
    },
    stringReplaceAllGeneral(receiver, pattern, replacement) {
      var t1, startIndex, t2, match;
      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), startIndex = 0, t2 = ""; t1.moveNext$0();) {
        match = t1.get$current();
        t2 = t2 + receiver.substring(startIndex, match.get$start(match)) + replacement;
        startIndex = match.get$end();
      }
      t1 = t2 + receiver.substring(startIndex);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    stringReplaceAllUncheckedString(receiver, pattern, replacement) {
      var $length, t1, i, index;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        t1 = "" + replacement;
        for (i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      index = receiver.indexOf(pattern, 0);
      if (index < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(A.quoteStringForRegExp(pattern), "g"), A.escapeReplacement(replacement));
    },
    stringReplaceFirstUnchecked(receiver, pattern, replacement, startIndex) {
      var index, t1, matches, match;
      if (typeof pattern == "string") {
        index = receiver.indexOf(pattern, startIndex);
        if (index < 0)
          return receiver;
        return A.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
      }
      if (pattern instanceof A.JSSyntaxRegExp)
        return startIndex === 0 ? receiver.replace(pattern._nativeRegExp, A.escapeReplacement(replacement)) : A.stringReplaceFirstRE(receiver, pattern, replacement, startIndex);
      t1 = J.allMatches$2$s(pattern, receiver, startIndex);
      matches = t1.get$iterator(t1);
      if (!matches.moveNext$0())
        return receiver;
      match = matches.get$current();
      return B.JSString_methods.replaceRange$3(receiver, match.get$start(match), match.get$end(), replacement);
    },
    stringReplaceRangeUnchecked(receiver, start, end, replacement) {
      return receiver.substring(0, start) + replacement + receiver.substring(end);
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_length = t0;
      _._jsObject = t1;
      _.__js_helper$_keys = t2;
      _.$ti = t3;
    },
    _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    Instantiation: function Instantiation() {
    },
    Instantiation1: function Instantiation1(t0, t1) {
      this._genericClosure = t0;
      this.$ti = t1;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this.__js_helper$_message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    _AssertionError: function _AssertionError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _.__js_helper$_nums = _.__js_helper$_strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    JsLinkedHashMap_addAll_closure: function JsLinkedHashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    _AllMatchesIterable: function _AllMatchesIterable(t0, t1, t2) {
      this._re = t0;
      this._string = t1;
      this.__js_helper$_start = t2;
    },
    _AllMatchesIterator: function _AllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._regExp = t0;
      _._string = t1;
      _._nextIndex = t2;
      _.__js_helper$_current = null;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2) {
      this._input = t0;
      this._pattern = t1;
      this.__js_helper$_index = t2;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    throwLateFieldNI(fieldName) {
      return A.throwExpression(A.LateError$fieldNI(fieldName));
    },
    throwLateFieldAI(fieldName) {
      return A.throwExpression(A.LateError$fieldAI(fieldName));
    },
    throwLateFieldADI(fieldName) {
      return A.throwExpression(A.LateError$fieldADI(fieldName));
    },
    _Cell$named(_name) {
      var t1 = new A._Cell(_name);
      return t1.__late_helper$_value = t1;
    },
    _Cell: function _Cell(t0) {
      this.__late_helper$_name = t0;
      this.__late_helper$_value = null;
    },
    _checkViewArguments(buffer, offsetInBytes, $length) {
    },
    _ensureNativeList(list) {
      var t1, result, i;
      if (type$.JSIndexable_dynamic._is(list))
        return list;
      t1 = J.getInterceptor$asx(list);
      result = A.List_List$filled(t1.get$length(list), null, false, type$.dynamic);
      for (i = 0; i < t1.get$length(list); ++i)
        B.JSArray_methods.$indexSet(result, i, t1.$index(list, i));
      return result;
    },
    NativeByteData_NativeByteData$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new DataView(buffer, offsetInBytes) : new DataView(buffer, offsetInBytes, $length);
    },
    NativeInt8List__create1(arg) {
      return new Int8Array(arg);
    },
    NativeUint8List_NativeUint8List($length) {
      return new Uint8Array($length);
    },
    NativeUint8List_NativeUint8List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new Uint8Array(buffer, offsetInBytes) : new Uint8Array(buffer, offsetInBytes, $length);
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    _checkValidRange(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw A.wrapException(A.diagnoseRangeError(start, end, $length));
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = A._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 12 || kind === 13;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    instantiatedGenericFunctionType(genericFunctionRti, instantiationRti) {
      var t1, cache, key, probe, rti;
      if (genericFunctionRti == null)
        return null;
      t1 = instantiationRti._rest;
      cache = genericFunctionRti._bindCache;
      if (cache == null)
        cache = genericFunctionRti._bindCache = new Map();
      key = instantiationRti._canonicalRecipe;
      probe = cache.get(key);
      if (probe != null)
        return probe;
      rti = A._substitute(init.typeUniverse, genericFunctionRti._primary, t1, 0);
      cache.set(key, rti);
      return rti;
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 12:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 13:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 14:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var t1,
        signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        t1 = closure.$signature();
        return t1;
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      var rti;
      if (object instanceof A.Object) {
        rti = object.$ti;
        return rti != null ? rti : A._instanceTypeFromConstructor(object);
      }
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? instance.__proto__.__proto__.constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeType(object) {
      var rti = object instanceof A.Closure ? A.closureFunctionType(object) : null;
      return A.createRuntimeType(rti == null ? A.instanceType(object) : rti);
    },
    createRuntimeType(rti) {
      var s, starErasedRecipe, starErasedRti,
        type = rti._cachedRuntimeType;
      if (type != null)
        return type;
      s = rti._canonicalRecipe;
      starErasedRecipe = s.replace(/\*/g, "");
      if (starErasedRecipe === s)
        return rti._cachedRuntimeType = new A._Type(rti);
      starErasedRti = A._Universe_eval(init.typeUniverse, starErasedRecipe, true);
      type = starErasedRti._cachedRuntimeType;
      return rti._cachedRuntimeType = type == null ? starErasedRti._cachedRuntimeType = new A._Type(starErasedRti) : type;
    },
    typeLiteral(recipe) {
      return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest(object) {
      var t1, unstarred, isFn, $name, testRti = this;
      if (testRti === type$.Object)
        return A._finishIsFn(testRti, object, A._isObject);
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return A._finishIsFn(testRti, object, A._isTop);
      t1 = testRti._kind;
      unstarred = t1 === 6 ? testRti._primary : testRti;
      if (unstarred === type$.int)
        isFn = A._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = A._isNum;
      else if (unstarred === type$.String)
        isFn = A._isString;
      else
        isFn = unstarred === type$.bool ? A._isBool : null;
      if (isFn != null)
        return A._finishIsFn(testRti, object, isFn);
      if (unstarred._kind === 9) {
        $name = unstarred._primary;
        if (unstarred._rest.every(A.isTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._finishIsFn(testRti, object, A._isListTestViaProperty);
          return A._finishIsFn(testRti, object, A._isTestViaProperty);
        }
      } else if (t1 === 7)
        return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
      return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
    },
    _finishIsFn(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck(object) {
      var t1, testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else {
        t1 = A.isNullable(testRti);
        if (t1)
          asFn = A._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs(testRti) {
      var t1,
        kind = testRti._kind;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              if (!(kind === 6 && A._nullIs(testRti._primary)))
                t1 = kind === 8 && A._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      return A._isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), null, testRti, null);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation(object) {
      var t1, testRti = this;
      if (object == null) {
        t1 = A.isNullable(testRti);
        if (t1)
          return object;
      } else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _failedAsCheck(object, testRti) {
      throw A.wrapException(A._TypeError$fromMessage(A._Error_compose(object, A.instanceOrFunctionType(object, testRti), A._rtiToString(testRti, null))));
    },
    checkTypeBound(type, bound, variable, methodName) {
      var _null = null;
      if (A._isSubtype(init.typeUniverse, type, _null, bound, _null))
        return type;
      throw A.wrapException(A._TypeError$fromMessage("The type argument '" + A._rtiToString(type, _null) + "' is not a subtype of the type variable bound '" + A._rtiToString(bound, _null) + "' of type variable '" + variable + "' in '" + methodName + "'."));
    },
    _Error_compose(object, objectRti, checkedTypeDescription) {
      var objectDescription = A.Error_safeToString(object);
      return objectDescription + ": type '" + A._rtiToString(objectRti == null ? A.instanceType(object) : objectRti, null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, null, type));
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num?"));
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _recordRtiToString(recordType, genericContext) {
      var fieldCount, names, namesIndex, s, comma, i,
        partialShape = recordType._primary,
        fields = recordType._rest;
      if ("" === partialShape)
        return "(" + A._rtiArrayToString(fields, genericContext) + ")";
      fieldCount = fields.length;
      names = partialShape.split(",");
      namesIndex = names.length - fieldCount;
      for (s = "(", comma = "", i = 0; i < fieldCount; ++i, comma = ", ") {
        s += comma;
        if (namesIndex === 0)
          s += "{";
        s += A._rtiToString(fields[i], genericContext);
        if (namesIndex >= 0)
          s += " " + names[namesIndex];
        ++namesIndex;
      }
      return s + "})";
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, t2, typeParametersText, typeSep, t3, t4, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = A._setArrayType([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          B.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          t3 = genericContext.length;
          t4 = t3 - 1 - i;
          if (!(t4 >= 0))
            return A.ioore(genericContext, t4);
          typeParametersText = B.JSString_methods.$add(typeParametersText + typeSep, genericContext[t4]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            if (!(boundRti === t2))
              t3 = false;
            else
              t3 = true;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = A._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 12 || argumentKind === 13 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return A._recordRtiToString(rti, genericContext);
      if (kind === 12)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 13)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 14) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (!(t1 >= 0 && t1 < t2))
          return A.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && A.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && A.isNullable(starArgument._primary))
            return starArgument;
          else
            return A.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, t2, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.legacy_Object))
            t2 = false;
          else
            t2 = true;
        else
          t2 = true;
        if (t2 || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 14;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupRecordRti(universe, partialShapeTag, fields) {
      var rti, t1,
        key = "+" + (partialShapeTag + "(" + A._Universe__canonicalRecipeJoin(fields) + ")"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = partialShapeTag;
      rti._rest = fields;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t2, i, ch, t3, array, head, base, end, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124)
          i = A._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              t3 = parser.u;
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              head = t1.pop();
              if (typeof head == "string")
                t1.push(A._Universe__lookupInterfaceRti(t3, head, array));
              else {
                base = A._Parser_toType(t3, parser.e, head);
                switch (base._kind) {
                  case 12:
                    t1.push(A._Universe__lookupGenericFunctionRti(t3, base, array, parser.n));
                    break;
                  default:
                    t1.push(A._Universe__lookupBindingRti(t3, base, array));
                    break;
                }
              }
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(A._Universe__lookupStarRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(-3);
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              A._Parser_handleArguments(parser, t1);
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            case 43:
              end = source.indexOf("(", i);
              t1.push(source.substring(i, end));
              t1.push(-4);
              t1.push(parser.p);
              parser.p = t1.length;
              i = end + 1;
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleArguments(parser, stack) {
      var optionalPositional, named, requiredPositional, returnType, parameters, _null = null,
        t1 = parser.u,
        head = stack.pop();
      if (typeof head == "number")
        switch (head) {
          case -1:
            optionalPositional = stack.pop();
            named = _null;
            break;
          case -2:
            named = stack.pop();
            optionalPositional = _null;
            break;
          default:
            stack.push(head);
            named = _null;
            optionalPositional = named;
            break;
        }
      else {
        stack.push(head);
        named = _null;
        optionalPositional = named;
      }
      requiredPositional = A._Parser_collectArray(parser, stack);
      head = stack.pop();
      switch (head) {
        case -3:
          head = stack.pop();
          if (optionalPositional == null)
            optionalPositional = t1.sEA;
          if (named == null)
            named = t1.sEA;
          returnType = A._Parser_toType(t1, parser.e, head);
          parameters = new A._FunctionParameters();
          parameters._requiredPositional = requiredPositional;
          parameters._optionalPositional = optionalPositional;
          parameters._named = named;
          stack.push(A._Universe__lookupFunctionRti(t1, returnType, parameters));
          return;
        case -4:
          stack.push(A._Universe__lookupRecordRti(t1, stack.pop(), requiredPositional));
          return;
        default:
          throw A.wrapException(A.AssertionError$("Unexpected state under `()`: " + A.S(head)));
      }
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_collectArray(parser, stack) {
      var array = stack.splice(parser.p);
      A._Parser_toTypes(parser.u, parser.e, array);
      parser.p = stack.pop();
      return array;
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number") {
        environment.toString;
        return A._Parser_indexToType(universe, environment, item);
      } else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    _isSubtype(universe, s, sEnv, t, tEnv) {
      var t1, sKind, leftTypeVariable, tKind, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isStrongTopType(s))
        return false;
      if (s._kind !== 1)
        t1 = false;
      else
        t1 = true;
      if (t1)
        return true;
      leftTypeVariable = sKind === 14;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        if (sKind === 6)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 7;
      }
      if (sKind === 6)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = A.Rti__getQuestionFromStar(universe, t);
        return A._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = A._isSubtype(universe, type$.Null, sEnv, t, tEnv);
        return t1 && A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      }
      if (tKind === 8) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = A._isSubtype(universe, s, sEnv, type$.Null, tEnv);
        return t1 || A._isSubtype(universe, s, sEnv, t._primary, tEnv);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 12;
      if ((!t1 || sKind === 13) && t === type$.Function)
        return true;
      if (tKind === 13) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 13)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      t1 = sKind === 11;
      if (t1 && t === type$.Record)
        return true;
      if (t1 && tKind === 11)
        return A._isRecordSubtype(universe, s, sEnv, t, tEnv);
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv) {
      var rule, recipes, $length, supertypeArgs, i, t1, t2,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv);
      }
      t1 = s._rest;
      t2 = t._rest;
      return A._areArgumentsSubtypes(universe, t1, null, sEnv, t2, tEnv);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv) {
      var i, t1, t2,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i) {
        t1 = sArgs[i];
        t2 = tArgs[i];
        if (!A._isSubtype(universe, t1, sEnv, t2, tEnv))
          return false;
      }
      return true;
    },
    _isRecordSubtype(universe, s, sEnv, t, tEnv) {
      var i,
        sFields = s._rest,
        tFields = t._rest,
        sCount = sFields.length;
      if (sCount !== tFields.length)
        return false;
      if (s._primary !== t._primary)
        return false;
      for (i = 0; i < sCount; ++i)
        if (!A._isSubtype(universe, sFields[i], sEnv, tFields[i], tEnv))
          return false;
      return true;
    },
    isNullable(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && A.isNullable(t._primary)))
              t1 = kind === 8 && A.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType(t) {
      var t1;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isStrongTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this._message = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      A.Timer__createTimer(B.C_Duration, type$.void_Function._as(callback));
    },
    Timer__createTimer(duration, callback) {
      return A._TimerImpl$(0, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl();
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow(object, completer) {
      completer.completeError$2(A.unwrapException(object), A.getTraceFromException(object));
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (type$.Future_dynamic._is(object))
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new A._wrapJsFunctionForAsync_closure($protected), type$.void, type$.int, type$.dynamic);
    },
    _IterationMarker_yieldStar(values) {
      return new A._IterationMarker(values, 1);
    },
    _IterationMarker_endOfIteration() {
      return B._IterationMarker_null_2;
    },
    _IterationMarker_uncaughtError(error) {
      return new A._IterationMarker(error, 3);
    },
    _makeSyncStarIterable(body, $T) {
      return new A._SyncStarIterable(body, $T._eval$1("_SyncStarIterable<0>"));
    },
    AsyncError$(error, stackTrace) {
      var t1 = A.checkNotNullable(error, "error", type$.Object);
      return new A.AsyncError(t1, stackTrace == null ? A.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B._StringStackTrace_3uE;
    },
    Future_Future(computation, $T) {
      var result = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      A.Timer_Timer(B.C_Duration, new A.Future_Future_closure(result, computation));
      return result;
    },
    Future_Future$microtask(computation, $T) {
      var result = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      A.scheduleMicrotask(new A.Future_Future$microtask_closure(result, computation));
      return result;
    },
    Future_Future$value(value, $T) {
      var t1, t2;
      if (value == null) {
        $T._as(value);
        t1 = value;
      } else
        t1 = value;
      t2 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t2._asyncComplete$1(t1);
      return t2;
    },
    Future_Future$error(error, stackTrace, $T) {
      var t1;
      A.checkNotNullable(error, "error", type$.Object);
      $.Zone__current !== B.C__RootZone;
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t1._asyncCompleteError$2(error, stackTrace);
      return t1;
    },
    Future_wait(futures, $T) {
      var error, stackTrace, handleError, future, pos, e, st, t1, t2, _i, t3, exception, _box_0 = {}, cleanUp = null,
        eagerError = false,
        _future = new A._Future($.Zone__current, $T._eval$1("_Future<List<0>>"));
      _box_0.values = null;
      _box_0.remaining = 0;
      error = A._Cell$named("error");
      stackTrace = A._Cell$named("stackTrace");
      handleError = new A.Future_wait_handleError(_box_0, cleanUp, eagerError, _future, error, stackTrace);
      try {
        for (t1 = futures.length, t2 = type$.Null, _i = 0, t3 = 0; _i < futures.length; futures.length === t1 || (0, A.throwConcurrentModificationError)(futures), ++_i) {
          future = futures[_i];
          pos = t3;
          future.then$1$2$onError(new A.Future_wait_closure(_box_0, pos, _future, cleanUp, eagerError, error, stackTrace, $T), handleError, t2);
          t3 = ++_box_0.remaining;
        }
        if (t3 === 0) {
          t1 = _future;
          t1._completeWithValue$1(A._setArrayType([], $T._eval$1("JSArray<0>")));
          return t1;
        }
        _box_0.values = A.List_List$filled(t3, null, false, $T._eval$1("0?"));
      } catch (exception) {
        e = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        if (_box_0.remaining === 0 || A.boolConversionCheck(eagerError))
          return A.Future_Future$error(e, st, $T._eval$1("List<0>"));
        else {
          error.__late_helper$_value = e;
          stackTrace.__late_helper$_value = st;
        }
      }
      return _future;
    },
    FutureExtensions_ignore(_this, $T) {
      if ($T._eval$1("_Future<0>")._is(_this))
        _this._state |= 1;
      else
        _this.then$1$2$onError(A.async__FutureExtensions__ignore$closure(), A.async__FutureExtensions__ignore$closure(), type$.void);
    },
    FutureExtensions__ignore(_, __) {
    },
    _completeWithErrorCallback(result, error, stackTrace) {
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      result._completeError$2(error, stackTrace);
    },
    _Future__chainCoreFuture(source, target) {
      var t1, t2, listeners;
      for (t1 = type$._Future_dynamic; t2 = source._state, (t2 & 4) !== 0;)
        source = t1._as(source._resultOrListeners);
      if ((t2 & 24) !== 0) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(source);
        A._Future__propagateToListeners(target, listeners);
      } else {
        listeners = type$.nullable__FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._state = target._state & 1 | 4;
        target._resultOrListeners = source;
        source._prependListeners$1(listeners);
      }
    },
    _Future__propagateToListeners(source, listeners) {
      var t2, t3, t4, _box_0, t5, t6, hasError, asyncError, nextListener, nextListener0, sourceResult, t7, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.AsyncError, t3 = type$.nullable__FutureListener_dynamic_dynamic, t4 = type$.Future_dynamic; true;) {
        _box_0 = {};
        t5 = t1._state;
        t6 = (t5 & 16) === 0;
        hasError = !t6;
        if (listeners == null) {
          if (hasError && (t5 & 1) === 0) {
            asyncError = t2._as(t1._resultOrListeners);
            A._rootHandleError(asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t5 = _box_1.source;
        sourceResult = t5._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t6) {
          t7 = t1.state;
          t7 = (t7 & 1) !== 0 || (t7 & 15) === 8;
        } else
          t7 = true;
        if (t7) {
          zone = t1.result._zone;
          if (hasError) {
            t5 = t5._zone === zone;
            t5 = !(t5 || t5);
          } else
            t5 = false;
          if (t5) {
            t2._as(sourceResult);
            A._rootHandleError(sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t6) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t4._is(t1)) {
            t5 = _box_0.listener.$ti;
            t5 = t5._eval$1("Future<2>")._is(t1) || !t5._rest[1]._is(t1);
          } else
            t5 = false;
          if (t5) {
            t4._as(t1);
            result = _box_0.listener.result;
            if ((t1._state & 24) !== 0) {
              current = t3._as(result._resultOrListeners);
              result._resultOrListeners = null;
              listeners = result._reverseListeners$1(current);
              result._state = t1._state & 30 | result._state & 1;
              result._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              A._Future__chainCoreFuture(t1, result);
            return;
          }
        }
        result = _box_0.listener.result;
        current = t3._as(result._resultOrListeners);
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t5 = _box_0.listenerValueOrError;
        if (!t1) {
          result.$ti._precomputed1._as(t5);
          result._state = 8;
          result._resultOrListeners = t5;
        } else {
          t2._as(t5);
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t5;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      var t1;
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$3$1(errorHandler, type$.dynamic, type$.Object, type$.StackTrace);
      t1 = type$.dynamic_Function_Object;
      if (t1._is(errorHandler))
        return t1._as(errorHandler);
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var t1, _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      t1 = false;
      if (t1) {
        A._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(callback));
        return;
      }
      A._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(currentZone.bindCallbackGuarded$1(callback)));
    },
    Stream_Stream$value(value, $T) {
      var _null = null,
        t1 = $T._eval$1("_AsyncStreamController<0>"),
        t2 = new A._AsyncStreamController(_null, _null, _null, _null, t1);
      t2._async$_add$1(value);
      t2._closeUnchecked$0();
      return new A._ControllerStream(t2, t1._eval$1("_ControllerStream<1>"));
    },
    StreamIterator_StreamIterator(stream, $T) {
      A.checkNotNullable(stream, "stream", type$.Object);
      return new A._StreamIterator($T._eval$1("_StreamIterator<0>"));
    },
    _runGuarded(notificationHandler) {
      return;
    },
    _BufferingStreamSubscription__registerDataHandler(zone, handleData, $T) {
      var t1 = handleData == null ? A.async___nullDataHandler$closure() : handleData;
      return type$.$env_1_1_void._bind$1($T)._eval$1("1(2)")._as(t1);
    },
    _BufferingStreamSubscription__registerErrorHandler(zone, handleError) {
      if (type$.void_Function_Object_StackTrace._is(handleError))
        return zone.registerBinaryCallback$3$1(handleError, type$.dynamic, type$.Object, type$.StackTrace);
      if (type$.void_Function_Object._is(handleError))
        return type$.dynamic_Function_Object._as(handleError);
      throw A.wrapException(A.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace.", null));
    },
    _nullDataHandler(value) {
    },
    _cancelAndValue(subscription, future, value) {
      var cancelFuture = subscription.cancel$0(),
        t1 = $.$get$Future__nullFuture();
      if (cancelFuture !== t1)
        cancelFuture.whenComplete$1(new A._cancelAndValue_closure(future, value));
      else
        future._complete$1(value);
    },
    Timer_Timer(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return A.Timer__createTimer(duration, type$.void_Function._as(callback));
      return A.Timer__createTimer(duration, type$.void_Function._as(t1.bindCallbackGuarded$1(callback)));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f, $R) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg, $R, $T) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      type$.void_Function._as(f);
      if (B.C__RootZone !== zone)
        f = zone.bindCallbackGuarded$1(f);
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl() {
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _IterationMarker: function _IterationMarker(t0, t1) {
      this.value = t0;
      this.state = t1;
    },
    _SyncStarIterator: function _SyncStarIterator(t0, t1) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._async$_current = null;
      _.$ti = t1;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    Future_Future_closure: function Future_Future_closure(t0, t1) {
      this.result = t0;
      this.computation = t1;
    },
    Future_Future$microtask_closure: function Future_Future$microtask_closure(t0, t1) {
      this.result = t0;
      this.computation = t1;
    },
    Future_wait_handleError: function Future_wait_handleError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.cleanUp = t1;
      _.eagerError = t2;
      _._future = t3;
      _.error = t4;
      _.stackTrace = t5;
    },
    Future_wait_closure: function Future_wait_closure(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._box_0 = t0;
      _.pos = t1;
      _._future = t2;
      _.cleanUp = t3;
      _.eagerError = t4;
      _.error = t5;
      _.stackTrace = t6;
      _.T = t7;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _SyncCompleter: function _SyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    Stream_first_closure: function Stream_first_closure(t0) {
      this.future = t0;
    },
    Stream_first_closure0: function Stream_first_closure0(t0, t1, t2) {
      this.$this = t0;
      this.subscription = t1;
      this.future = t2;
    },
    StreamSubscription: function StreamSubscription() {
    },
    StreamView: function StreamView() {
    },
    StreamTransformerBase: function StreamTransformerBase() {
    },
    _StreamController: function _StreamController() {
    },
    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {
      this.$this = t0;
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._controller = t0;
      _._async$_onData = t1;
      _._onDone = t2;
      _._zone = t3;
      _._state = t4;
      _._pending = _._cancelFuture = null;
      _.$ti = t5;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0, t1) {
      this.value = t0;
      this.next = null;
      this.$ti = t1;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents(t0) {
      var _ = this;
      _._state = 0;
      _.lastPendingEvent = _.firstPendingEvent = null;
      _.$ti = t0;
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0, t1, t2) {
      var _ = this;
      _._zone = t0;
      _._state = 0;
      _._onDone = t1;
      _.$ti = t2;
    },
    _StreamIterator: function _StreamIterator(t0) {
      this.$ti = t0;
    },
    _EmptyStream: function _EmptyStream(t0) {
      this.$ti = t0;
    },
    _cancelAndValue_closure: function _cancelAndValue_closure(t0, t1) {
      this.future = t0;
      this.value = t1;
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    HashMap_HashMap(equals, hashCode, isValidKey, $K, $V) {
      if (isValidKey == null)
        if (hashCode == null) {
          if (equals == null)
            return new A._HashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_HashMap<1,2>"));
          hashCode = A.collection___defaultHashCode$closure();
        } else {
          if (A.core__identityHashCode$closure() === hashCode && A.core__identical$closure() === equals)
            return new A._IdentityHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_IdentityHashMap<1,2>"));
          if (equals == null)
            equals = A.collection___defaultEquals$closure();
        }
      else {
        if (hashCode == null)
          hashCode = A.collection___defaultHashCode$closure();
        if (equals == null)
          equals = A.collection___defaultEquals$closure();
      }
      return A._CustomHashMap$(equals, hashCode, isValidKey, $K, $V);
    },
    _HashMap__getTableEntry(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable() {
      var table = Object.create(null);
      A._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    _CustomHashMap$(_equals, _hashCode, validKey, $K, $V) {
      var t1 = validKey != null ? validKey : new A._CustomHashMap_closure($K);
      return new A._CustomHashMap(_equals, _hashCode, t1, $K._eval$1("@<0>")._bind$1($V)._eval$1("_CustomHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap(equals, hashCode, isValidKey, $K, $V) {
      if (isValidKey == null)
        if (hashCode == null) {
          if (equals == null)
            return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
          hashCode = A.collection___defaultHashCode$closure();
        } else {
          if (A.core__identityHashCode$closure() === hashCode && A.core__identical$closure() === equals)
            return new A._LinkedIdentityHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_LinkedIdentityHashMap<1,2>"));
          if (equals == null)
            equals = A.collection___defaultEquals$closure();
        }
      else {
        if (hashCode == null)
          hashCode = A.collection___defaultHashCode$closure();
        if (equals == null)
          equals = A.collection___defaultEquals$closure();
      }
      return A._LinkedCustomHashMap$(equals, hashCode, isValidKey, $K, $V);
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return $K._eval$1("@<0>")._bind$1($V)._eval$1("LinkedHashMap<1,2>")._as(A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"))));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    _LinkedCustomHashMap$(_equals, _hashCode, validKey, $K, $V) {
      var t1 = validKey != null ? validKey : new A._LinkedCustomHashMap_closure($K);
      return new A._LinkedCustomHashMap(_equals, _hashCode, t1, $K._eval$1("@<0>")._bind$1($V)._eval$1("_LinkedCustomHashMap<1,2>"));
    },
    HashSet_HashSet($E) {
      return new A._HashSet($E._eval$1("_HashSet<0>"));
    },
    _HashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashSet_LinkedHashSet($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_empty($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    _LinkedHashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$(_set, _modifications, $E) {
      var t1 = new A._LinkedHashSetIterator(_set, _modifications, $E._eval$1("_LinkedHashSetIterator<0>"));
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    _defaultEquals(a, b) {
      return J.$eq$(a, b);
    },
    _defaultHashCode(a) {
      return J.get$hashCode$(a);
    },
    HashMap_HashMap$from(other, $K, $V) {
      var result = A.HashMap_HashMap(null, null, null, $K, $V);
      other.forEach$1(0, new A.HashMap_HashMap$from_closure(result, $K, $V));
      return result;
    },
    IterableBase_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      B.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      B.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting(o) {
      var t1, i;
      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
        if (o === $._toStringVisiting[i])
          return true;
      return false;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current());
        B.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            B.JSArray_methods.add$1(parts, A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          if (0 >= parts.length)
            return A.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return A.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              B.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        B.JSArray_methods.add$1(parts, elision);
      B.JSArray_methods.add$1(parts, penultimateString);
      B.JSArray_methods.add$1(parts, ultimateString);
    },
    LinkedHashMap_LinkedHashMap$of(other, $K, $V) {
      var t1 = A.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
      t1.addAll$1(0, other);
      return t1;
    },
    LinkedHashSet_LinkedHashSet$from(elements, $E) {
      var t1, _i,
        result = A.LinkedHashSet_LinkedHashSet($E);
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, A.throwConcurrentModificationError)(elements), ++_i)
        result.add$1(0, $E._as(elements[_i]));
      return result;
    },
    _LinkedListIterator$(list, $E) {
      return new A._LinkedListIterator(list, list._modificationCount, list._collection$_first, $E._eval$1("_LinkedListIterator<0>"));
    },
    MapBase_mapToString(m) {
      var result, t1 = {};
      if (A._isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        B.JSArray_methods.add$1($._toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        m.forEach$1(0, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _HashMap: function _HashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._keys = _._collection$_rest = _._nums = _._strings = null;
      _.$ti = t0;
    },
    _HashMap_addAll_closure: function _HashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._keys = _._collection$_rest = _._nums = _._strings = null;
      _.$ti = t0;
    },
    _CustomHashMap: function _CustomHashMap(t0, t1, t2, t3) {
      var _ = this;
      _._equals = t0;
      _._hashCode = t1;
      _._validKey = t2;
      _._collection$_length = 0;
      _._keys = _._collection$_rest = _._nums = _._strings = null;
      _.$ti = t3;
    },
    _CustomHashMap_closure: function _CustomHashMap_closure(t0) {
      this.K = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_map = t0;
      _._keys = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedIdentityHashMap: function _LinkedIdentityHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _.__js_helper$_nums = _.__js_helper$_strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    _LinkedCustomHashMap: function _LinkedCustomHashMap(t0, t1, t2, t3) {
      var _ = this;
      _._equals = t0;
      _._hashCode = t1;
      _._validKey = t2;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _.__js_helper$_nums = _.__js_helper$_strings = null;
      _._modifications = 0;
      _.$ti = t3;
    },
    _LinkedCustomHashMap_closure: function _LinkedCustomHashMap_closure(t0) {
      this.K = t0;
    },
    _HashSet: function _HashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_elements = _._collection$_rest = _._nums = _._strings = null;
      _.$ti = t0;
    },
    _HashSetIterator: function _HashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_elements = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._nums = _._strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._collection$_element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
      _.$ti = t2;
    },
    UnmodifiableListView: function UnmodifiableListView() {
    },
    HashMap_HashMap$from_closure: function HashMap_HashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    IterableBase: function IterableBase() {
    },
    LinkedList: function LinkedList(t0) {
      var _ = this;
      _._collection$_length = _._modificationCount = 0;
      _._collection$_first = null;
      _.$ti = t0;
    },
    _LinkedListIterator: function _LinkedListIterator(t0, t1, t2, t3) {
      var _ = this;
      _._list = t0;
      _._modificationCount = t1;
      _._collection$_current = null;
      _._collection$_next = t2;
      _._visitedFirst = false;
      _.$ti = t3;
    },
    LinkedListEntry: function LinkedListEntry() {
    },
    ListBase: function ListBase() {
    },
    ListMixin: function ListMixin() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    MapMixin: function MapMixin() {
    },
    MapMixin_entries_closure: function MapMixin_entries_closure(t0) {
      this.$this = t0;
    },
    _DoubleLinkedQueueEntry: function _DoubleLinkedQueueEntry() {
    },
    _DoubleLinkedQueueElement: function _DoubleLinkedQueueElement(t0, t1, t2) {
      var _ = this;
      _._queue = t0;
      _.element = t1;
      _._nextLink = _._previousLink = null;
      _.$ti = t2;
    },
    _DoubleLinkedQueueSentinel: function _DoubleLinkedQueueSentinel(t0) {
      this._nextLink = this._previousLink = null;
      this.$ti = t0;
    },
    DoubleLinkedQueue: function DoubleLinkedQueue(t0, t1) {
      this._sentinel = t0;
      this._elementCount = 0;
      this.$ti = t1;
    },
    _DoubleLinkedQueueIterator: function _DoubleLinkedQueueIterator(t0, t1, t2) {
      var _ = this;
      _._queue = t0;
      _._nextEntry = t1;
      _._collection$_current = null;
      _.$ti = t2;
    },
    SetMixin: function SetMixin() {
    },
    _SetBase: function _SetBase() {
    },
    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
    },
    __SetBase_Object_SetMixin: function __SetBase_Object_SetMixin() {
    },
    _parseJson(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.FormatException$(String(e), null, null);
        throw A.wrapException(t1);
      }
      t1 = A._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new A._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = A._convertJsonToDartLazy(object[i]);
      return object;
    },
    Utf8Decoder__convertIntercepted(allowMalformed, codeUnits, start, end) {
      var casted, result;
      if (codeUnits instanceof Uint8Array) {
        casted = codeUnits;
        end = casted.length;
        if (end - start < 15)
          return null;
        result = A.Utf8Decoder__convertInterceptedUint8List(allowMalformed, casted, start, end);
        if (result != null && allowMalformed)
          if (result.indexOf("\ufffd") >= 0)
            return null;
        return result;
      }
      return null;
    },
    Utf8Decoder__convertInterceptedUint8List(allowMalformed, codeUnits, start, end) {
      var decoder = allowMalformed ? $.$get$Utf8Decoder__decoderNonfatal() : $.$get$Utf8Decoder__decoder();
      if (decoder == null)
        return null;
      if (0 === start && end === codeUnits.length)
        return A.Utf8Decoder__useTextDecoder(decoder, codeUnits);
      return A.Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, A.RangeError_checkValidRange(start, end, codeUnits.length)));
    },
    Utf8Decoder__useTextDecoder(decoder, codeUnits) {
      var t1, exception;
      try {
        t1 = decoder.decode(codeUnits);
        return t1;
      } catch (exception) {
      }
      return null;
    },
    Base64Codec__checkPadding(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (B.JSInt_methods.$mod($length, 4) !== 0)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    _Base64Encoder_encodeChunk(alphabet, bytes, start, end, isLast, output, outputIndex, state) {
      var t1, t2, i, byteOr, byte, outputIndex0, t3, outputIndex1,
        bits = state >>> 2,
        expectedChars = 3 - (state & 3);
      for (t1 = J.getInterceptor$asx(bytes), t2 = output.length, i = start, byteOr = 0; i < end; ++i) {
        byte = t1.$index(bytes, i);
        byteOr = (byteOr | byte) >>> 0;
        bits = (bits << 8 | byte) & 16777215;
        --expectedChars;
        if (expectedChars === 0) {
          outputIndex0 = outputIndex + 1;
          t3 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 18 & 63);
          if (!(outputIndex < t2))
            return A.ioore(output, outputIndex);
          output[outputIndex] = t3;
          outputIndex = outputIndex0 + 1;
          t3 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 12 & 63);
          if (!(outputIndex0 < t2))
            return A.ioore(output, outputIndex0);
          output[outputIndex0] = t3;
          outputIndex0 = outputIndex + 1;
          t3 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 6 & 63);
          if (!(outputIndex < t2))
            return A.ioore(output, outputIndex);
          output[outputIndex] = t3;
          outputIndex = outputIndex0 + 1;
          t3 = B.JSString_methods._codeUnitAt$1(alphabet, bits & 63);
          if (!(outputIndex0 < t2))
            return A.ioore(output, outputIndex0);
          output[outputIndex0] = t3;
          bits = 0;
          expectedChars = 3;
        }
      }
      if (byteOr >= 0 && byteOr <= 255) {
        if (expectedChars < 3) {
          outputIndex0 = outputIndex + 1;
          outputIndex1 = outputIndex0 + 1;
          if (3 - expectedChars === 1) {
            t1 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 2 & 63);
            if (!(outputIndex < t2))
              return A.ioore(output, outputIndex);
            output[outputIndex] = t1;
            t1 = B.JSString_methods._codeUnitAt$1(alphabet, bits << 4 & 63);
            if (!(outputIndex0 < t2))
              return A.ioore(output, outputIndex0);
            output[outputIndex0] = t1;
            outputIndex = outputIndex1 + 1;
            if (!(outputIndex1 < t2))
              return A.ioore(output, outputIndex1);
            output[outputIndex1] = 61;
            if (!(outputIndex < t2))
              return A.ioore(output, outputIndex);
            output[outputIndex] = 61;
          } else {
            t1 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 10 & 63);
            if (!(outputIndex < t2))
              return A.ioore(output, outputIndex);
            output[outputIndex] = t1;
            t1 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 4 & 63);
            if (!(outputIndex0 < t2))
              return A.ioore(output, outputIndex0);
            output[outputIndex0] = t1;
            outputIndex = outputIndex1 + 1;
            t1 = B.JSString_methods._codeUnitAt$1(alphabet, bits << 2 & 63);
            if (!(outputIndex1 < t2))
              return A.ioore(output, outputIndex1);
            output[outputIndex1] = t1;
            if (!(outputIndex < t2))
              return A.ioore(output, outputIndex);
            output[outputIndex] = 61;
          }
          return 0;
        }
        return (bits << 2 | 3 - expectedChars) >>> 0;
      }
      for (i = start; i < end;) {
        byte = t1.$index(bytes, i);
        if (byte < 0 || byte > 255)
          break;
        ++i;
      }
      throw A.wrapException(A.ArgumentError$value(bytes, "Not a byte value at index " + i + ": 0x" + J.toRadixString$1$n(t1.$index(bytes, i), 16), null));
    },
    _Base64Decoder_decodeChunk(input, start, end, output, outIndex, state) {
      var t1, t2, i, charOr, char, t3, code, outIndex0, expectedPadding,
        _s31_ = "Invalid encoding before padding",
        _s17_ = "Invalid character",
        bits = B.JSInt_methods._shrOtherPositive$1(state, 2),
        count = state & 3,
        inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (t1 = inverseAlphabet.length, t2 = output.length, i = start, charOr = 0; i < end; ++i) {
        char = B.JSString_methods._codeUnitAt$1(input, i);
        charOr |= char;
        t3 = char & 127;
        if (!(t3 < t1))
          return A.ioore(inverseAlphabet, t3);
        code = inverseAlphabet[t3];
        if (code >= 0) {
          bits = (bits << 6 | code) & 16777215;
          count = count + 1 & 3;
          if (count === 0) {
            outIndex0 = outIndex + 1;
            if (!(outIndex < t2))
              return A.ioore(output, outIndex);
            output[outIndex] = bits >>> 16 & 255;
            outIndex = outIndex0 + 1;
            if (!(outIndex0 < t2))
              return A.ioore(output, outIndex0);
            output[outIndex0] = bits >>> 8 & 255;
            outIndex0 = outIndex + 1;
            if (!(outIndex < t2))
              return A.ioore(output, outIndex);
            output[outIndex] = bits & 255;
            outIndex = outIndex0;
            bits = 0;
          }
          continue;
        } else if (code === -1 && count > 1) {
          if (charOr > 127)
            break;
          if (count === 3) {
            if ((bits & 3) !== 0)
              throw A.wrapException(A.FormatException$(_s31_, input, i));
            outIndex0 = outIndex + 1;
            if (!(outIndex < t2))
              return A.ioore(output, outIndex);
            output[outIndex] = bits >>> 10;
            if (!(outIndex0 < t2))
              return A.ioore(output, outIndex0);
            output[outIndex0] = bits >>> 2;
          } else {
            if ((bits & 15) !== 0)
              throw A.wrapException(A.FormatException$(_s31_, input, i));
            if (!(outIndex < t2))
              return A.ioore(output, outIndex);
            output[outIndex] = bits >>> 4;
          }
          expectedPadding = (3 - count) * 3;
          if (char === 37)
            expectedPadding += 2;
          return A._Base64Decoder__checkPadding(input, i + 1, end, -expectedPadding - 1);
        }
        throw A.wrapException(A.FormatException$(_s17_, input, i));
      }
      if (charOr >= 0 && charOr <= 127)
        return (bits << 2 | count) >>> 0;
      for (i = start; i < end; ++i) {
        char = B.JSString_methods._codeUnitAt$1(input, i);
        if (char > 127)
          break;
      }
      throw A.wrapException(A.FormatException$(_s17_, input, i));
    },
    _Base64Decoder__allocateBuffer(input, start, end, state) {
      var paddingStart = A._Base64Decoder__trimPaddingChars(input, start, end),
        $length = (state & 3) + (paddingStart - start),
        bufferLength = B.JSInt_methods._shrOtherPositive$1($length, 2) * 3,
        remainderLength = $length & 3;
      if (remainderLength !== 0 && paddingStart < end)
        bufferLength += remainderLength - 1;
      if (bufferLength > 0)
        return new Uint8Array(bufferLength);
      return $.$get$_Base64Decoder__emptyBuffer();
    },
    _Base64Decoder__trimPaddingChars(input, start, end) {
      var char,
        newEnd = end,
        index = newEnd,
        padding = 0;
      while (true) {
        if (!(index > start && padding < 2))
          break;
        c$0: {
          --index;
          char = B.JSString_methods.codeUnitAt$1(input, index);
          if (char === 61) {
            ++padding;
            newEnd = index;
            break c$0;
          }
          if ((char | 32) === 100) {
            if (index === start)
              break;
            --index;
            char = B.JSString_methods.codeUnitAt$1(input, index);
          }
          if (char === 51) {
            if (index === start)
              break;
            --index;
            char = B.JSString_methods.codeUnitAt$1(input, index);
          }
          if (char === 37) {
            ++padding;
            newEnd = index;
            break c$0;
          }
          break;
        }
      }
      return newEnd;
    },
    _Base64Decoder__checkPadding(input, start, end, state) {
      var expectedPadding, char;
      if (start === end)
        return state;
      expectedPadding = -state - 1;
      for (; expectedPadding > 0;) {
        char = B.JSString_methods._codeUnitAt$1(input, start);
        if (expectedPadding === 3) {
          if (char === 61) {
            expectedPadding -= 3;
            ++start;
            break;
          }
          if (char === 37) {
            --expectedPadding;
            ++start;
            if (start === end)
              break;
            char = B.JSString_methods._codeUnitAt$1(input, start);
          } else
            break;
        }
        if ((expectedPadding > 3 ? expectedPadding - 3 : expectedPadding) === 2) {
          if (char !== 51)
            break;
          ++start;
          --expectedPadding;
          if (start === end)
            break;
          char = B.JSString_methods._codeUnitAt$1(input, start);
        }
        if ((char | 32) !== 100)
          break;
        ++start;
        --expectedPadding;
        if (start === end)
          break;
      }
      if (start !== end)
        throw A.wrapException(A.FormatException$("Invalid padding character", input, start));
      return -expectedPadding - 1;
    },
    JsonUnsupportedObjectError$(unsupportedObject, cause, partialResult) {
      return new A.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier$(_sink, _toEncodable) {
      return new A._JsonStringStringifier(_sink, [], A.convert___defaultToEncodable$closure());
    },
    _Utf8Decoder_errorDescription(state) {
      switch (state) {
        case 65:
          return "Missing extension byte";
        case 67:
          return "Unexpected extension byte";
        case 69:
          return "Invalid UTF-8 byte";
        case 71:
          return "Overlong encoding";
        case 73:
          return "Out of unicode range";
        case 75:
          return "Encoded surrogate";
        case 77:
          return "Unfinished UTF-8 octet sequence";
        default:
          return "";
      }
    },
    _Utf8Decoder__makeUint8List(codeUnits, start, end) {
      var t1, i, b,
        $length = end - start,
        bytes = new Uint8Array($length);
      for (t1 = J.getInterceptor$asx(codeUnits), i = 0; i < $length; ++i) {
        b = t1.$index(codeUnits, start + i);
        if ((b & 4294967040) >>> 0 !== 0)
          b = 255;
        if (!(i < $length))
          return A.ioore(bytes, i);
        bytes[i] = b;
      }
      return bytes;
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._data = null;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._convert$_parent = t0;
    },
    Utf8Decoder__decoder_closure: function Utf8Decoder__decoder_closure() {
    },
    Utf8Decoder__decoderNonfatal_closure: function Utf8Decoder__decoderNonfatal_closure() {
    },
    AsciiCodec: function AsciiCodec() {
    },
    _UnicodeSubsetEncoder: function _UnicodeSubsetEncoder() {
    },
    AsciiEncoder: function AsciiEncoder(t0) {
      this._subsetMask = t0;
    },
    Base64Codec: function Base64Codec(t0) {
      this._encoder = t0;
    },
    Base64Encoder: function Base64Encoder(t0) {
      this._urlSafe = t0;
    },
    _Base64Encoder: function _Base64Encoder(t0) {
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    Base64Decoder: function Base64Decoder() {
    },
    _Base64Decoder: function _Base64Decoder() {
      this._convert$_state = 0;
    },
    ByteConversionSink: function ByteConversionSink() {
    },
    ByteConversionSinkBase: function ByteConversionSinkBase() {
    },
    _ByteCallbackSink: function _ByteCallbackSink(t0, t1) {
      this._callback = t0;
      this._convert$_buffer = t1;
      this._bufferIndex = 0;
    },
    ChunkedConversionSink: function ChunkedConversionSink() {
    },
    Codec: function Codec() {
    },
    _FusedCodec: function _FusedCodec(t0, t1, t2) {
      this._convert$_first = t0;
      this._second = t1;
      this.$ti = t2;
    },
    Converter: function Converter() {
    },
    _FusedConverter: function _FusedConverter(t0, t1, t2) {
      this._convert$_first = t0;
      this._second = t1;
      this.$ti = t2;
    },
    Encoding: function Encoding() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0) {
      this._toEncodable = t0;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = 0;
      this._convert$_buffer = t0;
    },
    Utf8Decoder: function Utf8Decoder(t0) {
      this._allowMalformed = t0;
    },
    _Utf8Decoder: function _Utf8Decoder(t0) {
      this.allowMalformed = t0;
      this._convert$_state = 16;
      this._charOrIndex = 0;
    },
    identityHashCode(object) {
      return A.objectHashCode(object);
    },
    int_parse(source, radix) {
      var value = A.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$(source, null, null));
    },
    Error__objectToString(object) {
      if (object instanceof A.Closure)
        return object.toString$0(0);
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Error__throw(error, stackTrace) {
      error = A.wrapException(error);
      if (error == null)
        error = type$.Object._as(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
      throw A.wrapException("unreachable");
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, growable, $E) {
      var t1,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, $E._as(t1.get$current()));
      if (growable)
        return list;
      return J.JSArray_markFixedList(list, $E);
    },
    List_List$of(elements, growable, $E) {
      var t1;
      if (growable)
        return A.List_List$_of(elements, $E);
      t1 = J.JSArray_markFixedList(A.List_List$_of(elements, $E), $E);
      return t1;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, t1.get$current());
      return list;
    },
    List_List$unmodifiable(elements, $E) {
      var result = A.List_List$from(elements, false, $E);
      result.fixed$length = Array;
      result.immutable$list = Array;
      return result;
    },
    String_String$fromCharCodes(charCodes, start, end) {
      var array, len;
      if (Array.isArray(charCodes)) {
        array = charCodes;
        len = array.length;
        end = A.RangeError_checkValidRange(start, end, len);
        return A.Primitives_stringFromCharCodes(start > 0 || end < len ? array.slice(start, end) : array);
      }
      if (type$.NativeUint8List._is(charCodes))
        return A.Primitives_stringFromNativeUint8List(charCodes, start, A.RangeError_checkValidRange(start, end, charCodes.length));
      return A.String__stringFromIterable(charCodes, start, end);
    },
    String_String$fromCharCode(charCode) {
      return A.Primitives_stringFromCharCode(charCode);
    },
    String__stringFromIterable(charCodes, start, end) {
      var t1, it, i, list, _null = null;
      if (start < 0)
        throw A.wrapException(A.RangeError$range(start, 0, J.get$length$asx(charCodes), _null, _null));
      t1 = end == null;
      if (!t1 && end < start)
        throw A.wrapException(A.RangeError$range(end, start, J.get$length$asx(charCodes), _null, _null));
      it = J.get$iterator$ax(charCodes);
      for (i = 0; i < start; ++i)
        if (!it.moveNext$0())
          throw A.wrapException(A.RangeError$range(start, 0, i, _null, _null));
      list = [];
      if (t1)
        for (; it.moveNext$0();)
          list.push(it.get$current());
      else
        for (i = start; i < end; ++i) {
          if (!it.moveNext$0())
            throw A.wrapException(A.RangeError$range(end, start, i, _null, _null));
          list.push(it.get$current());
        }
      return A.Primitives_stringFromCharCodes(list);
    },
    RegExp_RegExp(source, multiLine) {
      return new A.JSSyntaxRegExp(source, A.JSSyntaxRegExp_makeNative(source, multiLine, true, false, false, false));
    },
    identical(a, b) {
      return a == null ? b == null : a === b;
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current());
      }
      return string;
    },
    Uri_base() {
      var uri = A.Primitives_currentUri();
      if (uri != null)
        return A.Uri_parse(uri);
      throw A.wrapException(A.UnsupportedError$("'Uri.base' is not supported"));
    },
    _Uri__uriEncode(canonicalTable, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte, t3,
        _s16_ = "0123456789ABCDEF";
      if (encoding === B.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding()._nativeRegExp;
        t1 = t1.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      bytes = encoding.encode$1(text);
      for (t1 = J.getInterceptor$asx(bytes), i = 0, t2 = ""; i < t1.get$length(bytes); ++i) {
        byte = t1.$index(bytes, i);
        if (byte < 128) {
          t3 = B.JSInt_methods._shrOtherPositive$1(byte, 4);
          if (!(t3 < 8))
            return A.ioore(canonicalTable, t3);
          t3 = (canonicalTable[t3] & 1 << (byte & 15)) !== 0;
        } else
          t3 = false;
        if (t3)
          t2 += A.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[B.JSInt_methods._shrOtherPositive$1(byte, 4) & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    StackTrace_current() {
      var stackTrace, exception;
      if (A.boolConversionCheck($.$get$_hasErrorStackProperty()))
        return A.getTraceFromException(new Error());
      try {
        throw A.wrapException("");
      } catch (exception) {
        stackTrace = A.getTraceFromException(exception);
        return stackTrace;
      }
    },
    DateTime__fourDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Error__objectToString(object);
    },
    Error_throwWithStackTrace(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      A.checkNotNullable(stackTrace, "stackTrace", type$.StackTrace);
      A.Error__throw(error, stackTrace);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    ArgumentError_checkNotNull(argument, $name, $T) {
      return argument;
    },
    RangeError$value(value, $name) {
      return new A.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValueInInterval(value, minValue, maxValue, $name) {
      if (value < minValue || value > maxValue)
        throw A.wrapException(A.RangeError$range(value, minValue, maxValue, $name, null));
      return value;
    },
    RangeError_checkValidRange(start, end, $length) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$withLength(invalidValue, $length, indexable, message, $name) {
      return new A.IndexError($length, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception(message) {
      return new A._Exception(message);
    },
    FormatException$(message, source, offset) {
      return new A.FormatException(message, source, offset);
    },
    Map_castFrom(source, $K, $V, K2, V2) {
      return new A.CastMap(source, $K._eval$1("@<0>")._bind$1($V)._bind$1(K2)._bind$1(V2)._eval$1("CastMap<1,2,3,4>"));
    },
    Object_hash(object1, object2, object3, object4, object5, object6, object7) {
      var t1, t2;
      if (B.C_SentinelValue === object3) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2));
      }
      if (B.C_SentinelValue === object4) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3));
      }
      if (B.C_SentinelValue === object5) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4));
      }
      if (B.C_SentinelValue === object6) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5));
      }
      if (B.C_SentinelValue === object7) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6));
      }
      t1 = J.get$hashCode$(object1);
      object2 = J.get$hashCode$(object2);
      object3 = J.get$hashCode$(object3);
      object4 = J.get$hashCode$(object4);
      object5 = J.get$hashCode$(object5);
      object6 = J.get$hashCode$(object6);
      object7 = J.get$hashCode$(object7);
      t2 = $.$get$_hashSeed();
      return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(t2, t1), object2), object3), object4), object5), object6), object7));
    },
    print(object) {
      A.printString(object);
    },
    Uri_Uri$dataFromString($content) {
      var t1, _null = null,
        buffer = new A.StringBuffer(""),
        indices = A._setArrayType([-1], type$.JSArray_int);
      A.UriData__writeUri(_null, _null, _null, buffer, indices);
      B.JSArray_methods.add$1(indices, buffer._contents.length);
      buffer._contents += ",";
      A.UriData__uriEncodeBytes(B.List_CVk, B.C_AsciiCodec.encode$1($content), buffer);
      t1 = buffer._contents;
      return new A.UriData(t1.charCodeAt(0) == 0 ? t1 : t1, indices, _null).get$uri();
    },
    Uri_parse(uri) {
      var delta, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t1, t2, schemeAuth, queryStart0, pathStart0, userInfoStart, userInfo, host, portNumber, port, path, query, _null = null,
        end = uri.length;
      if (end >= 5) {
        delta = ((B.JSString_methods._codeUnitAt$1(uri, 4) ^ 58) * 3 | B.JSString_methods._codeUnitAt$1(uri, 0) ^ 100 | B.JSString_methods._codeUnitAt$1(uri, 1) ^ 97 | B.JSString_methods._codeUnitAt$1(uri, 2) ^ 116 | B.JSString_methods._codeUnitAt$1(uri, 3) ^ 97) >>> 0;
        if (delta === 0)
          return A.UriData__parse(end < end ? B.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return A.UriData__parse(B.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();
      }
      indices = A.List_List$filled(8, 0, false, type$.int);
      B.JSArray_methods.$indexSet(indices, 0, 0);
      B.JSArray_methods.$indexSet(indices, 1, -1);
      B.JSArray_methods.$indexSet(indices, 2, -1);
      B.JSArray_methods.$indexSet(indices, 7, -1);
      B.JSArray_methods.$indexSet(indices, 3, 0);
      B.JSArray_methods.$indexSet(indices, 4, 0);
      B.JSArray_methods.$indexSet(indices, 5, end);
      B.JSArray_methods.$indexSet(indices, 6, end);
      if (A._scan(uri, 0, end, 0, indices) >= 14)
        B.JSArray_methods.$indexSet(indices, 7, end);
      schemeEnd = indices[1];
      if (schemeEnd >= 0)
        if (A._scan(uri, 0, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < 0;
      if (isSimple)
        if (hostStart > schemeEnd + 3) {
          scheme = _null;
          isSimple = false;
        } else {
          t1 = portStart > 0;
          if (t1 && portStart + 1 === pathStart) {
            scheme = _null;
            isSimple = false;
          } else {
            if (!B.JSString_methods.startsWith$2(uri, "\\", pathStart))
              if (hostStart > 0)
                t2 = B.JSString_methods.startsWith$2(uri, "\\", hostStart - 1) || B.JSString_methods.startsWith$2(uri, "\\", hostStart - 2);
              else
                t2 = false;
            else
              t2 = true;
            if (t2) {
              scheme = _null;
              isSimple = false;
            } else {
              if (!(queryStart < end && queryStart === pathStart + 2 && B.JSString_methods.startsWith$2(uri, "..", pathStart)))
                t2 = queryStart > pathStart + 2 && B.JSString_methods.startsWith$2(uri, "/..", queryStart - 3);
              else
                t2 = true;
              if (t2) {
                scheme = _null;
                isSimple = false;
              } else {
                if (schemeEnd === 4)
                  if (B.JSString_methods.startsWith$2(uri, "file", 0)) {
                    if (hostStart <= 0) {
                      if (!B.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                        schemeAuth = "file:///";
                        delta = 3;
                      } else {
                        schemeAuth = "file://";
                        delta = 2;
                      }
                      uri = schemeAuth + B.JSString_methods.substring$2(uri, pathStart, end);
                      schemeEnd -= 0;
                      t1 = delta - 0;
                      queryStart += t1;
                      fragmentStart += t1;
                      end = uri.length;
                      hostStart = 7;
                      portStart = 7;
                      pathStart = 7;
                    } else if (pathStart === queryStart) {
                      ++fragmentStart;
                      queryStart0 = queryStart + 1;
                      uri = B.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                      ++end;
                      queryStart = queryStart0;
                    }
                    scheme = "file";
                  } else if (B.JSString_methods.startsWith$2(uri, "http", 0)) {
                    if (t1 && portStart + 3 === pathStart && B.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                      fragmentStart -= 3;
                      pathStart0 = pathStart - 3;
                      queryStart -= 3;
                      uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                      end -= 3;
                      pathStart = pathStart0;
                    }
                    scheme = "http";
                  } else
                    scheme = _null;
                else if (schemeEnd === 5 && B.JSString_methods.startsWith$2(uri, "https", 0)) {
                  if (t1 && portStart + 4 === pathStart && B.JSString_methods.startsWith$2(uri, "443", portStart + 1)) {
                    fragmentStart -= 4;
                    pathStart0 = pathStart - 4;
                    queryStart -= 4;
                    uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "https";
                } else
                  scheme = _null;
                isSimple = true;
              }
            }
          }
        }
      else
        scheme = _null;
      if (isSimple) {
        if (end < uri.length) {
          uri = B.JSString_methods.substring$2(uri, 0, end);
          schemeEnd -= 0;
          hostStart -= 0;
          portStart -= 0;
          pathStart -= 0;
          queryStart -= 0;
          fragmentStart -= 0;
        }
        return new A._SimpleUri(uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      }
      if (scheme == null)
        if (schemeEnd > 0)
          scheme = A._Uri__makeScheme(uri, 0, schemeEnd);
        else {
          if (schemeEnd === 0)
            A._Uri__fail(uri, 0, "Invalid empty scheme");
          scheme = "";
        }
      if (hostStart > 0) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? A._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = A._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = A.Primitives_parseInt(B.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = A._Uri__makePort(portNumber == null ? A.throwExpression(A.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        } else
          port = _null;
      } else {
        port = _null;
        host = port;
        userInfo = "";
      }
      path = A._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? A._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragmentStart < end ? A._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    Uri_decodeComponent(encodedComponent) {
      A._asString(encodedComponent);
      return A._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, B.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address(host, start, end) {
      var i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new A.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (i = start, partStart = i, partIndex = 0; i < end; ++i) {
        char = B.JSString_methods.codeUnitAt$1(host, i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = A.int_parse(B.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          if (!(partIndex < 4))
            return A.ioore(result, partIndex);
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = A.int_parse(B.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      if (!(partIndex < 4))
        return A.ioore(result, partIndex);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, t1, last, bytes, wildCardLength, index, value, j, t2, _null = null,
        error = new A.Uri_parseIPv6Address_error(host),
        parseHex = new A.Uri_parseIPv6Address_parseHex(error, host);
      if (host.length < 2)
        error.call$2("address is too short", _null);
      parts = A._setArrayType([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        char = B.JSString_methods.codeUnitAt$1(host, i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (B.JSString_methods.codeUnitAt$1(host, i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            B.JSArray_methods.add$1(parts, -1);
            wildcardSeen = true;
          } else
            B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$2("too few parts", _null);
      atEnd = partStart === end;
      t1 = B.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, end));
        else {
          last = A.Uri__parseIPv4Address(host, partStart, end);
          B.JSArray_methods.add$1(parts, (last[0] << 8 | last[1]) >>> 0);
          B.JSArray_methods.add$1(parts, (last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$2("an address with a wildcard must have less than 7 parts", _null);
      } else if (parts.length !== 8)
        error.call$2("an address without a wildcard must contain exactly 8 parts", _null);
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            if (!(index >= 0 && index < 16))
              return A.ioore(bytes, index);
            bytes[index] = 0;
            t2 = index + 1;
            if (!(t2 < 16))
              return A.ioore(bytes, t2);
            bytes[t2] = 0;
            index += 2;
          }
        else {
          t2 = B.JSInt_methods._shrOtherPositive$1(value, 8);
          if (!(index >= 0 && index < 16))
            return A.ioore(bytes, index);
          bytes[index] = t2;
          t2 = index + 1;
          if (!(t2 < 16))
            return A.ioore(bytes, t2);
          bytes[t2] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri$_internal(scheme, _userInfo, _host, _port, path, _query, _fragment) {
      return new A._Uri(scheme, _userInfo, _host, _port, path, _query, _fragment);
    },
    _Uri__Uri(host, path, pathSegments, scheme) {
      var userInfo, query, fragment, port, isFile, t1, hasAuthority, t2, _null = null;
      scheme = scheme == null ? "" : A._Uri__makeScheme(scheme, 0, scheme.length);
      userInfo = A._Uri__makeUserInfo(_null, 0, 0);
      host = A._Uri__makeHost(host, 0, host == null ? 0 : host.length, false);
      query = A._Uri__makeQuery(_null, 0, 0, _null);
      fragment = A._Uri__makeFragment(_null, 0, 0);
      port = A._Uri__makePort(_null, scheme);
      isFile = scheme === "file";
      if (host == null)
        t1 = userInfo.length !== 0 || port != null || isFile;
      else
        t1 = false;
      if (t1)
        host = "";
      t1 = host == null;
      hasAuthority = !t1;
      path = A._Uri__makePath(path, 0, path == null ? 0 : path.length, pathSegments, scheme, hasAuthority);
      t2 = scheme.length === 0;
      if (t2 && t1 && !B.JSString_methods.startsWith$1(path, "/"))
        path = A._Uri__normalizeRelativePath(path, !t2 || hasAuthority);
      else
        path = A._Uri__removeDotSegments(path);
      return A._Uri$_internal(scheme, userInfo, t1 && B.JSString_methods.startsWith$1(path, "//") ? "" : host, port, path, query, fragment);
    },
    _Uri__defaultPort(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail(uri, index, message) {
      throw A.wrapException(A.FormatException$(message, uri, index));
    },
    _Uri__Uri$file(path, windows) {
      return windows ? A._Uri__makeWindowsFileUrl(path, false) : A._Uri__makeFileUri(path, false);
    },
    _Uri__checkNonWindowsPathReservedCharacters(segments, argumentError) {
      var t1, _i, segment, t2, t3;
      for (t1 = segments.length, _i = 0; _i < t1; ++_i) {
        segment = segments[_i];
        t2 = J.getInterceptor$asx(segment);
        t3 = t2.get$length(segment);
        if (0 > t3)
          A.throwExpression(A.RangeError$range(0, 0, t2.get$length(segment), null, null));
        if (A.stringContainsUnchecked(segment, "/", 0)) {
          t1 = A.UnsupportedError$("Illegal path character " + A.S(segment));
          throw A.wrapException(t1);
        }
      }
    },
    _Uri__checkWindowsPathReservedCharacters(segments, argumentError, firstSegment) {
      var t1, t2, t3, t4, t5, _null = null;
      for (t1 = A.SubListIterable$(segments, firstSegment, _null, A._arrayInstanceType(segments)._precomputed1), t2 = t1.$ti, t1 = new A.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t4 = A.RegExp_RegExp('["*/:<>?\\\\|]', false);
        t5 = t3.length;
        if (A.stringContainsUnchecked(t3, t4, 0))
          if (argumentError)
            throw A.wrapException(A.ArgumentError$("Illegal character in path", _null));
          else
            throw A.wrapException(A.UnsupportedError$("Illegal character in path: " + t3));
      }
    },
    _Uri__checkWindowsDriveLetter(charCode, argumentError) {
      var t1,
        _s21_ = "Illegal drive letter ";
      if (!(65 <= charCode && charCode <= 90))
        t1 = 97 <= charCode && charCode <= 122;
      else
        t1 = true;
      if (t1)
        return;
      if (argumentError)
        throw A.wrapException(A.ArgumentError$(_s21_ + A.String_String$fromCharCode(charCode), null));
      else
        throw A.wrapException(A.UnsupportedError$(_s21_ + A.String_String$fromCharCode(charCode)));
    },
    _Uri__makeFileUri(path, slashTerminated) {
      var _null = null,
        segments = A._setArrayType(path.split("/"), type$.JSArray_String);
      if (B.JSString_methods.startsWith$1(path, "/"))
        return A._Uri__Uri(_null, _null, segments, "file");
      else
        return A._Uri__Uri(_null, _null, segments, _null);
    },
    _Uri__makeWindowsFileUrl(path, slashTerminated) {
      var t1, pathSegments, pathStart, hostPart, _s1_ = "\\", _null = null, _s4_ = "file";
      if (B.JSString_methods.startsWith$1(path, "\\\\?\\"))
        if (B.JSString_methods.startsWith$2(path, "UNC\\", 4))
          path = B.JSString_methods.replaceRange$3(path, 0, 7, _s1_);
        else {
          path = B.JSString_methods.substring$1(path, 4);
          if (path.length < 3 || B.JSString_methods._codeUnitAt$1(path, 1) !== 58 || B.JSString_methods._codeUnitAt$1(path, 2) !== 92)
            throw A.wrapException(A.ArgumentError$("Windows paths with \\\\?\\ prefix must be absolute", _null));
        }
      else
        path = A.stringReplaceAllUnchecked(path, "/", _s1_);
      t1 = path.length;
      if (t1 > 1 && B.JSString_methods._codeUnitAt$1(path, 1) === 58) {
        A._Uri__checkWindowsDriveLetter(B.JSString_methods._codeUnitAt$1(path, 0), true);
        if (t1 === 2 || B.JSString_methods._codeUnitAt$1(path, 2) !== 92)
          throw A.wrapException(A.ArgumentError$("Windows paths with drive letter must be absolute", _null));
        pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
        A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 1);
        return A._Uri__Uri(_null, _null, pathSegments, _s4_);
      }
      if (B.JSString_methods.startsWith$1(path, _s1_))
        if (B.JSString_methods.startsWith$2(path, _s1_, 1)) {
          pathStart = B.JSString_methods.indexOf$2(path, _s1_, 2);
          t1 = pathStart < 0;
          hostPart = t1 ? B.JSString_methods.substring$1(path, 2) : B.JSString_methods.substring$2(path, 2, pathStart);
          pathSegments = A._setArrayType((t1 ? "" : B.JSString_methods.substring$1(path, pathStart + 1)).split(_s1_), type$.JSArray_String);
          A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
          return A._Uri__Uri(hostPart, _null, pathSegments, _s4_);
        } else {
          pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
          A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
          return A._Uri__Uri(_null, _null, pathSegments, _s4_);
        }
      else {
        pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
        A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
        return A._Uri__Uri(_null, _null, pathSegments, _null);
      }
    },
    _Uri__makePort(port, scheme) {
      if (port != null && port === A._Uri__defaultPort(scheme))
        return null;
      return port;
    },
    _Uri__makeHost(host, start, end, strictIPv6) {
      var t1, t2, index, zoneIDstart, zoneID, i;
      if (host == null)
        return null;
      if (start === end)
        return "";
      if (B.JSString_methods.codeUnitAt$1(host, start) === 91) {
        t1 = end - 1;
        if (B.JSString_methods.codeUnitAt$1(host, t1) !== 93)
          A._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t2 = start + 1;
        index = A._Uri__checkZoneID(host, t2, t1);
        if (index < t1) {
          zoneIDstart = index + 1;
          zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, t1, "%25");
        } else
          zoneID = "";
        A.Uri_parseIPv6Address(host, t2, index);
        return B.JSString_methods.substring$2(host, start, index).toLowerCase() + zoneID + "]";
      }
      for (i = start; i < end; ++i)
        if (B.JSString_methods.codeUnitAt$1(host, i) === 58) {
          index = B.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          A.Uri_parseIPv6Address(host, start, index);
          return "[" + B.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      return A._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID(host, start, end) {
      var index = B.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID(host, start, end, prefix) {
      var index, sectionStart, isNormalized, char, replacement, t1, t2, tail, sourceLength, slice,
        buffer = prefix !== "" ? new A.StringBuffer(prefix) : null;
      for (index = start, sectionStart = index, isNormalized = true; index < end;) {
        char = B.JSString_methods.codeUnitAt$1(host, index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          t2 = buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
          if (t1)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            A._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t2 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else {
          if (char < 127) {
            t1 = char >>> 4;
            if (!(t1 < 8))
              return A.ioore(B.List_nxB, t1);
            t1 = (B.List_nxB[t1] & 1 << (char & 15)) !== 0;
          } else
            t1 = false;
          if (t1) {
            if (isNormalized && 65 <= char && 90 >= char) {
              if (buffer == null)
                buffer = new A.StringBuffer("");
              if (sectionStart < index) {
                buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
                sectionStart = index;
              }
              isNormalized = false;
            }
            ++index;
          } else {
            if ((char & 64512) === 55296 && index + 1 < end) {
              tail = B.JSString_methods.codeUnitAt$1(host, index + 1);
              if ((tail & 64512) === 56320) {
                char = (char & 1023) << 10 | tail & 1023 | 65536;
                sourceLength = 2;
              } else
                sourceLength = 1;
            } else
              sourceLength = 1;
            slice = B.JSString_methods.substring$2(host, sectionStart, index);
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t1 = buffer;
            } else
              t1 = buffer;
            t1._contents += slice;
            t1._contents += A._Uri__escapeChar(char);
            index += sourceLength;
            sectionStart = index;
          }
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end)
        buffer._contents += B.JSString_methods.substring$2(host, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName(host, start, end) {
      var index, sectionStart, buffer, isNormalized, char, replacement, t1, slice, t2, sourceLength, tail;
      for (index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        char = B.JSString_methods.codeUnitAt$1(host, index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          t2 = buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
          if (t1) {
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
            sourceLength = 3;
          } else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          } else
            sourceLength = 3;
          buffer._contents = t2 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else {
          if (char < 127) {
            t1 = char >>> 4;
            if (!(t1 < 8))
              return A.ioore(B.List_qNA, t1);
            t1 = (B.List_qNA[t1] & 1 << (char & 15)) !== 0;
          } else
            t1 = false;
          if (t1) {
            if (isNormalized && 65 <= char && 90 >= char) {
              if (buffer == null)
                buffer = new A.StringBuffer("");
              if (sectionStart < index) {
                buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
                sectionStart = index;
              }
              isNormalized = false;
            }
            ++index;
          } else {
            if (char <= 93) {
              t1 = char >>> 4;
              if (!(t1 < 8))
                return A.ioore(B.List_2Vk, t1);
              t1 = (B.List_2Vk[t1] & 1 << (char & 15)) !== 0;
            } else
              t1 = false;
            if (t1)
              A._Uri__fail(host, index, "Invalid character");
            else {
              if ((char & 64512) === 55296 && index + 1 < end) {
                tail = B.JSString_methods.codeUnitAt$1(host, index + 1);
                if ((tail & 64512) === 56320) {
                  char = (char & 1023) << 10 | tail & 1023 | 65536;
                  sourceLength = 2;
                } else
                  sourceLength = 1;
              } else
                sourceLength = 1;
              slice = B.JSString_methods.substring$2(host, sectionStart, index);
              if (!isNormalized)
                slice = slice.toLowerCase();
              if (buffer == null) {
                buffer = new A.StringBuffer("");
                t1 = buffer;
              } else
                t1 = buffer;
              t1._contents += slice;
              t1._contents += A._Uri__escapeChar(char);
              index += sourceLength;
              sectionStart = index;
            }
          }
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme(scheme, start, end) {
      var i, containsUpperCase, codeUnit, t1;
      if (start === end)
        return "";
      if (!A._Uri__isAlphabeticCharacter(B.JSString_methods._codeUnitAt$1(scheme, start)))
        A._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        codeUnit = B.JSString_methods._codeUnitAt$1(scheme, i);
        if (codeUnit < 128) {
          t1 = codeUnit >>> 4;
          if (!(t1 < 8))
            return A.ioore(B.List_JYB, t1);
          t1 = (B.List_JYB[t1] & 1 << (codeUnit & 15)) !== 0;
        } else
          t1 = false;
        if (!t1)
          A._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = B.JSString_methods.substring$2(scheme, start, end);
      return A._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo(userInfo, start, end) {
      if (userInfo == null)
        return "";
      return A._Uri__normalizeOrSubstring(userInfo, start, end, B.List_gRj, false, false);
    },
    _Uri__makePath(path, start, end, pathSegments, scheme, hasAuthority) {
      var t1, result,
        isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority;
      if (path == null) {
        if (pathSegments == null)
          return isFile ? "/" : "";
        t1 = A._arrayInstanceType(pathSegments);
        result = new A.MappedListIterable(pathSegments, t1._eval$1("String(1)")._as(new A._Uri__makePath_closure()), t1._eval$1("MappedListIterable<1,String>")).join$1(0, "/");
      } else if (pathSegments != null)
        throw A.wrapException(A.ArgumentError$("Both path and pathSegments specified", null));
      else
        result = A._Uri__normalizeOrSubstring(path, start, end, B.List_qg4, true, true);
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !B.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return A._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !B.JSString_methods.startsWith$1(path, "/") && !B.JSString_methods.startsWith$1(path, "\\"))
        return A._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return A._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery(query, start, end, queryParameters) {
      if (query != null)
        return A._Uri__normalizeOrSubstring(query, start, end, B.List_CVk, true, false);
      return null;
    },
    _Uri__makeFragment(fragment, start, end) {
      if (fragment == null)
        return null;
      return A._Uri__normalizeOrSubstring(fragment, start, end, B.List_CVk, true, false);
    },
    _Uri__normalizeEscape(source, index, lowerCase) {
      var firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        t1 = index + 2;
      if (t1 >= source.length)
        return "%";
      firstDigit = B.JSString_methods.codeUnitAt$1(source, index + 1);
      secondDigit = B.JSString_methods.codeUnitAt$1(source, t1);
      firstDigitValue = A.hexDigitValue(firstDigit);
      secondDigitValue = A.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127) {
        t1 = B.JSInt_methods._shrOtherPositive$1(value, 4);
        if (!(t1 < 8))
          return A.ioore(B.List_nxB, t1);
        t1 = (B.List_nxB[t1] & 1 << (value & 15)) !== 0;
      } else
        t1 = false;
      if (t1)
        return A.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return B.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar(char) {
      var codeUnits, flag, encodedBytes, t1, index, byte, t2, t3,
        _s16_ = "0123456789ABCDEF";
      if (char < 128) {
        codeUnits = new Uint8Array(3);
        codeUnits[0] = 37;
        codeUnits[1] = B.JSString_methods._codeUnitAt$1(_s16_, char >>> 4);
        codeUnits[2] = B.JSString_methods._codeUnitAt$1(_s16_, char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        t1 = 3 * encodedBytes;
        codeUnits = new Uint8Array(t1);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = B.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          if (!(index < t1))
            return A.ioore(codeUnits, index);
          codeUnits[index] = 37;
          t2 = index + 1;
          t3 = B.JSString_methods._codeUnitAt$1(_s16_, byte >>> 4);
          if (!(t2 < t1))
            return A.ioore(codeUnits, t2);
          codeUnits[t2] = t3;
          t3 = index + 2;
          t2 = B.JSString_methods._codeUnitAt$1(_s16_, byte & 15);
          if (!(t3 < t1))
            return A.ioore(codeUnits, t3);
          codeUnits[t3] = t2;
          index += 3;
        }
      }
      return A.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1 = A._Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash);
      return t1 == null ? B.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1, index, sectionStart, buffer, char, t2, replacement, sourceLength, tail, t3, _null = null;
      for (t1 = !escapeDelimiters, index = start, sectionStart = index, buffer = _null; index < end;) {
        char = B.JSString_methods.codeUnitAt$1(component, index);
        if (char < 127) {
          t2 = char >>> 4;
          if (!(t2 < 8))
            return A.ioore(charTable, t2);
          t2 = (charTable[t2] & 1 << (char & 15)) !== 0;
        } else
          t2 = false;
        if (t2)
          ++index;
        else {
          if (char === 37) {
            replacement = A._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement) {
              replacement = "%25";
              sourceLength = 1;
            } else
              sourceLength = 3;
          } else if (char === 92 && replaceBackslash) {
            replacement = "/";
            sourceLength = 1;
          } else {
            if (t1)
              if (char <= 93) {
                t2 = char >>> 4;
                if (!(t2 < 8))
                  return A.ioore(B.List_2Vk, t2);
                t2 = (B.List_2Vk[t2] & 1 << (char & 15)) !== 0;
              } else
                t2 = false;
            else
              t2 = false;
            if (t2) {
              A._Uri__fail(component, index, "Invalid character");
              sourceLength = _null;
              replacement = sourceLength;
            } else {
              if ((char & 64512) === 55296) {
                t2 = index + 1;
                if (t2 < end) {
                  tail = B.JSString_methods.codeUnitAt$1(component, t2);
                  if ((tail & 64512) === 56320) {
                    char = (char & 1023) << 10 | tail & 1023 | 65536;
                    sourceLength = 2;
                  } else
                    sourceLength = 1;
                } else
                  sourceLength = 1;
              } else
                sourceLength = 1;
              replacement = A._Uri__escapeChar(char);
            }
          }
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t3 = t2._contents += B.JSString_methods.substring$2(component, sectionStart, index);
          t2._contents = t3 + A.S(replacement);
          if (typeof sourceLength !== "number")
            return A.iae(sourceLength);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end)
        buffer._contents += B.JSString_methods.substring$2(component, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments(path) {
      if (B.JSString_methods.startsWith$1(path, "."))
        return true;
      return B.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments(path) {
      var output, t1, t2, appendSlash, _i, segment, t3;
      if (!A._Uri__mayContainDotSegments(path))
        return path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (J.$eq$(segment, "..")) {
          t3 = output.length;
          if (t3 !== 0) {
            if (0 >= t3)
              return A.ioore(output, -1);
            output.pop();
            if (output.length === 0)
              B.JSArray_methods.add$1(output, "");
          }
          appendSlash = true;
        } else if ("." === segment)
          appendSlash = true;
        else {
          B.JSArray_methods.add$1(output, segment);
          appendSlash = false;
        }
      }
      if (appendSlash)
        B.JSArray_methods.add$1(output, "");
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return !allowScheme ? A._Uri__escapeScheme(path) : path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment)
          if (output.length !== 0 && B.JSArray_methods.get$last(output) !== "..") {
            if (0 >= output.length)
              return A.ioore(output, -1);
            output.pop();
            appendSlash = true;
          } else {
            B.JSArray_methods.add$1(output, "..");
            appendSlash = false;
          }
        else if ("." === segment)
          appendSlash = true;
        else {
          B.JSArray_methods.add$1(output, segment);
          appendSlash = false;
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        if (t1 === 1) {
          if (0 >= t1)
            return A.ioore(output, 0);
          t1 = output[0].length === 0;
        } else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || B.JSArray_methods.get$last(output) === "..")
        B.JSArray_methods.add$1(output, "");
      if (!allowScheme) {
        if (0 >= output.length)
          return A.ioore(output, 0);
        B.JSArray_methods.$indexSet(output, 0, A._Uri__escapeScheme(output[0]));
      }
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme(path) {
      var i, char, t2,
        t1 = path.length;
      if (t1 >= 2 && A._Uri__isAlphabeticCharacter(B.JSString_methods._codeUnitAt$1(path, 0)))
        for (i = 1; i < t1; ++i) {
          char = B.JSString_methods._codeUnitAt$1(path, i);
          if (char === 58)
            return B.JSString_methods.substring$2(path, 0, i) + "%3A" + B.JSString_methods.substring$1(path, i + 1);
          if (char <= 127) {
            t2 = char >>> 4;
            if (!(t2 < 8))
              return A.ioore(B.List_JYB, t2);
            t2 = (B.List_JYB[t2] & 1 << (char & 15)) === 0;
          } else
            t2 = true;
          if (t2)
            break;
        }
      return path;
    },
    _Uri__packageNameEnd(uri, path) {
      if (uri.isScheme$1("package") && uri._host == null)
        return A._skipPackageNameChars(path, 0, path.length);
      return -1;
    },
    _Uri__toWindowsFilePath(uri) {
      var hasDriveLetter, t2, host,
        segments = uri.get$pathSegments(),
        t1 = segments.length;
      if (t1 > 0 && J.get$length$asx(segments[0]) === 2 && J.codeUnitAt$1$s(segments[0], 1) === 58) {
        if (0 >= t1)
          return A.ioore(segments, 0);
        A._Uri__checkWindowsDriveLetter(J.codeUnitAt$1$s(segments[0], 0), false);
        A._Uri__checkWindowsPathReservedCharacters(segments, false, 1);
        hasDriveLetter = true;
      } else {
        A._Uri__checkWindowsPathReservedCharacters(segments, false, 0);
        hasDriveLetter = false;
      }
      t2 = uri.get$hasAbsolutePath() && !hasDriveLetter ? "" + "\\" : "";
      if (uri.get$hasAuthority()) {
        host = uri.get$host(uri);
        if (host.length !== 0)
          t2 = t2 + "\\" + host + "\\";
      }
      t2 = A.StringBuffer__writeAll(t2, segments, "\\");
      t1 = hasDriveLetter && t1 === 1 ? t2 + "\\" : t2;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__hexCharPairToByte(s, pos) {
      var byte, i, charCode;
      for (byte = 0, i = 0; i < 2; ++i) {
        charCode = B.JSString_methods._codeUnitAt$1(s, pos + i);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw A.wrapException(A.ArgumentError$("Invalid URL encoding", null));
        }
      }
      return byte;
    },
    _Uri__uriDecode(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t1, bytes,
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        codeUnit = B.JSString_methods._codeUnitAt$1(text, i);
        if (codeUnit <= 127)
          if (codeUnit !== 37)
            t1 = false;
          else
            t1 = true;
        else
          t1 = true;
        if (t1) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple) {
        if (B.C_Utf8Codec !== encoding)
          t1 = false;
        else
          t1 = true;
        if (t1)
          return B.JSString_methods.substring$2(text, start, end);
        else
          bytes = new A.CodeUnits(B.JSString_methods.substring$2(text, start, end));
      } else {
        bytes = A._setArrayType([], type$.JSArray_int);
        for (t1 = text.length, i = start; i < end; ++i) {
          codeUnit = B.JSString_methods._codeUnitAt$1(text, i);
          if (codeUnit > 127)
            throw A.wrapException(A.ArgumentError$("Illegal percent encoding in URI", null));
          if (codeUnit === 37) {
            if (i + 3 > t1)
              throw A.wrapException(A.ArgumentError$("Truncated URI", null));
            B.JSArray_methods.add$1(bytes, A._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else
            B.JSArray_methods.add$1(bytes, codeUnit);
        }
      }
      return encoding.decode$1(0, bytes);
    },
    _Uri__isAlphabeticCharacter(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__writeUri(mimeType, charsetName, parameters, buffer, indices) {
      var slashIndex, t1;
      if (true)
        buffer._contents = buffer._contents;
      else {
        slashIndex = A.UriData__validateMimeType("");
        if (slashIndex < 0)
          throw A.wrapException(A.ArgumentError$value("", "mimeType", "Invalid MIME type"));
        t1 = buffer._contents += A._Uri__uriEncode(B.List_qFt, B.JSString_methods.substring$2("", 0, slashIndex), B.C_Utf8Codec, false);
        buffer._contents = t1 + "/";
        buffer._contents += A._Uri__uriEncode(B.List_qFt, B.JSString_methods.substring$1("", slashIndex + 1), B.C_Utf8Codec, false);
      }
    },
    UriData__validateMimeType(mimeType) {
      var t1, slashIndex, i;
      for (t1 = mimeType.length, slashIndex = -1, i = 0; i < t1; ++i) {
        if (B.JSString_methods._codeUnitAt$1(mimeType, i) !== 47)
          continue;
        if (slashIndex < 0) {
          slashIndex = i;
          continue;
        }
        return -1;
      }
      return slashIndex;
    },
    UriData__parse(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = A._setArrayType([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = B.JSString_methods._codeUnitAt$1(text, i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw A.wrapException(A.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw A.wrapException(A.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        B.JSArray_methods.add$1(indices, i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          char = B.JSString_methods._codeUnitAt$1(text, i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          B.JSArray_methods.add$1(indices, equalsIndex);
        else {
          lastSeparator = B.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !B.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw A.wrapException(A.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      B.JSArray_methods.add$1(indices, i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = B.Base64Codec_Base64Encoder_false.normalize$3(text, t2, t1);
      else {
        data = A._Uri__normalize(text, t2, t1, B.List_CVk, true, false);
        if (data != null)
          text = B.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new A.UriData(text, indices, sourceUri);
    },
    UriData__uriEncodeBytes(canonicalTable, bytes, buffer) {
      var t1, byteOr, i, byte, t2, t3,
        _s16_ = "0123456789ABCDEF";
      for (t1 = J.getInterceptor$asx(bytes), byteOr = 0, i = 0; i < t1.get$length(bytes); ++i) {
        byte = t1.$index(bytes, i);
        byteOr |= byte;
        if (byte < 128) {
          t2 = B.JSInt_methods._shrOtherPositive$1(byte, 4);
          if (!(t2 < 8))
            return A.ioore(canonicalTable, t2);
          t2 = (canonicalTable[t2] & 1 << (byte & 15)) !== 0;
        } else
          t2 = false;
        t3 = buffer._contents;
        if (t2)
          buffer._contents = t3 + A.Primitives_stringFromCharCode(byte);
        else {
          t2 = t3 + A.Primitives_stringFromCharCode(37);
          buffer._contents = t2;
          t2 += A.Primitives_stringFromCharCode(B.JSString_methods._codeUnitAt$1(_s16_, B.JSInt_methods._shrOtherPositive$1(byte, 4)));
          buffer._contents = t2;
          buffer._contents = t2 + A.Primitives_stringFromCharCode(B.JSString_methods._codeUnitAt$1(_s16_, byte & 15));
        }
      }
      if ((byteOr & 4294967040) >>> 0 !== 0)
        for (i = 0; i < t1.get$length(bytes); ++i) {
          byte = t1.$index(bytes, i);
          if (byte < 0 || byte > 255)
            throw A.wrapException(A.ArgumentError$value(byte, "non-byte value", null));
        }
    },
    _createTables() {
      var _i, t1, t2, t3, t4, b,
        _s77_ = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=",
        _s1_ = ".", _s1_0 = ":", _s1_1 = "/", _s1_2 = "\\", _s1_3 = "?", _s1_4 = "#", _s2_ = "/\\",
        tables = A._setArrayType(new Array(22), type$.JSArray_Uint8List);
      for (_i = 0; _i < 22; ++_i)
        tables[_i] = new Uint8Array(96);
      t1 = new A._createTables_build(tables);
      t2 = new A._createTables_setChars();
      t3 = new A._createTables_setRange();
      t4 = type$.Uint8List._as(t1.call$2(0, 225));
      t2.call$3(t4, _s77_, 1);
      t2.call$3(t4, _s1_, 14);
      t2.call$3(t4, _s1_0, 34);
      t2.call$3(t4, _s1_1, 3);
      t2.call$3(t4, _s1_2, 227);
      t2.call$3(t4, _s1_3, 172);
      t2.call$3(t4, _s1_4, 205);
      b = t1.call$2(14, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 15);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(15, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, "%", 225);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(1, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(2, 235);
      t2.call$3(b, _s77_, 139);
      t2.call$3(b, _s1_1, 131);
      t2.call$3(b, _s1_2, 131);
      t2.call$3(b, _s1_, 146);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(3, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 68);
      t2.call$3(b, _s1_2, 68);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(4, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "[", 232);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(5, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(6, 231);
      t3.call$3(b, "19", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(7, 231);
      t3.call$3(b, "09", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      t2.call$3(t1.call$2(8, 8), "]", 5);
      b = t1.call$2(9, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 16);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(16, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 17);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(17, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(10, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(18, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 19);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(19, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(11, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(12, 236);
      t2.call$3(b, _s77_, 12);
      t2.call$3(b, _s1_3, 12);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(13, 237);
      t2.call$3(b, _s77_, 13);
      t2.call$3(b, _s1_3, 13);
      t3.call$3(t1.call$2(20, 245), "az", 21);
      b = t1.call$2(21, 245);
      t3.call$3(b, "az", 21);
      t3.call$3(b, "09", 21);
      t2.call$3(b, "+-.", 21);
      return tables;
    },
    _scan(uri, start, end, state, indices) {
      var i, table, char, transition,
        tables = $.$get$_scannerTables();
      for (i = start; i < end; ++i) {
        if (!(state >= 0 && state < tables.length))
          return A.ioore(tables, state);
        table = tables[state];
        char = B.JSString_methods._codeUnitAt$1(uri, i) ^ 96;
        transition = table[char > 95 ? 31 : char];
        state = transition & 31;
        B.JSArray_methods.$indexSet(indices, transition >>> 5, i);
      }
      return state;
    },
    _SimpleUri__packageNameEnd(uri) {
      if (uri._schemeEnd === 7 && B.JSString_methods.startsWith$1(uri._uri, "package") && uri._hostStart <= 0)
        return A._skipPackageNameChars(uri._uri, uri._pathStart, uri._queryStart);
      return -1;
    },
    _skipPackageNameChars(source, start, end) {
      var i, dots, char;
      for (i = start, dots = 0; i < end; ++i) {
        char = B.JSString_methods.codeUnitAt$1(source, i);
        if (char === 47)
          return dots !== 0 ? i : -1;
        if (char === 37 || char === 58)
          return -1;
        dots |= char ^ 46;
      }
      return -1;
    },
    _caseInsensitiveCompareStart(prefix, string, start) {
      var t1, result, i, prefixChar, stringChar, delta, lowerChar;
      for (t1 = prefix.length, result = 0, i = 0; i < t1; ++i) {
        prefixChar = B.JSString_methods._codeUnitAt$1(prefix, i);
        stringChar = B.JSString_methods._codeUnitAt$1(string, start + i);
        delta = prefixChar ^ stringChar;
        if (delta !== 0) {
          if (delta === 32) {
            lowerChar = stringChar | delta;
            if (97 <= lowerChar && lowerChar <= 122) {
              result = 32;
              continue;
            }
          }
          return -1;
        }
      }
      return result;
    },
    DateTime: function DateTime(t0, t1) {
      this._core$_value = t0;
      this.isUtc = t1;
    },
    Duration: function Duration() {
    },
    _Enum: function _Enum() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    NullThrownError: function NullThrownError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    CyclicInitializationError: function CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Iterable: function Iterable() {
    },
    Iterator: function Iterator() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace(t0) {
      this._stackTrace = t0;
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    _Uri__makePath_closure: function _Uri__makePath_closure() {
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _createTables_build: function _createTables_build(t0) {
      this.tables = t0;
    },
    _createTables_setChars: function _createTables_setChars() {
    },
    _createTables_setRange: function _createTables_setRange() {
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    _EventStreamSubscription$(_target, _eventType, onData, _useCapture, $T) {
      var t1 = onData == null ? null : A._wrapZone(new A._EventStreamSubscription_closure(onData), type$.Event);
      t1 = new A._EventStreamSubscription(_target, _eventType, t1, false, $T._eval$1("_EventStreamSubscription<0>"));
      t1._tryResume$0();
      return t1;
    },
    _convertNativeToDart_XHR_Response(o) {
      var t1;
      if (type$.Document._is(o))
        return o;
      t1 = new A._AcceptStructuredCloneDart2Js([], []);
      t1.mustCopy = true;
      return t1.walk$1(o);
    },
    _wrapZone(callback, $T) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    HtmlElement: function HtmlElement() {
    },
    AnchorElement: function AnchorElement() {
    },
    AreaElement: function AreaElement() {
    },
    CharacterData: function CharacterData() {
    },
    Document: function Document() {
    },
    DomException: function DomException() {
    },
    Element0: function Element0() {
    },
    Event: function Event() {
    },
    Events: function Events() {
    },
    ElementEvents: function ElementEvents(t0) {
      this._ptr = t0;
    },
    EventTarget: function EventTarget() {
    },
    FormElement: function FormElement() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    HttpRequest: function HttpRequest() {
    },
    HttpRequestEventTarget: function HttpRequestEventTarget() {
    },
    InputElement: function InputElement() {
    },
    Location: function Location() {
    },
    _ChildNodeListLazy: function _ChildNodeListLazy(t0) {
      this._this = t0;
    },
    Node: function Node() {
    },
    NodeList: function NodeList() {
    },
    ProgressEvent: function ProgressEvent() {
    },
    SelectElement: function SelectElement() {
    },
    Text0: function Text0() {
    },
    Window: function Window() {
    },
    _Attr: function _Attr() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _AttributeMap: function _AttributeMap() {
    },
    _ElementAttributeMap: function _ElementAttributeMap(t0) {
      this._element = t0;
    },
    EventStreamProvider: function EventStreamProvider(t0, t1) {
      this._eventType = t0;
      this.$ti = t1;
    },
    _EventStream: function _EventStream(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _ElementEventStreamImpl: function _ElementEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    _EventStreamSubscription_onData_closure: function _EventStreamSubscription_onData_closure(t0) {
      this.handleData = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1, t2) {
      var _ = this;
      _._array = t0;
      _._length = t1;
      _._position = -1;
      _._current = null;
      _.$ti = t2;
    },
    _HtmlCollection_JavaScriptObject_ListMixin: function _HtmlCollection_JavaScriptObject_ListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin: function _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin: function _NodeList_JavaScriptObject_ListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin: function _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    Device_userAgent() {
      var t1 = window.navigator.userAgent;
      t1.toString;
      return t1;
    },
    _AcceptStructuredClone: function _AcceptStructuredClone() {
    },
    _AcceptStructuredClone_walk_closure: function _AcceptStructuredClone_walk_closure(t0, t1) {
      this.$this = t0;
      this.map = t1;
    },
    _AcceptStructuredCloneDart2Js: function _AcceptStructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
      this.mustCopy = false;
    },
    promiseToFuture(jsPromise, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new A._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(A.convertDartClosureToJS(new A.promiseToFuture_closure(completer, $T), 1), A.convertDartClosureToJS(new A.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    BinaryCodec: function BinaryCodec() {
    },
    Decoder: function Decoder() {
    },
    Encoder: function Encoder() {
    },
    ByteReader: function ByteReader(t0) {
      this._byte_reader$_data = t0;
      this._byte_reader$_index = 0;
    },
    ByteWriter: function ByteWriter(t0) {
      this._buffer = t0;
      this._byte_writer$_length = 8;
      this._byte_writer$_index = 0;
    },
    DefaultEquality: function DefaultEquality(t0) {
      this.$ti = t0;
    },
    IterableEquality: function IterableEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    ListEquality: function ListEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    _UnorderedEquality: function _UnorderedEquality() {
    },
    SetEquality: function SetEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    _MapEntry: function _MapEntry(t0, t1, t2) {
      this.equality = t0;
      this.key = t1;
      this.value = t2;
    },
    MapEquality: function MapEquality(t0, t1, t2) {
      this._keyEquality = t0;
      this._valueEquality = t1;
      this.$ti = t2;
    },
    DeepCollectionEquality: function DeepCollectionEquality() {
    },
    App: function App(t0) {
      this.key = t0;
    },
    _LeftPane: function _LeftPane(t0) {
      this.key = t0;
    },
    _MobileTopBar: function _MobileTopBar(t0) {
      this.key = t0;
    },
    _MobileTopBar_build_closure: function _MobileTopBar_build_closure() {
    },
    _MobileTopBar_build__closure: function _MobileTopBar_build__closure() {
    },
    ContentPadding: function ContentPadding(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ContentSection$(child, classes, id) {
      return new A.ContentSection(id, classes, child, null);
    },
    ContentSection: function ContentSection(t0, t1, t2, t3) {
      var _ = this;
      _.id = t0;
      _._classes = t1;
      _.child = t2;
      _.key = t3;
    },
    ContentTitle: function ContentTitle(t0, t1) {
      this.text = t0;
      this.key = t1;
    },
    Copyrights: function Copyrights(t0) {
      this.key = t0;
    },
    Div: function Div(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.tag = t0;
      _.id = t1;
      _.classes = t2;
      _.styles = t3;
      _.attributes = t4;
      _.events = t5;
      _._child = t6;
      _._children = t7;
      _.key = t8;
    },
    ListItem$(classes, $content, icon, text) {
      return new A.ListItem(icon, text, $content, classes == null ? A._setArrayType(["blue"], type$.JSArray_String) : classes, null);
    },
    SimpleListItem$(classes, $content, icon, text) {
      return new A.SimpleListItem(icon, text, $content, classes, null);
    },
    ListItem: function ListItem(t0, t1, t2, t3, t4) {
      var _ = this;
      _.icon = t0;
      _.text = t1;
      _.content = t2;
      _._list_item$_classes = t3;
      _.key = t4;
    },
    ListItem_build_closure: function ListItem_build_closure(t0) {
      this.$this = t0;
    },
    SimpleListItem: function SimpleListItem(t0, t1, t2, t3, t4) {
      var _ = this;
      _.icon = t0;
      _.text = t1;
      _.content = t2;
      _._list_item$_classes = t3;
      _.key = t4;
    },
    parseMarkdown($async$input) {
      return A._makeSyncStarIterable(function() {
        var input = $async$input;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, lastULElements, i, line;
        return function $async$parseMarkdown($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component, t2 = type$.JSArray_String, lastULElements = null, i = 0;
              case 2:
                // for condition
                if (!(i < input.length)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                line = input[i];
                $async$goto = B.JSString_methods.startsWith$1(line, " *") ? 5 : 7;
                break;
              case 5:
                // then
                if (lastULElements == null)
                  lastULElements = A._setArrayType([], t1);
                B.JSArray_methods.add$1(lastULElements, A.li(A._setArrayType([new A.Text(B.JSString_methods.substring$1(line, 2), false, null)], t1), null, null));
                // goto join
                $async$goto = 6;
                break;
              case 7:
                // else
                $async$goto = lastULElements != null ? 8 : 9;
                break;
              case 8:
                // then
                $async$goto = 10;
                return A.ul(lastULElements, A._setArrayType(["browser-default"], t2));
              case 10:
                // after yield
                lastULElements = null;
              case 9:
                // join
                $async$goto = 11;
                return A.p(A._setArrayType([new A.Text(line, false, null)], t1), null);
              case 11:
                // after yield
              case 6:
                // join
              case 3:
                // for update
                ++i;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                $async$goto = lastULElements != null ? 12 : 13;
                break;
              case 12:
                // then
                $async$goto = 14;
                return A.ul(lastULElements, A._setArrayType(["browser-default"], t2));
              case 14:
                // after yield
              case 13:
                // join
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    MarkdownComponent: function MarkdownComponent(t0, t1) {
      this.markdown = t0;
      this.key = t1;
    },
    MarkdownComponent_build_closure: function MarkdownComponent_build_closure(t0) {
      this.$this = t0;
    },
    Collapsible: function Collapsible(t0, t1, t2, t3) {
      var _ = this;
      _.id = t0;
      _.child = t1;
      _.tag = t2;
      _.key = t3;
    },
    _CollapsibleState: function _CollapsibleState(t0) {
      this._component = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _CollapsibleState_didChangeDependencies_closure: function _CollapsibleState_didChangeDependencies_closure(t0) {
      this.$this = t0;
    },
    PushPin: function PushPin(t0, t1, t2, t3) {
      var _ = this;
      _.id = t0;
      _.child = t1;
      _.classes = t2;
      _.key = t3;
    },
    _PushPinState: function _PushPinState(t0) {
      this._component = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _PushPinState_didChangeDependencies_closure: function _PushPinState_didChangeDependencies_closure(t0) {
      this.$this = t0;
    },
    Scrollspy: function Scrollspy(t0, t1, t2) {
      this.id = t0;
      this.child = t1;
      this.key = t2;
    },
    _ScrollspyState: function _ScrollspyState(t0) {
      this._component = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _ScrollspyState_didChangeDependencies_closure: function _ScrollspyState_didChangeDependencies_closure(t0) {
      this.$this = t0;
    },
    LangSelector: function LangSelector(t0) {
      this.key = t0;
    },
    LangSelector_build_closure: function LangSelector_build_closure(t0, t1) {
      this.context = t0;
      this.element = t1;
    },
    contactDataFromJson(str) {
      var t1 = type$.Map_String_dynamic._as(B.C_JsonCodec.decode$1(0, A._asString(str)));
      return new A._$_ContactData(A._asString(t1.$index(0, "name")), A._asString(t1.$index(0, "address")), A._asString(t1.$index(0, "linkedin")), A._asString(t1.$index(0, "github")), A._asString(t1.$index(0, "bitbucket")));
    },
    ContactData0: function ContactData0() {
    },
    _$ContactData: function _$ContactData() {
    },
    _$_ContactData: function _$_ContactData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.name = t0;
      _.address = t1;
      _.linkedin = t2;
      _.github = t3;
      _.bitbucket = t4;
    },
    _ContactData_Object__$ContactData: function _ContactData_Object__$ContactData() {
    },
    educationFromJson(str) {
      return A._$$_EducationFromJson(type$.Map_String_dynamic._as(B.C_JsonCodec.decode$1(0, A._asString(str))));
    },
    _$$_EducationFromJson(json) {
      return new A._$_Education(J.map$1$1$ax(type$.List_dynamic._as(json.$index(0, "college_studies")), new A._$$_EducationFromJson_closure(), type$.CollegeStudy).toList$0(0));
    },
    Education0: function Education0() {
    },
    CollegeStudy: function CollegeStudy() {
    },
    _$Education: function _$Education() {
    },
    _$_Education: function _$_Education(t0) {
      this._collegeStudies = t0;
    },
    _$CollegeStudy: function _$CollegeStudy() {
    },
    _$_CollegeStudy: function _$_CollegeStudy(t0, t1) {
      this.title = t0;
      this.period = t1;
    },
    _$$_EducationFromJson_closure: function _$$_EducationFromJson_closure() {
    },
    _CollegeStudy_Object__$CollegeStudy: function _CollegeStudy_Object__$CollegeStudy() {
    },
    _Education_Object__$Education: function _Education_Object__$Education() {
    },
    foreignLanguagesFromJson(str) {
      return A._$$_ForeignLanguagesFromJson(type$.Map_String_dynamic._as(B.C_JsonCodec.decode$1(0, A._asString(str))));
    },
    _$$_ForeignLanguagesFromJson(json) {
      return new A._$_ForeignLanguages(J.map$1$1$ax(type$.List_dynamic._as(json.$index(0, "known")), new A._$$_ForeignLanguagesFromJson_closure(), type$.Language).toList$0(0));
    },
    ForeignLanguages0: function ForeignLanguages0() {
    },
    Language: function Language() {
    },
    _$ForeignLanguages: function _$ForeignLanguages() {
    },
    _$_ForeignLanguages: function _$_ForeignLanguages(t0) {
      this._foreign_languages$_known = t0;
    },
    _$Language: function _$Language() {
    },
    _$_Language: function _$_Language(t0, t1) {
      this.name = t0;
      this.details = t1;
    },
    _$$_ForeignLanguagesFromJson_closure: function _$$_ForeignLanguagesFromJson_closure() {
    },
    _ForeignLanguages_Object__$ForeignLanguages: function _ForeignLanguages_Object__$ForeignLanguages() {
    },
    _Language_Object__$Language: function _Language_Object__$Language() {
    },
    _$$_HobbiesFromJson(json) {
      return new A._$_Hobbies(J.map$1$1$ax(type$.List_dynamic._as(json.$index(0, "hobbies")), new A._$$_HobbiesFromJson_closure(), type$.Hobby).toList$0(0));
    },
    Hobbies0: function Hobbies0() {
    },
    Hobby: function Hobby() {
    },
    _$Hobbies: function _$Hobbies() {
    },
    _$_Hobbies: function _$_Hobbies(t0) {
      this._hobbies = t0;
    },
    _$Hobby: function _$Hobby() {
    },
    _$_Hobby: function _$_Hobby(t0, t1) {
      this.name = t0;
      this.iconCode = t1;
    },
    _$$_HobbiesFromJson_closure: function _$$_HobbiesFromJson_closure() {
    },
    _Hobbies_Object__$Hobbies: function _Hobbies_Object__$Hobbies() {
    },
    _Hobby_Object__$Hobby: function _Hobby_Object__$Hobby() {
    },
    otherProjectsFromJson(str) {
      return A._$$_OtherProjectsFromJson(type$.Map_String_dynamic._as(B.C_JsonCodec.decode$1(0, A._asString(str))));
    },
    _$$_OtherProjectsFromJson(json) {
      return new A._$_OtherProjects(J.map$1$1$ax(type$.List_dynamic._as(json.$index(0, "projects")), new A._$$_OtherProjectsFromJson_closure(), type$.Project_2).toList$0(0));
    },
    _$$_ProjectFromJson(json) {
      var t1 = A._asString(json.$index(0, "title")),
        t2 = A._asString(json.$index(0, "description")),
        t3 = A._asStringQ(json.$index(0, "repositoryUrl")),
        t4 = J.map$1$1$ax(type$.List_dynamic._as(json.$index(0, "skills")), new A._$$_ProjectFromJson_closure(), type$.String).toList$0(0),
        t5 = type$.nullable_List_dynamic._as(json.$index(0, "deploymentUrls"));
      t5 = t5 == null ? null : J.map$1$1$ax(t5, new A._$$_ProjectFromJson_closure0(), type$.DeploymentUrl).toList$0(0);
      if (t5 == null)
        t5 = B.List_empty1;
      return new A._$_Project(t1, t2, t3, t4, t5, A._asStringQ(json.$index(0, "imageUrl")));
    },
    OtherProjects0: function OtherProjects0() {
    },
    Project: function Project() {
    },
    DeploymentUrl: function DeploymentUrl() {
    },
    _$OtherProjects: function _$OtherProjects() {
    },
    _$_OtherProjects: function _$_OtherProjects(t0) {
      this._projects = t0;
    },
    _$Project: function _$Project() {
    },
    _$_Project: function _$_Project(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.title = t0;
      _.description = t1;
      _.repositoryUrl = t2;
      _._skills = t3;
      _._deploymentUrls = t4;
      _.imageUrl = t5;
    },
    _$DeploymentUrl: function _$DeploymentUrl() {
    },
    _$_DeploymentUrl: function _$_DeploymentUrl(t0, t1) {
      this.type = t0;
      this.url = t1;
    },
    _$$_OtherProjectsFromJson_closure: function _$$_OtherProjectsFromJson_closure() {
    },
    _$$_ProjectFromJson_closure: function _$$_ProjectFromJson_closure() {
    },
    _$$_ProjectFromJson_closure0: function _$$_ProjectFromJson_closure0() {
    },
    _DeploymentUrl_Object__$DeploymentUrl: function _DeploymentUrl_Object__$DeploymentUrl() {
    },
    _OtherProjects_Object__$OtherProjects: function _OtherProjects_Object__$OtherProjects() {
    },
    _Project_Object__$Project: function _Project_Object__$Project() {
    },
    _$identity(value, $T) {
      return $T._as(value);
    },
    _$$_ProjectsFromJson(json) {
      return new A._$_Projects(J.map$1$1$ax(type$.List_dynamic._as(json.$index(0, "projects")), new A._$$_ProjectsFromJson_closure(), type$.Project).toList$0(0));
    },
    _$$_ProjectFromJson0(json) {
      var t1 = A._asString(json.$index(0, "code")),
        t2 = A._asString(json.$index(0, "name")),
        t3 = A._asString(json.$index(0, "from")),
        t4 = type$.nullable_List_dynamic._as(json.$index(0, "skillsUsed"));
      t4 = t4 == null ? null : J.map$1$1$ax(t4, new A._$$_ProjectFromJson_closure1(), type$.String).toList$0(0);
      if (t4 == null)
        t4 = B.List_empty0;
      return new A._$_Project0(t1, t2, t3, t4, A._asStringQ(json.$index(0, "company")), A._asStringQ(json.$index(0, "to")));
    },
    _$$_ProjectDescriptionFromJson(json) {
      var t1 = A._asStringQ(json.$index(0, "title")),
        t2 = A._asStringQ(json.$index(0, "description")),
        t3 = type$.nullable_List_dynamic._as(json.$index(0, "urls"));
      return new A._$_ProjectDescription(t1, t2, t3 == null ? null : J.map$1$1$ax(t3, new A._$$_ProjectDescriptionFromJson_closure(), type$.ProjectUrl).toList$0(0));
    },
    Projects: function Projects() {
    },
    Project0: function Project0() {
    },
    ProjectDescription: function ProjectDescription() {
    },
    ProjectUrl: function ProjectUrl() {
    },
    _$Projects: function _$Projects() {
    },
    _$_Projects: function _$_Projects(t0) {
      this._projects$_projects = t0;
    },
    _$Project0: function _$Project0() {
    },
    _$_Project0: function _$_Project0(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.code = t0;
      _.name = t1;
      _.from = t2;
      _._skillsUsed = t3;
      _.company = t4;
      _.to = t5;
    },
    _$ProjectDescription: function _$ProjectDescription() {
    },
    _$ProjectDescriptionCopyWithImpl: function _$ProjectDescriptionCopyWithImpl() {
    },
    __$$_ProjectDescriptionCopyWithImpl: function __$$_ProjectDescriptionCopyWithImpl(t0, t1, t2) {
      this._projects$_value = t0;
      this._then = t1;
      this.$ti = t2;
    },
    _$_ProjectDescription: function _$_ProjectDescription(t0, t1, t2) {
      this.title = t0;
      this.description = t1;
      this._urls = t2;
    },
    _$ProjectUrl: function _$ProjectUrl() {
    },
    _$_ProjectUrl: function _$_ProjectUrl(t0, t1) {
      this.title = t0;
      this.url = t1;
    },
    _$$_ProjectsFromJson_closure: function _$$_ProjectsFromJson_closure() {
    },
    _$$_ProjectFromJson_closure1: function _$$_ProjectFromJson_closure1() {
    },
    _$$_ProjectDescriptionFromJson_closure: function _$$_ProjectDescriptionFromJson_closure() {
    },
    _Project_Object__$Project0: function _Project_Object__$Project0() {
    },
    _ProjectDescription_Object__$ProjectDescription: function _ProjectDescription_Object__$ProjectDescription() {
    },
    _ProjectUrl_Object__$ProjectUrl: function _ProjectUrl_Object__$ProjectUrl() {
    },
    _Projects_Object__$Projects: function _Projects_Object__$Projects() {
    },
    _$$_SkillsFromJson(json) {
      return new A._$_Skills(J.map$1$1$ax(type$.List_dynamic._as(json.$index(0, "skills")), new A._$$_SkillsFromJson_closure(), type$.Skill).toList$0(0));
    },
    Skills0: function Skills0() {
    },
    Skill: function Skill() {
    },
    _$Skills: function _$Skills() {
    },
    _$_Skills: function _$_Skills(t0) {
      this._skills$_skills = t0;
    },
    _$Skill: function _$Skill() {
    },
    _$_Skill: function _$_Skill(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.primary = t1;
      _.icon = t2;
      _.level = t3;
    },
    _$$_SkillsFromJson_closure: function _$$_SkillsFromJson_closure() {
    },
    _Skill_Object__$Skill: function _Skill_Object__$Skill() {
    },
    _Skills_Object__$Skills: function _Skills_Object__$Skills() {
    },
    NavigationPanel: function NavigationPanel(t0, t1) {
      this.anchors = t0;
      this.key = t1;
    },
    NavigationPanel_build_closure: function NavigationPanel_build_closure(t0) {
      this.$this = t0;
    },
    TableOfContents: function TableOfContents(t0, t1) {
      this.anchors = t0;
      this.key = t1;
    },
    TableOfContents_build_closure: function TableOfContents_build_closure(t0) {
      this.$this = t0;
    },
    TableOfContents_build__closure: function TableOfContents_build__closure(t0) {
      this.innerContext = t0;
    },
    PdfCVLinkComponent: function PdfCVLinkComponent(t0) {
      this.key = t0;
    },
    DataAccessParams$(path, convert, $T) {
      return new A.DataAccessParams(path, convert, $T._eval$1("DataAccessParams<0>"));
    },
    dataAccessProvider(params, $T) {
      var _null = null;
      return A.FutureProvider$(new A.dataAccessProvider_closure(params, $T), _null, _null, _null, _null, _null, $T);
    },
    DataAccessParams: function DataAccessParams(t0, t1, t2) {
      this.path = t0;
      this.convert = t1;
      this.$ti = t2;
    },
    dataAccessProvider_closure: function dataAccessProvider_closure(t0, t1) {
      this.params = t0;
      this.T = t1;
    },
    hobbiesProvider_closure: function hobbiesProvider_closure() {
    },
    pdfCVFileProvider_closure: function pdfCVFileProvider_closure() {
    },
    _Windowed_windowed(_this, size, $T) {
      return A._Windowed_windowed$body(_this, size, $T, $T._eval$1("List<0>"));
    },
    _Windowed_windowed$body($async$_this, $async$size, $async$$T, $async$type) {
      return A._makeSyncStarIterable(function() {
        var _this = $async$_this,
          size = $async$size,
          $T = $async$$T;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t2, t3, t1, movingWindow;
        return function $async$_Windowed_windowed($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $T._eval$1("JSArray<0>");
                movingWindow = A._setArrayType([], t1);
                t2 = J.get$iterator$ax(_this.__internal$_iterable), t3 = new A.WhereIterator(t2, _this._f, _this.$ti._eval$1("WhereIterator<1>"));
              case 2:
                // for condition
                if (!t3.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                B.JSArray_methods.add$1(movingWindow, t2.get$current());
                $async$goto = movingWindow.length === size ? 4 : 5;
                break;
              case 4:
                // then
                $async$goto = 6;
                return movingWindow;
              case 6:
                // after yield
                movingWindow = A._setArrayType([], t1);
              case 5:
                // join
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                $async$goto = 7;
                return movingWindow;
              case 7:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, $async$type);
    },
    _skillsDataProvider_closure: function _skillsDataProvider_closure() {
    },
    skillsProvider_closure: function skillsProvider_closure() {
    },
    skillsProvider__closure: function skillsProvider__closure() {
    },
    skillsProvider___closure: function skillsProvider___closure() {
    },
    skillsProvider___closure0: function skillsProvider___closure0() {
    },
    skillsProvider___closure1: function skillsProvider___closure1() {
    },
    _projectsProvider_closure: function _projectsProvider_closure() {
    },
    projectsProvider_closure: function projectsProvider_closure() {
    },
    projectsProvider__closure: function projectsProvider__closure() {
    },
    projectsProvider__closure0: function projectsProvider__closure0() {
    },
    projectsProvider___closure: function projectsProvider___closure() {
    },
    _projectDescriptionProvider_closure: function _projectDescriptionProvider_closure() {
    },
    projectDescriptionProvider_closure: function projectDescriptionProvider_closure() {
    },
    projectDescriptionProvider__closure0: function projectDescriptionProvider__closure0(t0) {
      this.project = t0;
    },
    projectDescriptionProvider__closure: function projectDescriptionProvider__closure(t0) {
      this.project = t0;
    },
    ContactData: function ContactData(t0) {
      this.key = t0;
    },
    ContactData_build_closure: function ContactData_build_closure(t0) {
      this.contactData = t0;
    },
    ContactData_build__closure: function ContactData_build__closure() {
    },
    ContactData_build___closure: function ContactData_build___closure(t0) {
      this.data = t0;
    },
    ContactData_build____closure: function ContactData_build____closure() {
    },
    ContactData_build__closure0: function ContactData_build__closure0() {
    },
    ContactData_build__closure1: function ContactData_build__closure1() {
    },
    Education: function Education(t0) {
      this.key = t0;
    },
    Education_build_closure: function Education_build_closure() {
    },
    Education_build__closure0: function Education_build__closure0() {
    },
    Education_build__closure: function Education_build__closure() {
    },
    Education_build___closure: function Education_build___closure() {
    },
    _StudiesComponent: function _StudiesComponent(t0, t1) {
      this.study = t0;
      this.key = t1;
    },
    Hobbies: function Hobbies(t0) {
      this.key = t0;
    },
    Hobbies_build_closure: function Hobbies_build_closure() {
    },
    Hobbies_build__closure0: function Hobbies_build__closure0() {
    },
    Hobbies_build__closure: function Hobbies_build__closure() {
    },
    Hobbies_build___closure: function Hobbies_build___closure() {
    },
    ForeignLanguages: function ForeignLanguages(t0) {
      this.key = t0;
    },
    ForeignLanguages_build_closure: function ForeignLanguages_build_closure() {
    },
    ForeignLanguages_build__closure0: function ForeignLanguages_build__closure0() {
    },
    ForeignLanguages_build__closure: function ForeignLanguages_build__closure() {
    },
    ForeignLanguages_build___closure: function ForeignLanguages_build___closure() {
    },
    _LanguageItem: function _LanguageItem(t0, t1, t2) {
      this._known = t0;
      this._languages$_index = t1;
      this.key = t2;
    },
    _DeploymentUrl$(url) {
      var t1 = A._setArrayType(["btn", "waves-light", "amber"], type$.JSArray_String);
      return new A._DeploymentUrl(url, t1, null);
    },
    OtherProjects: function OtherProjects(t0) {
      this.key = t0;
    },
    OtherProjects_build_closure: function OtherProjects_build_closure() {
    },
    OtherProjects_build__closure0: function OtherProjects_build__closure0() {
    },
    OtherProjects_build__closure: function OtherProjects_build__closure() {
    },
    OtherProjects_build___closure: function OtherProjects_build___closure() {
    },
    OtherProjects_build___closure0: function OtherProjects_build___closure0() {
    },
    _ProjectCard: function _ProjectCard(t0, t1) {
      this.project = t0;
      this.key = t1;
    },
    _RichProjectCard: function _RichProjectCard(t0, t1) {
      this.project = t0;
      this.key = t1;
    },
    _RichProjectCard_build_closure: function _RichProjectCard_build_closure() {
    },
    _SimpleProjectCard: function _SimpleProjectCard(t0, t1) {
      this.project = t0;
      this.key = t1;
    },
    _SimpleProjectCard_build_closure: function _SimpleProjectCard_build_closure() {
    },
    _SkillsUsed: function _SkillsUsed(t0, t1) {
      this.skills = t0;
      this.key = t1;
    },
    _SkillsUsed_build_closure: function _SkillsUsed_build_closure() {
    },
    _DeploymentUrl: function _DeploymentUrl(t0, t1, t2) {
      this.url = t0;
      this._other_projects$_classes = t1;
      this.key = t2;
    },
    Skills: function Skills(t0) {
      this.key = t0;
    },
    Skills_build_closure: function Skills_build_closure() {
    },
    Skills_build__closure0: function Skills_build__closure0() {
    },
    Skills_build__closure: function Skills_build__closure() {
    },
    Skills_build___closure: function Skills_build___closure(t0) {
      this.colClasses = t0;
    },
    Skills_build____closure: function Skills_build____closure(t0, t1) {
      this.skill = t0;
      this.primary = t1;
    },
    WorkTimeline: function WorkTimeline(t0) {
      this.key = t0;
    },
    WorkTimeline_build_closure: function WorkTimeline_build_closure() {
    },
    WorkTimeline_build__closure: function WorkTimeline_build__closure() {
    },
    WorkTimeline_build___closure0: function WorkTimeline_build___closure0() {
    },
    WorkTimeline_build___closure: function WorkTimeline_build___closure() {
    },
    WorkTimeline_build____closure: function WorkTimeline_build____closure() {
    },
    WorkTimeline_build_____closure: function WorkTimeline_build_____closure(t0) {
      this.project = t0;
    },
    _ProjectListItemContent: function _ProjectListItemContent(t0, t1) {
      this.project = t0;
      this.key = t1;
    },
    _ProjectListItemContent_build_closure: function _ProjectListItemContent_build_closure() {
    },
    _ProjectListItemContent_build_closure0: function _ProjectListItemContent_build_closure0() {
    },
    _ProjectListItemContent_build_closure1: function _ProjectListItemContent_build_closure1() {
    },
    I18nContextExtension_i18n(_this, code) {
      var t1 = type$.String;
      return A.AsyncValueX_maybeWhen(A.ProviderContext_watch(_this, $.$get$i18nProvider().call$1(code), type$.AsyncValue_String), new A.I18nContextExtension_i18n_closure(), new A.I18nContextExtension_i18n_closure0(), t1, t1);
    },
    SupportedLanguages: function SupportedLanguages(t0) {
      this._name = t0;
    },
    selectedLanguageProvider_closure: function selectedLanguageProvider_closure() {
    },
    _currentTranslationProvider_closure: function _currentTranslationProvider_closure() {
    },
    i18nProvider_closure: function i18nProvider_closure() {
    },
    i18nProvider__closure: function i18nProvider__closure(t0) {
      this.code = t0;
    },
    I18nContextExtension_i18n_closure0: function I18nContextExtension_i18n_closure0() {
    },
    I18nContextExtension_i18n_closure: function I18nContextExtension_i18n_closure() {
    },
    EqualUnmodifiableListView: function EqualUnmodifiableListView(t0, t1, t2) {
      this._freezed_annotation$_source = t0;
      this._collection$_source = t1;
      this.$ti = t2;
    },
    Freezed: function Freezed() {
    },
    get(url) {
      return A._withClient(new A.get_closure(url, null), type$.Response);
    },
    _withClient(fn, $T) {
      return A._withClient$body(fn, $T, $T);
    },
    _withClient$body(fn, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], t1, client;
      var $async$_withClient = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              client = new A.BrowserClient(A.LinkedHashSet_LinkedHashSet$_empty(type$.HttpRequest));
              $async$handler = 3;
              $async$goto = 6;
              return A._asyncAwait(fn.call$1(client), $async$_withClient);
            case 6:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              $async$next = [1];
              // goto finally
              $async$goto = 4;
              break;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              J.close$0$z(client);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_withClient, $async$completer);
    },
    get_closure: function get_closure(t0, t1) {
      this.url = t0;
      this.headers = t1;
    },
    BaseClient: function BaseClient() {
    },
    BaseRequest: function BaseRequest() {
    },
    BaseRequest_closure: function BaseRequest_closure() {
    },
    BaseRequest_closure0: function BaseRequest_closure0() {
    },
    BaseResponse: function BaseResponse() {
    },
    BrowserClient: function BrowserClient(t0) {
      this._xhrs = t0;
    },
    BrowserClient_send_closure: function BrowserClient_send_closure(t0, t1, t2) {
      this.xhr = t0;
      this.completer = t1;
      this.request = t2;
    },
    BrowserClient_send_closure0: function BrowserClient_send_closure0(t0, t1) {
      this.completer = t0;
      this.request = t1;
    },
    ByteStream: function ByteStream(t0) {
      this._stream = t0;
    },
    ByteStream_toBytes_closure: function ByteStream_toBytes_closure(t0) {
      this.completer = t0;
    },
    ClientException: function ClientException(t0) {
      this.message = t0;
    },
    Request$(method, url) {
      var t1 = new Uint8Array(0),
        t2 = $.$get$BaseRequest__tokenRE()._nativeRegExp;
      if (!t2.test(method))
        A.throwExpression(A.ArgumentError$value(method, "method", "Not a valid method"));
      t2 = type$.String;
      return new A.Request(B.C_Utf8Codec, t1, method, url, A.LinkedHashMap_LinkedHashMap(new A.BaseRequest_closure(), new A.BaseRequest_closure0(), null, t2, t2));
    },
    Request: function Request(t0, t1, t2, t3, t4) {
      var _ = this;
      _._defaultEncoding = t0;
      _._bodyBytes = t1;
      _.method = t2;
      _.url = t3;
      _.headers = t4;
      _._finalized = false;
    },
    Response_fromStream(response) {
      return A.Response_fromStream$body(response);
    },
    Response_fromStream$body(response) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, body, t1, t2, t3, t4, t5, t6;
      var $async$Response_fromStream = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(response.stream.toBytes$0(), $async$Response_fromStream);
            case 3:
              // returning from await.
              body = $async$result;
              t1 = response.statusCode;
              t2 = response.request;
              t3 = response.headers;
              t4 = response.reasonPhrase;
              t5 = A.toUint8List(body);
              t6 = body.length;
              t5 = new A.Response(t5, t2, t1, t4, t6, t3, false, true);
              t5.BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request(t1, t6, t3, false, true, t4, t2);
              $async$returnValue = t5;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Response_fromStream, $async$completer);
    },
    Response: function Response(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.bodyBytes = t0;
      _.request = t1;
      _.statusCode = t2;
      _.reasonPhrase = t3;
      _.contentLength = t4;
      _.headers = t5;
      _.isRedirect = t6;
      _.persistentConnection = t7;
    },
    StreamedResponse: function StreamedResponse(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.stream = t0;
      _.request = t1;
      _.statusCode = t2;
      _.reasonPhrase = t3;
      _.contentLength = t4;
      _.headers = t5;
      _.isRedirect = t6;
      _.persistentConnection = t7;
    },
    AppBinding: function AppBinding(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._rawState = t0;
      _.SyncBinding__isLoadingState = t1;
      _.SyncBinding__globalSyncRegistry = t2;
      _.ComponentsBinding__rootElements = t3;
      _.ComponentsBinding__globalKeyRegistry = t4;
      _.SchedulerBinding__schedulerPhase = t5;
      _.SchedulerBinding__postFrameCallbacks = t6;
    },
    AppBinding_scheduleFrame_closure: function AppBinding_scheduleFrame_closure(t0) {
      this.frameCallback = t0;
    },
    _AppBinding_BindingBase_SchedulerBinding: function _AppBinding_BindingBase_SchedulerBinding() {
    },
    _AppBinding_BindingBase_SchedulerBinding_ComponentsBinding: function _AppBinding_BindingBase_SchedulerBinding_ComponentsBinding() {
    },
    _AppBinding_BindingBase_SchedulerBinding_ComponentsBinding_SyncBinding: function _AppBinding_BindingBase_SchedulerBinding_ComponentsBinding_SyncBinding() {
    },
    _EventBinding$(element, type, fn) {
      var t1 = new A._EventBinding(type, fn);
      t1._EventBinding$3(element, type, fn);
      return t1;
    },
    DomNodeDataExt_get_data(_this) {
      var t1 = _this.RenderElement__data;
      return t1 == null ? _this.RenderElement__data = new A.DomNodeData(A._setArrayType([], type$.JSArray_Node)) : t1;
    },
    _extension_1_clearOrSetAttribute(_this, $name, value) {
      if (_this.getAttribute($name) == value)
        return;
      if (value == null)
        _this.removeAttribute($name);
      else
        _this.setAttribute($name, value);
    },
    DomNodeData: function DomNodeData(t0) {
      this.node = null;
      this.toHydrate = t0;
      this.events = null;
    },
    DomNodeData_clearEvents_closure: function DomNodeData_clearEvents_closure() {
    },
    _EventBinding: function _EventBinding(t0, t1) {
      this.type = t0;
      this.fn = t1;
      this.subscription = null;
    },
    _EventBinding_closure: function _EventBinding_closure(t0) {
      this.$this = t0;
    },
    BrowserDomRenderer: function BrowserDomRenderer(t0, t1, t2) {
      this.container = t0;
      this.from = t1;
      this.to = t2;
    },
    BrowserDomRenderer_renderNode_closure: function BrowserDomRenderer_renderNode_closure() {
    },
    BrowserDomRenderer_renderNode_closure0: function BrowserDomRenderer_renderNode_closure0(t0, t1, t2) {
      this.prevEventTypes = t0;
      this.dataEvents = t1;
      this.elem = t2;
    },
    BrowserDomRenderer_renderNode_closure1: function BrowserDomRenderer_renderNode_closure1(t0) {
      this.dataEvents = t0;
    },
    decodeConfig(config) {
      if (config == null)
        return null;
      else if (typeof config == "string")
        return type$.nullable_Map_String_dynamic._as(J.cast$2$0$ax(B.C_StateDecoder.convert$1(type$.StateCodec._eval$1("Codec.T")._as(config)), type$.String, type$.dynamic));
      else
        return type$.nullable_Map_String_dynamic._as(B.C_JsonCodec.decode$2$reviver(0, self.JSON.stringify(config), null));
    },
    _JasprConfig: function _JasprConfig() {
    },
    _IslandConfig: function _IslandConfig() {
    },
    _AppConfig: function _AppConfig() {
    },
    Builder$single(builder) {
      return new A.Builder(new A._WrappedComponentBuilder(builder).get$$call(), null);
    },
    Builder: function Builder(t0, t1) {
      this.builder = t0;
      this.key = t1;
    },
    _WrappedComponentBuilder: function _WrappedComponentBuilder(t0) {
      this._builder = t0;
    },
    BindingBase: function BindingBase() {
    },
    SchedulerPhase: function SchedulerPhase(t0) {
      this._name = t0;
    },
    SchedulerBinding: function SchedulerBinding() {
    },
    SchedulerBinding_scheduleBuild_closure: function SchedulerBinding_scheduleBuild_closure(t0, t1) {
      this.$this = t0;
      this.buildCallback = t1;
    },
    SyncBinding: function SyncBinding() {
    },
    StateCodec: function StateCodec() {
    },
    StateDecoder: function StateDecoder() {
    },
    StateEncoder: function StateEncoder() {
    },
    _RootElement$(component) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new A._RootElement(null, t1, component, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    },
    Element__sort(a, b) {
      var t2,
        t1 = type$.Element_2;
      t1._as(a);
      t1._as(b);
      t1 = a._depth;
      t1.toString;
      t2 = b._depth;
      t2.toString;
      if (t1 < t2)
        return -1;
      else if (t2 < t1)
        return 1;
      else {
        t1 = b._dirty;
        if (t1 && !a._dirty)
          return -1;
        else if (a._dirty && !t1)
          return 1;
      }
      return 0;
    },
    _InactiveElements__deactivateRecursively(element) {
      element.deactivate$0();
      element.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
    },
    InheritedElement$(component) {
      var t1 = A.HashMap_HashMap(null, null, null, type$.Element_2, type$.nullable_Object),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.InheritedElement(t1, t2, component, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    },
    StatefulElement$(component) {
      var t1 = component.createState$0(),
        t2 = A.HashSet_HashSet(type$.Element_2),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      t3 = new A.StatefulElement(t1, t2, t3, component, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
      t1._framework$_element = t3;
      t1.set$_component(component);
      return t3;
    },
    BuildOwner: function BuildOwner(t0, t1) {
      var _ = this;
      _._dirtyElements = t0;
      _._isFirstBuild = _._scheduledBuild = false;
      _._inactiveElements = t1;
      _._dirtyElementsNeedsResorting = null;
      _._debugBuilding = false;
      _._debugCurrentBuildTarget = null;
      _._debugStateLockLevel = 0;
    },
    BuildOwner_performRebuildOn_closure: function BuildOwner_performRebuildOn_closure(t0, t1, t2) {
      this.child = t0;
      this.buildCompleter = t1;
      this.whenComplete = t2;
    },
    BuildOwner_performRebuildOn_closure0: function BuildOwner_performRebuildOn_closure0(t0, t1, t2) {
      this.$this = t0;
      this.child = t1;
      this.buildCompleter = t2;
    },
    BuildOwner__rebuildAndWait_closure: function BuildOwner__rebuildAndWait_closure(t0) {
      this.buildCompleter = t0;
    },
    ComponentsBinding: function ComponentsBinding() {
    },
    ComponentsBinding_attachRootComponent_closure: function ComponentsBinding_attachRootComponent_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.buildOwner = t1;
      _.attachTo = t2;
      _.app = t3;
    },
    _Root: function _Root(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _RootElement: function _RootElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RenderElement__data = t0;
      _._child = null;
      _._debugDoingBuild = false;
      _._parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._parentNode = _._lastNode = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._renderer = _._owner = null;
      _._lifecycleState = t3;
      _._parentChanged = false;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t4;
    },
    DomComponent: function DomComponent(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.tag = t0;
      _.id = t1;
      _.classes = t2;
      _.styles = t3;
      _.attributes = t4;
      _.events = t5;
      _._child = t6;
      _._children = t7;
      _.key = t8;
    },
    DomElement: function DomElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.RenderElement__data = t0;
      _._children = null;
      _._forgottenChildren = t1;
      _._debugDoingBuild = false;
      _._parent = null;
      _._cachedHash = t2;
      _._depth = null;
      _._component = t3;
      _._parentNode = _._lastNode = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._renderer = _._owner = null;
      _._lifecycleState = t4;
      _._parentChanged = false;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t5;
    },
    Text: function Text(t0, t1, t2) {
      this.text = t0;
      this.rawHtml = t1;
      this.key = t2;
    },
    NoChildElement: function NoChildElement() {
    },
    TextElement: function TextElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RenderElement__data = t0;
      _._parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._parentNode = _._lastNode = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._renderer = _._owner = null;
      _._lifecycleState = t3;
      _._parentChanged = false;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t4;
    },
    Component: function Component() {
    },
    _ElementLifecycle: function _ElementLifecycle(t0) {
      this._name = t0;
    },
    Element: function Element() {
    },
    Element__updateAncestorSiblingRecursively_closure: function Element__updateAncestorSiblingRecursively_closure() {
    },
    Element_rebuild_closure: function Element_rebuild_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.onRebuilt = t2;
    },
    _InactiveElements: function _InactiveElements(t0) {
      this._elements = t0;
    },
    _InactiveElements__unmount_closure: function _InactiveElements__unmount_closure(t0, t1, t2) {
      this.$this = t0;
      this.element = t1;
      this.detachNode = t2;
    },
    InheritedComponent: function InheritedComponent() {
    },
    InheritedElement: function InheritedElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._dependents = t0;
      _._child = null;
      _._debugDoingBuild = false;
      _._parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._parentNode = _._lastNode = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._renderer = _._owner = null;
      _._lifecycleState = t3;
      _._parentChanged = false;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t4;
    },
    MultiChildElement: function MultiChildElement() {
    },
    MultiChildElement_updateChildren_replaceWithNullIfForgotten: function MultiChildElement_updateChildren_replaceWithNullIfForgotten(t0) {
      this.forgottenChildren = t0;
    },
    RenderElement: function RenderElement() {
    },
    _DomElement_MultiChildElement_RenderElement__firstBuild_closure: function _DomElement_MultiChildElement_RenderElement__firstBuild_closure(t0, t1) {
      this.$this = t0;
      this.onBuilt = t1;
    },
    _TextElement_NoChildElement_RenderElement__firstBuild_closure: function _TextElement_NoChildElement_RenderElement__firstBuild_closure(t0, t1) {
      this.$this = t0;
      this.onBuilt = t1;
    },
    __RootElement_SingleChildElement_RenderElement__firstBuild_closure: function __RootElement_SingleChildElement_RenderElement__firstBuild_closure(t0, t1) {
      this.$this = t0;
      this.onBuilt = t1;
    },
    Renderer: function Renderer() {
    },
    SingleChildElement: function SingleChildElement() {
    },
    SyncStateMixin: function SyncStateMixin() {
    },
    StatefulComponent: function StatefulComponent() {
    },
    _StateLifecycle: function _StateLifecycle(t0) {
      this._name = t0;
    },
    State: function State() {
    },
    StatefulElement: function StatefulElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._framework$_state = t0;
      _._didChangeDependencies = false;
      _._children = null;
      _._forgottenChildren = t1;
      _._debugDoingBuild = false;
      _._parent = null;
      _._cachedHash = t2;
      _._depth = null;
      _._component = t3;
      _._parentNode = _._lastNode = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._renderer = _._owner = null;
      _._lifecycleState = t4;
      _._parentChanged = false;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t5;
    },
    StatelessComponent: function StatelessComponent() {
    },
    StatelessElement: function StatelessElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._children = null;
      _._forgottenChildren = t0;
      _._debugDoingBuild = false;
      _._parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._parentNode = _._lastNode = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._renderer = _._owner = null;
      _._lifecycleState = t3;
      _._parentChanged = false;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t4;
    },
    _DomElement_MultiChildElement_RenderElement: function _DomElement_MultiChildElement_RenderElement() {
    },
    _TextElement_NoChildElement_RenderElement: function _TextElement_NoChildElement_RenderElement() {
    },
    __RootElement_SingleChildElement_RenderElement: function __RootElement_SingleChildElement_RenderElement() {
    },
    h3(children, classes) {
      var _null = null;
      return new A.DomComponent("h3", _null, classes, _null, _null, _null, _null, children, _null);
    },
    h5(children, classes) {
      var _null = null;
      return new A.DomComponent("h5", _null, classes, _null, _null, _null, _null, children, _null);
    },
    div(children, classes, id) {
      var _null = null;
      return new A.DomComponent("div", id, classes, _null, _null, _null, _null, children, _null);
    },
    ul(children, classes) {
      var _null = null;
      return new A.DomComponent("ul", _null, classes, _null, _null, _null, _null, children, _null);
    },
    li(children, classes, id) {
      var _null = null,
        t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t1, t1);
      return new A.DomComponent("li", id, classes, _null, t1, _null, _null, children, _null);
    },
    p(children, classes) {
      var _null = null;
      return new A.DomComponent("p", _null, classes, _null, _null, _null, _null, children, _null);
    },
    img(classes, src) {
      var _null = null,
        t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t1, t1);
      t1.$indexSet(0, "src", src);
      return new A.DomComponent("img", _null, classes, _null, t1, _null, _null, _null, _null);
    },
    a(children, classes, href, target) {
      var _null = null,
        t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t1, t1);
      t1.$indexSet(0, "href", href);
      if (target != null)
        t1.$indexSet(0, "target", "_blank");
      return new A.DomComponent("a", _null, classes, _null, t1, _null, _null, children, _null);
    },
    b(children, attributes, classes) {
      var _null = null;
      return new A.DomComponent("b", _null, classes, _null, attributes, _null, _null, children, _null);
    },
    i(children, classes, styles) {
      var _null = null;
      return new A.DomComponent("i", _null, classes, styles, _null, _null, _null, children, _null);
    },
    span(children, classes, events, styles) {
      var _null = null;
      return new A.DomComponent("span", _null, classes, styles, _null, events, _null, children, _null);
    },
    Target: function Target(t0) {
      this._name = t0;
    },
    FontStyle: function FontStyle() {
    },
    FontWeight: function FontWeight(t0, t1) {
      this.value = t0;
      this._name = t1;
    },
    _Unit: function _Unit() {
    },
    _RemUnit: function _RemUnit(t0, t1) {
      this._unit = t0;
      this._value = t1;
    },
    _TextStyles: function _TextStyles(t0, t1, t2) {
      this.fontStyle = t0;
      this.fontSize = t1;
      this.fontWeight = t2;
    },
    ProviderScope__scopeOf(context, listen) {
      var t1, t2,
        element = type$.nullable__UncontrolledProviderScopeElement._as(context.getElementForInheritedComponentOfExactType$1$0(type$.UncontrolledProviderScope));
      if (element == null)
        throw A.wrapException(A.StateError$("No ProviderScope found"));
      if (listen) {
        if (context._dependencies == null)
          context.set$_dependencies(A.HashSet_HashSet(type$.InheritedElement));
        context._dependencies.add$1(0, element);
        t1 = type$.nullable_ProviderDependencies._as(element.super$InheritedElement$getDependencies(context));
        if (t1 == null) {
          t1 = type$.ProviderListenable_dynamic;
          t2 = type$.ProviderSubscription_dynamic;
          t2 = new A.ProviderDependencies(context, A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
          t1 = t2;
        }
        element.super$InheritedElement$setDependencies(context, t1);
        A.InheritedElement.prototype.get$component.call(element);
      }
      return element;
    },
    ProviderContext_watch(_this, provider, $T) {
      var t1 = A.ProviderScope__scopeOf(_this, true);
      $T._eval$1("ProviderListenable<0>")._as(provider);
      return type$.nullable_ProviderDependencies._as(t1.super$InheritedElement$getDependencies(_this)).watch$1$1(provider, $T);
    },
    ProviderScope: function ProviderScope(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ProviderScopeState: function ProviderScopeState(t0, t1) {
      var _ = this;
      _.__ProviderScopeState_container_F = $;
      _._debugParentOwner = null;
      _._framework0$_dirty = false;
      _.SyncScopeMixin_syncId = t0;
      _._component = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    UncontrolledProviderScope: function UncontrolledProviderScope(t0, t1, t2) {
      this.container = t0;
      this.child = t1;
      this.key = t2;
    },
    _UncontrolledProviderScopeElement: function _UncontrolledProviderScopeElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._task = null;
      _._mounted = true;
      _._dependents = t0;
      _._child = null;
      _._debugDoingBuild = false;
      _._parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._parentNode = _._lastNode = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._renderer = _._owner = null;
      _._lifecycleState = t3;
      _._parentChanged = false;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._inDirtyList = false;
      _._asyncFirstBuild = null;
      _._asyncFirstBuildChildren = t4;
    },
    _UncontrolledProviderScopeElement__jasprVsync_closure: function _UncontrolledProviderScopeElement__jasprVsync_closure(t0) {
      this.$this = t0;
    },
    _UncontrolledProviderScopeElement__jasprVsync__closure: function _UncontrolledProviderScopeElement__jasprVsync__closure() {
    },
    ProviderDependencies: function ProviderDependencies(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dependent = t0;
      _.listenedContainer = null;
      _.watchers = t1;
      _.listeners = t2;
      _.oldWatchers = t3;
      _.oldListeners = t4;
    },
    ProviderDependencies_watch_closure: function ProviderDependencies_watch_closure(t0, t1, t2) {
      this.$this = t0;
      this.target = t1;
      this.T = t2;
    },
    _ProviderScopeState_State_SyncStateMixin: function _ProviderScopeState_State_SyncStateMixin() {
    },
    _ProviderScopeState_State_SyncStateMixin_SyncScopeMixin: function _ProviderScopeState_State_SyncStateMixin_SyncScopeMixin() {
    },
    _syncStateProvider_closure: function _syncStateProvider_closure() {
    },
    SyncScopeMixin: function SyncScopeMixin() {
    },
    SyncScopeMixin_updateState_closure: function SyncScopeMixin_updateState_closure(t0) {
      this.value = t0;
    },
    Context_Context(style) {
      var current = style == null ? A.current() : ".";
      if (style == null)
        style = $.$get$Style_platform();
      return new A.Context(type$.InternalStyle._as(style), current);
    },
    _parseUri(uri) {
      if (type$.Uri._is(uri))
        return uri;
      throw A.wrapException(A.ArgumentError$value(uri, "uri", "Value must be a String or a Uri"));
    },
    _validateArgList(method, args) {
      var numArgs, i, numArgs0, message, t1, t2, t3, t4;
      for (numArgs = args.length, i = 1; i < numArgs; ++i) {
        if (args[i] == null || args[i - 1] != null)
          continue;
        for (; numArgs >= 1; numArgs = numArgs0) {
          numArgs0 = numArgs - 1;
          if (args[numArgs0] != null)
            break;
        }
        message = new A.StringBuffer("");
        t1 = "" + (method + "(");
        message._contents = t1;
        t2 = A._arrayInstanceType(args);
        t3 = t2._eval$1("SubListIterable<1>");
        t4 = new A.SubListIterable(args, 0, numArgs, t3);
        t4.SubListIterable$3(args, 0, numArgs, t2._precomputed1);
        t3 = t1 + new A.MappedListIterable(t4, t3._eval$1("String(ListIterable.E)")._as(new A._validateArgList_closure()), t3._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, ", ");
        message._contents = t3;
        message._contents = t3 + ("): part " + (i - 1) + " was null, but part " + i + " was not.");
        throw A.wrapException(A.ArgumentError$(message.toString$0(0), null));
      }
    },
    Context: function Context(t0, t1) {
      this.style = t0;
      this._context$_current = t1;
    },
    Context_joinAll_closure: function Context_joinAll_closure() {
    },
    Context_split_closure: function Context_split_closure() {
    },
    _validateArgList_closure: function _validateArgList_closure() {
    },
    InternalStyle: function InternalStyle() {
    },
    ParsedPath_ParsedPath$parse(path, style) {
      var t1, parts, separators, start, i,
        root = style.getRoot$1(path);
      style.isRootRelative$1(path);
      if (root != null)
        path = B.JSString_methods.substring$1(path, root.length);
      t1 = type$.JSArray_String;
      parts = A._setArrayType([], t1);
      separators = A._setArrayType([], t1);
      t1 = path.length;
      if (t1 !== 0 && style.isSeparator$1(B.JSString_methods._codeUnitAt$1(path, 0))) {
        if (0 >= t1)
          return A.ioore(path, 0);
        B.JSArray_methods.add$1(separators, path[0]);
        start = 1;
      } else {
        B.JSArray_methods.add$1(separators, "");
        start = 0;
      }
      for (i = start; i < t1; ++i)
        if (style.isSeparator$1(B.JSString_methods._codeUnitAt$1(path, i))) {
          B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(path, start, i));
          B.JSArray_methods.add$1(separators, path[i]);
          start = i + 1;
        }
      if (start < t1) {
        B.JSArray_methods.add$1(parts, B.JSString_methods.substring$1(path, start));
        B.JSArray_methods.add$1(separators, "");
      }
      return new A.ParsedPath(style, root, parts, separators);
    },
    ParsedPath: function ParsedPath(t0, t1, t2, t3) {
      var _ = this;
      _.style = t0;
      _.root = t1;
      _.parts = t2;
      _.separators = t3;
    },
    PathException$(message) {
      return new A.PathException(message);
    },
    PathException: function PathException(t0) {
      this.message = t0;
    },
    Style__getPlatformStyle() {
      if (A.Uri_base().get$scheme() !== "file")
        return $.$get$Style_url();
      var t1 = A.Uri_base();
      if (!B.JSString_methods.endsWith$1(t1.get$path(t1), "/"))
        return $.$get$Style_url();
      if (A._Uri__Uri(null, "a/b", null, null).toFilePath$0() === "a\\b")
        return $.$get$Style_windows();
      return $.$get$Style_posix();
    },
    Style: function Style() {
    },
    PosixStyle: function PosixStyle(t0, t1, t2) {
      this.separatorPattern = t0;
      this.needsSeparatorPattern = t1;
      this.rootPattern = t2;
    },
    UrlStyle: function UrlStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    WindowsStyle: function WindowsStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    WindowsStyle_absolutePathToUri_closure: function WindowsStyle_absolutePathToUri_closure() {
    },
    FutureHandlerProviderElementMixin_handleUpdateShouldNotify(previous, next, $T) {
      var wasLoading = previous.get$isLoading(),
        isLoading = next.get$isLoading();
      if (wasLoading || isLoading)
        return wasLoading !== isLoading;
      return true;
    },
    FutureHandlerProviderElementMixin: function FutureHandlerProviderElementMixin() {
    },
    FutureHandlerProviderElementMixin_handleFuture_closure: function FutureHandlerProviderElementMixin_handleFuture_closure(t0, t1) {
      this.$this = t0;
      this.create = t1;
    },
    FutureHandlerProviderElementMixin_handleFuture_closure_cancel: function FutureHandlerProviderElementMixin_handleFuture_closure_cancel(t0) {
      this._box_0 = t0;
    },
    FutureHandlerProviderElementMixin_handleFuture__closure: function FutureHandlerProviderElementMixin_handleFuture__closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.data = t2;
      _.done = t3;
    },
    FutureHandlerProviderElementMixin_handleFuture__closure0: function FutureHandlerProviderElementMixin_handleFuture__closure0(t0, t1, t2) {
      this._box_0 = t0;
      this.error = t1;
      this.done = t2;
    },
    FutureHandlerProviderElementMixin__handleAsync_closure: function FutureHandlerProviderElementMixin__handleAsync_closure(t0, t1) {
      this.$this = t0;
      this.didChangeDependency = t1;
    },
    FutureHandlerProviderElementMixin__handleAsync_closure1: function FutureHandlerProviderElementMixin__handleAsync_closure1(t0, t1) {
      this.$this = t0;
      this.didChangeDependency = t1;
    },
    FutureHandlerProviderElementMixin__handleAsync_closure2: function FutureHandlerProviderElementMixin__handleAsync_closure2(t0) {
      this.$this = t0;
    },
    FutureHandlerProviderElementMixin__handleAsync_closure0: function FutureHandlerProviderElementMixin__handleAsync_closure0(t0) {
      this.$this = t0;
    },
    ProviderFamilyBuilder: function ProviderFamilyBuilder() {
    },
    FutureProviderFamilyBuilder: function FutureProviderFamilyBuilder() {
    },
    AsyncTransition_asyncTransition(_this, newState, seamless, $T) {
      var t1 = _this._framework1$_state,
        previous = t1 == null ? null : t1.get$requireState();
      if (previous == null)
        _this.setState$1(newState);
      else
        _this.setState$1(newState.copyWithPrevious$2$isRefresh(previous, seamless));
    },
    AsyncLoading$($T) {
      return new A.AsyncLoading(false, null, null, null, $T._eval$1("AsyncLoading<0>"));
    },
    AsyncError$0(error, stackTrace, $T) {
      return new A.AsyncError0(false, false, null, error, stackTrace, $T._eval$1("AsyncError0<0>"));
    },
    AsyncValueX_get_requireValue(_this, $T) {
      var t1, t2;
      if (_this.get$hasValue()) {
        t1 = _this.get$value(_this);
        return t1 == null ? $T._as(t1) : t1;
      }
      if (_this.get$error(_this) != null) {
        t1 = _this.get$error(_this);
        t1.toString;
        t2 = _this.get$stackTrace();
        t2.toString;
        A.throwErrorWithCombinedStackTrace(t1, t2);
      }
      throw A.wrapException(A.StateError$("Tried to call `requireValue` on an `AsyncValue` that has no value: " + _this.toString$0(0)));
    },
    AsyncValueX_get_valueOrNull(_this, $T) {
      if (_this.get$hasValue())
        return _this.get$value(_this);
      return null;
    },
    AsyncValueX_whenData(_this, cb, $T, $R) {
      return _this.map$1$3$data$error$loading(0, new A.AsyncValueX_whenData_closure(cb, $T, $R), new A.AsyncValueX_whenData_closure0($T, $R), new A.AsyncValueX_whenData_closure1($T, $R), $R._eval$1("AsyncValue<0>"));
    },
    AsyncValueX_maybeWhen(_this, data, orElse, $T, $R) {
      return A.AsyncValueX_when(_this, data, new A.AsyncValueX_maybeWhen_closure(orElse, $R), new A.AsyncValueX_maybeWhen_closure0(orElse, $R), false, true, false, $T, $R);
    },
    AsyncValueX_when(_this, data, error, loading, skipError, skipLoadingOnRefresh, skipLoadingOnReload, $T, $R) {
      var t1, skip, t2;
      if (_this.get$isLoading()) {
        if (_this.get$isLoading())
          t1 = (_this.get$hasValue() || _this.get$error(_this) != null) && !(_this instanceof A.AsyncLoading);
        else
          t1 = false;
        if (t1)
          skip = true;
        else {
          if (!_this.get$hasValue())
            _this.get$error(_this);
          skip = false;
        }
        if (!skip)
          return loading.call$0();
      }
      if (_this.get$error(_this) != null) {
        _this.get$hasValue();
        t1 = true;
      } else
        t1 = false;
      if (t1) {
        t1 = _this.get$error(_this);
        t1.toString;
        t2 = _this.get$stackTrace();
        t2.toString;
        return error.call$2(t1, t2);
      }
      return data.call$1(A.AsyncValueX_get_requireValue(_this, $T));
    },
    AsyncValue: function AsyncValue() {
    },
    AsyncData: function AsyncData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.value = t0;
      _.isLoading = t1;
      _.error = t2;
      _.stackTrace = t3;
      _.$ti = t4;
    },
    AsyncLoading: function AsyncLoading(t0, t1, t2, t3, t4) {
      var _ = this;
      _.hasValue = t0;
      _.value = t1;
      _.error = t2;
      _.stackTrace = t3;
      _.$ti = t4;
    },
    AsyncLoading_copyWithPrevious_closure: function AsyncLoading_copyWithPrevious_closure(t0) {
      this.$this = t0;
    },
    AsyncLoading_copyWithPrevious_closure0: function AsyncLoading_copyWithPrevious_closure0(t0) {
      this.$this = t0;
    },
    AsyncLoading_copyWithPrevious_closure1: function AsyncLoading_copyWithPrevious_closure1(t0) {
      this.$this = t0;
    },
    AsyncLoading_copyWithPrevious_closure2: function AsyncLoading_copyWithPrevious_closure2(t0) {
      this.$this = t0;
    },
    AsyncLoading_copyWithPrevious_closure3: function AsyncLoading_copyWithPrevious_closure3(t0) {
      this.$this = t0;
    },
    AsyncLoading_copyWithPrevious_closure4: function AsyncLoading_copyWithPrevious_closure4(t0) {
      this.$this = t0;
    },
    AsyncError0: function AsyncError0(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.isLoading = t0;
      _.hasValue = t1;
      _._common$_value = t2;
      _.error = t3;
      _.stackTrace = t4;
      _.$ti = t5;
    },
    AsyncValueX_whenData_closure: function AsyncValueX_whenData_closure(t0, t1, t2) {
      this.cb = t0;
      this.T = t1;
      this.R = t2;
    },
    AsyncValueX_whenData_closure0: function AsyncValueX_whenData_closure0(t0, t1) {
      this.T = t0;
      this.R = t1;
    },
    AsyncValueX_whenData_closure1: function AsyncValueX_whenData_closure1(t0, t1) {
      this.T = t0;
      this.R = t1;
    },
    AsyncValueX_maybeWhen_closure: function AsyncValueX_maybeWhen_closure(t0, t1) {
      this.orElse = t0;
      this.R = t1;
    },
    AsyncValueX_maybeWhen_closure0: function AsyncValueX_maybeWhen_closure0(t0, t1) {
      this.orElse = t0;
      this.R = t1;
    },
    ProviderContainer$(observers, overrides, $parent) {
      var t9, t10, _null = null,
        t1 = A._setArrayType([], type$.JSArray_ProviderContainer),
        t2 = type$.ProviderBase_dynamic,
        t3 = A.HashMap_HashMap(_null, _null, _null, t2, t2),
        t4 = A.HashMap_HashMap(_null, _null, _null, type$.Family_dynamic, type$._FamilyOverrideRef),
        t5 = $parent == null,
        t6 = t5 ? 0 : $parent.depth + 1,
        t7 = A._setArrayType([], type$.JSArray_ProviderObserver),
        t8 = !t5;
      if (t8)
        B.JSArray_methods.addAll$1(t7, $parent._observers);
      t2 = A.LinkedHashMap_LinkedHashMap$_empty(t2, type$._StateReader);
      if (t8)
        for (t8 = $parent._stateReaders, t8 = t8.get$entries(t8), t8 = t8.get$iterator(t8); t8.moveNext$0();) {
          t9 = t8.get$current();
          t10 = t9.value;
          if (!t10.isDynamicallyCreated)
            t2.$indexSet(0, t9.key, t10);
        }
      t5 = t5 ? _null : $parent._root;
      t1 = new A.ProviderContainer(0, t6, t5 == null ? $parent : t5, $parent, t1, t3, t4, t2, t7);
      t1.ProviderContainer$3$observers$overrides$parent(observers, overrides, $parent);
      return t1;
    },
    _allTransitiveDependencies(dependencies) {
      var t1 = type$.ProviderOrFamily,
        result = A.LinkedHashSet_LinkedHashSet$_empty(t1);
      J.forEach$1$ax(dependencies, new A._allTransitiveDependencies_visitDependency(result));
      return A.List_List$unmodifiable(result, t1);
    },
    _defaultVsync(task) {
      A.Future_Future(type$.void_Function._as(task), type$.void);
    },
    AlwaysAliveProviderListenable: function AlwaysAliveProviderListenable() {
    },
    AlwaysAliveProviderBase: function AlwaysAliveProviderBase() {
    },
    AlwaysAliveAsyncSelector: function AlwaysAliveAsyncSelector() {
    },
    _StateReader: function _StateReader(t0, t1, t2, t3) {
      var _ = this;
      _.origin = t0;
      _.override = t1;
      _.container = t2;
      _.isDynamicallyCreated = t3;
      _._framework1$_element = null;
    },
    _StateReader__create_closure: function _StateReader__create_closure(t0) {
      this.$this = t0;
    },
    _StateReader__create_closure0: function _StateReader__create_closure0(t0) {
      this.$this = t0;
    },
    ProviderContainer: function ProviderContainer(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._debugOverridesLength = t0;
      _.__ProviderContainer__scheduler_FI = $;
      _.depth = t1;
      _._root = t2;
      _._framework1$_parent = t3;
      _._framework1$_children = t4;
      _._overrideForProvider = t5;
      _._overrideForFamily = t6;
      _._stateReaders = t7;
      _._observers = t8;
      _._disposed = false;
    },
    ProviderContainer__getStateReader_getReader: function ProviderContainer__getStateReader_getReader(t0, t1) {
      this.$this = t0;
      this.provider = t1;
    },
    ProviderContainer__getStateReader_getReader_setupOverride: function ProviderContainer__getStateReader_getReader_setupOverride(t0) {
      this.familyOverrideRef = t0;
    },
    ProviderContainer__getStateReader_getReader_closure: function ProviderContainer__getStateReader_getReader_closure(t0) {
      this.$this = t0;
    },
    ProviderContainer__getStateReader_getReader_closure0: function ProviderContainer__getStateReader_getReader_closure0() {
    },
    ProviderContainer__getStateReader_getReader_closure1: function ProviderContainer__getStateReader_getReader_closure1() {
    },
    ProviderContainer__getStateReader_getReader_closure2: function ProviderContainer__getStateReader_getReader_closure2(t0, t1) {
      this.provider = t0;
      this.deepestOverrideContainer = t1;
    },
    ProviderContainer_getAllProviderElementsInOrder_closure: function ProviderContainer_getAllProviderElementsInOrder_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    ProviderContainer_getAllProviderElementsInOrder_closure0: function ProviderContainer_getAllProviderElementsInOrder_closure0(t0, t1, t2) {
      this.$this = t0;
      this.visitedNodes = t1;
      this.queue = t2;
    },
    ProviderContainer_getAllProviderElementsInOrder__closure: function ProviderContainer_getAllProviderElementsInOrder__closure(t0, t1, t2) {
      this._box_1 = t0;
      this.$this = t1;
      this.visitedNodes = t2;
    },
    ProviderContainer_getAllProviderElementsInOrder_closure1: function ProviderContainer_getAllProviderElementsInOrder_closure1() {
    },
    CircularDependencyError: function CircularDependencyError() {
    },
    ProviderElementBase: function ProviderElementBase() {
    },
    ProviderElementBase_requireState_closure: function ProviderElementBase_requireState_closure(t0) {
      this.$this = t0;
    },
    ProviderElementBase_mount_closure: function ProviderElementBase_mount_closure(t0) {
      this.$this = t0;
    },
    ProviderElementBase_mount_closure0: function ProviderElementBase_mount_closure0(t0) {
      this.$this = t0;
    },
    ProviderElementBase_invalidateSelf_closure: function ProviderElementBase_invalidateSelf_closure() {
    },
    ProviderElementBase_invalidateSelf_closure0: function ProviderElementBase_invalidateSelf_closure0() {
    },
    ProviderElementBase__maybeRebuildDependencies_closure: function ProviderElementBase__maybeRebuildDependencies_closure() {
    },
    ProviderElementBase__notifyListeners_closure: function ProviderElementBase__notifyListeners_closure(t0, t1) {
      this.$this = t0;
      this.previousState = t1;
    },
    ProviderElementBase__notifyListeners_closure0: function ProviderElementBase__notifyListeners_closure0(t0) {
      this.$this = t0;
    },
    ProviderElementBase__notifyListeners_closure1: function ProviderElementBase__notifyListeners_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.listeners = t1;
      _.previousState = t2;
      _.subscribers = t3;
    },
    ProviderElementBase__notifyListeners_closure2: function ProviderElementBase__notifyListeners_closure2(t0, t1, t2) {
      this.$this = t0;
      this.listeners = t1;
      this.subscribers = t2;
    },
    ProviderElementBase__notifyListeners_closure3: function ProviderElementBase__notifyListeners_closure3(t0) {
      this.$this = t0;
    },
    ProviderElementBase__notifyListeners_closure4: function ProviderElementBase__notifyListeners_closure4(t0, t1) {
      this.$this = t0;
      this.observer = t1;
    },
    ProviderElementBase__markDependencyMayHaveChanged_closure: function ProviderElementBase__markDependencyMayHaveChanged_closure() {
    },
    ProviderElementBase__markDependencyMayHaveChanged_closure0: function ProviderElementBase__markDependencyMayHaveChanged_closure0() {
    },
    ProviderElementBase_watch_closure: function ProviderElementBase_watch_closure(t0, t1) {
      this.$this = t0;
      this.T = t1;
    },
    ProviderElementBase_watch_closure0: function ProviderElementBase_watch_closure0(t0) {
      this.$this = t0;
    },
    ProviderElementBase_watch_closure1: function ProviderElementBase_watch_closure1(t0, t1) {
      this.$this = t0;
      this.element = t1;
    },
    ProviderElementBase__listenElement_closure: function ProviderElementBase__listenElement_closure(t0, t1) {
      this.listener = t0;
      this.T = t1;
    },
    Family: function Family() {
    },
    _FamilyMixin: function _FamilyMixin() {
    },
    FamilyBase: function FamilyBase() {
    },
    FamilyBase_call_closure: function FamilyBase_call_closure(t0, t1) {
      this.$this = t0;
      this.argument = t1;
    },
    ProviderOrFamily: function ProviderOrFamily() {
    },
    _allTransitiveDependencies_visitDependency: function _allTransitiveDependencies_visitDependency(t0) {
      this.result = t0;
    },
    ProviderListenable: function ProviderListenable() {
    },
    ProviderBase: function ProviderBase() {
    },
    _ExternalProviderSubscription: function _ExternalProviderSubscription(t0, t1, t2, t3) {
      var _ = this;
      _._listener = t0;
      _._listenedElement = t1;
      _.onError = t2;
      _._closed = false;
      _.$ti = t3;
    },
    _ProviderListener: function _ProviderListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _.listener = t0;
      _.dependentElement = t1;
      _.listenedElement = t2;
      _.onError = t3;
      _.$ti = t4;
    },
    OverrideWithValueMixin: function OverrideWithValueMixin() {
    },
    ProviderElementProxy: function ProviderElementProxy(t0, t1, t2) {
      this._origin = t0;
      this._lense = t1;
      this.$ti = t2;
    },
    _ProviderScheduler: function _ProviderScheduler(t0, t1) {
      this._stateToDispose = t0;
      this._stateToRefresh = t1;
      this._pendingTaskCompleter = null;
    },
    _FamilyBase_Family__FamilyMixin: function _FamilyBase_Family__FamilyMixin() {
    },
    _ProviderBase_ProviderOrFamily_ProviderListenable: function _ProviderBase_ProviderOrFamily_ProviderListenable() {
    },
    _ProviderElementProxy_Object_ProviderListenable: function _ProviderElementProxy_Object_ProviderListenable() {
    },
    _ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable: function _ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable() {
    },
    FutureProvider$(_createFn, argument, debugGetCreateSourceHash, dependencies, from, $name, $T) {
      return new A.FutureProvider(_createFn, dependencies, debugGetCreateSourceHash, $name, from, argument, $T._eval$1("FutureProvider<0>"));
    },
    FutureProvider___new_tearOff(_createFn, argument, debugGetCreateSourceHash, dependencies, from, $name, $T) {
      $T._eval$1("0/(FutureProviderRef<0>)")._as(_createFn);
      A._asStringQ($name);
      type$.nullable_Family_dynamic._as(from);
      type$.nullable_List_ProviderOrFamily._as(dependencies);
      return A.FutureProvider$(_createFn, argument, type$.nullable_String_Function._as(debugGetCreateSourceHash), dependencies, from, $name, $T);
    },
    _FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin_dispose_closure: function _FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    _FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin_dispose_closure0: function _FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin_dispose_closure0() {
    },
    _FutureProviderBase: function _FutureProviderBase() {
    },
    FutureProvider: function FutureProvider(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._future_provider$_createFn = t0;
      _.dependencies = t1;
      _.debugGetCreateSourceHash = t2;
      _.name = t3;
      _.from = t4;
      _.argument = t5;
      _.$ti = t6;
    },
    FutureProviderElement: function FutureProviderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.FutureHandlerProviderElementMixin_futureNotifier = t0;
      _.FutureHandlerProviderElementMixin__futureCompleter = t1;
      _.FutureHandlerProviderElementMixin__lastFuture = t2;
      _.FutureHandlerProviderElementMixin__lastFutureSub = t3;
      _.FutureHandlerProviderElementMixin__cancelSubscription = t4;
      _._debugSkipNotifyListenersAsserts = false;
      _.__ProviderElementBase__origin_A = $;
      _._provider = t5;
      _.__ProviderElementBase__container_A = $;
      _._externalDependents = t6;
      _._listenedProviderSubscriptions = t7;
      _._providerDependents = t8;
      _._subscribers = t9;
      _._framework1$_dependencies = t10;
      _._onErrorSelfListeners = _._onChangeSelfListeners = _._onRemoveListeners = _._onAddListeners = _._onCancelListeners = _._onResumeListeners = _._onDisposeListeners = _._previousDependencies = null;
      _._didBuild = _._debugDidSetState = _._framework1$_mounted = _._didCancelOnce = _._didChangeDependency = _._dependencyMayHaveChanged = _._mustRecomputeState = false;
      _._framework1$_state = null;
      _.$ti = t11;
    },
    FutureProviderElement_create_closure: function FutureProviderElement_create_closure(t0, t1) {
      this.$this = t0;
      this.provider = t1;
    },
    FutureProviderFamily: function FutureProviderFamily(t0, t1, t2, t3, t4) {
      var _ = this;
      _._providerFactory = t0;
      _._framework1$_createFn = t1;
      _.name = t2;
      _.dependencies = t3;
      _.__FamilyBase_allTransitiveDependencies_FI = $;
      _.$ti = t4;
    },
    _FutureProvider__FutureProviderBase_AlwaysAliveProviderBase: function _FutureProvider__FutureProviderBase_AlwaysAliveProviderBase() {
    },
    _FutureProvider__FutureProviderBase_AlwaysAliveProviderBase_AlwaysAliveAsyncSelector: function _FutureProvider__FutureProviderBase_AlwaysAliveProviderBase_AlwaysAliveAsyncSelector() {
    },
    _FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin: function _FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin() {
    },
    ProxyElementValueNotifier: function ProxyElementValueNotifier(t0, t1) {
      var _ = this;
      _._result = null;
      _._count = 0;
      _._listenable$_listeners = t0;
      _._reentrantlyRemovedListeners = _._notificationCallStackDepth = 0;
      _.$ti = t1;
    },
    ProxyElementValueNotifier_result_closure: function ProxyElementValueNotifier_result_closure(t0, t1) {
      this.$this = t0;
      this.previous = t1;
    },
    _ValueListenable: function _ValueListenable() {
    },
    _ValueListenable__notifyValue_closure: function _ValueListenable__notifyValue_closure(t0, t1, t2) {
      this.$this = t0;
      this.prev = t1;
      this.next = t2;
    },
    _ValueListenable__notifyError_closure: function _ValueListenable__notifyError_closure(t0, t1, t2) {
      this.$this = t0;
      this.err = t1;
      this.stack = t2;
    },
    _ValueListenable_notifyDependencyMayHaveChanged_closure: function _ValueListenable_notifyDependencyMayHaveChanged_closure(t0) {
      this.$this = t0;
    },
    Provider$(_createFn, argument, debugGetCreateSourceHash, dependencies, from, $name, State) {
      return new A.Provider(_createFn, dependencies, debugGetCreateSourceHash, $name, from, argument, State._eval$1("Provider<0>"));
    },
    Provider___new_tearOff(_createFn, argument, debugGetCreateSourceHash, dependencies, from, $name, State) {
      State._eval$1("0(ProviderRef<0>)")._as(_createFn);
      A._asStringQ($name);
      type$.nullable_List_ProviderOrFamily._as(dependencies);
      type$.nullable_Family_dynamic._as(from);
      return A.Provider$(_createFn, argument, type$.nullable_String_Function._as(debugGetCreateSourceHash), dependencies, from, $name, State);
    },
    InternalProvider: function InternalProvider() {
    },
    Provider: function Provider(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._provider$_createFn = t0;
      _.dependencies = t1;
      _.debugGetCreateSourceHash = t2;
      _.name = t3;
      _.from = t4;
      _.argument = t5;
      _.$ti = t6;
    },
    ProviderElement: function ProviderElement(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._debugSkipNotifyListenersAsserts = false;
      _.__ProviderElementBase__origin_A = $;
      _._provider = t0;
      _.__ProviderElementBase__container_A = $;
      _._externalDependents = t1;
      _._listenedProviderSubscriptions = t2;
      _._providerDependents = t3;
      _._subscribers = t4;
      _._framework1$_dependencies = t5;
      _._onErrorSelfListeners = _._onChangeSelfListeners = _._onRemoveListeners = _._onAddListeners = _._onCancelListeners = _._onResumeListeners = _._onDisposeListeners = _._previousDependencies = null;
      _._didBuild = _._debugDidSetState = _._framework1$_mounted = _._didCancelOnce = _._didChangeDependency = _._dependencyMayHaveChanged = _._mustRecomputeState = false;
      _._framework1$_state = null;
      _.$ti = t6;
    },
    ProviderFamily: function ProviderFamily(t0, t1, t2, t3, t4) {
      var _ = this;
      _._providerFactory = t0;
      _._framework1$_createFn = t1;
      _.name = t2;
      _.dependencies = t3;
      _.__FamilyBase_allTransitiveDependencies_FI = $;
      _.$ti = t4;
    },
    _InternalProvider_ProviderBase_OverrideWithValueMixin: function _InternalProvider_ProviderBase_OverrideWithValueMixin() {
    },
    _Provider_InternalProvider_AlwaysAliveProviderBase: function _Provider_InternalProvider_AlwaysAliveProviderBase() {
    },
    ResultData: function ResultData(t0, t1) {
      this.state = t0;
      this.$ti = t1;
    },
    ResultError: function ResultError(t0, t1, t2) {
      this.error = t0;
      this.stackTrace = t1;
      this.$ti = t2;
    },
    throwErrorWithCombinedStackTrace(error, stackTrace) {
      var t1 = A._setArrayType([A.Trace_Trace$current()], type$.JSArray_Trace);
      B.JSArray_methods.addAll$1(t1, A.Chain_Chain$forTrace(stackTrace).get$traces());
      A.Error_throwWithStackTrace(error, new A.Chain(A.List_List$unmodifiable(t1, type$.Trace)).foldFrames$1(new A.throwErrorWithCombinedStackTrace_closure()));
    },
    throwErrorWithCombinedStackTrace_closure: function throwErrorWithCombinedStackTrace_closure() {
    },
    StateController: function StateController(t0, t1, t2) {
      var _ = this;
      _._listeners = t0;
      _._debugCanAddListeners = _._state_notifier$_mounted = true;
      _._state_notifier$_state = t1;
      _.$ti = t2;
    },
    _notifier(that, $T) {
      return new A.ProviderElementProxy(that, new A._notifier_closure($T), $T._eval$1("@<0>")._bind$1($T._eval$1("StateController<0>"))._eval$1("ProviderElementProxy<1,2>"));
    },
    StateProvider$(_createFn, $T) {
      var _null = null;
      return new A.StateProvider(_createFn, _null, _null, _null, _null, _null, $T._eval$1("StateProvider<0>"));
    },
    _notifier_closure: function _notifier_closure(t0) {
      this.T = t0;
    },
    _StateProviderBase: function _StateProviderBase() {
    },
    StateProvider: function StateProvider(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._createFn = t0;
      _.__StateProvider_notifier_FI = $;
      _.dependencies = t1;
      _.debugGetCreateSourceHash = t2;
      _.name = t3;
      _.from = t4;
      _.argument = t5;
      _.$ti = t6;
    },
    StateProviderElement: function StateProviderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._controllerNotifier = t0;
      _._stateNotifier = t1;
      _._removeListener = null;
      _._debugSkipNotifyListenersAsserts = false;
      _.__ProviderElementBase__origin_A = $;
      _._provider = t2;
      _.__ProviderElementBase__container_A = $;
      _._externalDependents = t3;
      _._listenedProviderSubscriptions = t4;
      _._providerDependents = t5;
      _._subscribers = t6;
      _._framework1$_dependencies = t7;
      _._onErrorSelfListeners = _._onChangeSelfListeners = _._onRemoveListeners = _._onAddListeners = _._onCancelListeners = _._onResumeListeners = _._onDisposeListeners = _._previousDependencies = null;
      _._didBuild = _._debugDidSetState = _._framework1$_mounted = _._didCancelOnce = _._didChangeDependency = _._dependencyMayHaveChanged = _._mustRecomputeState = false;
      _._framework1$_state = null;
      _.$ti = t8;
    },
    StateProviderElement_create_closure: function StateProviderElement_create_closure(t0) {
      this.$this = t0;
    },
    _StateProvider__StateProviderBase_AlwaysAliveProviderBase: function _StateProvider__StateProviderBase_AlwaysAliveProviderBase() {
    },
    Chain_Chain$forTrace(trace) {
      var t1;
      if (type$.Chain._is(trace))
        return trace;
      $.$get$_specKey();
      t1 = type$.Trace;
      if (t1._is(trace))
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([trace], type$.JSArray_Trace), t1));
      return new A.LazyChain(new A.Chain_Chain$forTrace_closure(trace));
    },
    Chain_Chain$parse(chain) {
      var t1, t2,
        _s51_ = string$.______;
      if (chain.length === 0)
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([], type$.JSArray_Trace), type$.Trace));
      t1 = $.$get$vmChainGap();
      if (B.JSString_methods.contains$1(chain, t1)) {
        t1 = B.JSString_methods.split$1(chain, t1);
        t2 = A._arrayInstanceType(t1);
        return new A.Chain(A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Chain_Chain$parse_closure()), t2._eval$1("WhereIterable<1>")), t2._eval$1("Trace(1)")._as(A.trace_Trace___parseVM_tearOff$closure()), t2._eval$1("MappedIterable<1,Trace>")), type$.Trace));
      }
      if (!B.JSString_methods.contains$1(chain, _s51_))
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([A.Trace_Trace$parse(chain)], type$.JSArray_Trace), type$.Trace));
      return new A.Chain(A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(chain.split(_s51_), type$.JSArray_String), type$.Trace_Function_String._as(A.trace_Trace___parseFriendly_tearOff$closure()), type$.MappedListIterable_String_Trace), type$.Trace));
    },
    Chain: function Chain(t0) {
      this.traces = t0;
    },
    Chain_Chain$forTrace_closure: function Chain_Chain$forTrace_closure(t0) {
      this.trace = t0;
    },
    Chain_Chain$parse_closure: function Chain_Chain$parse_closure() {
    },
    Chain_foldFrames_closure: function Chain_foldFrames_closure(t0, t1) {
      this.predicate = t0;
      this.terse = t1;
    },
    Chain_foldFrames_closure0: function Chain_foldFrames_closure0(t0) {
      this.terse = t0;
    },
    Chain_toTrace_closure: function Chain_toTrace_closure() {
    },
    Chain_toString_closure0: function Chain_toString_closure0() {
    },
    Chain_toString__closure0: function Chain_toString__closure0() {
    },
    Chain_toString_closure: function Chain_toString_closure(t0) {
      this.longest = t0;
    },
    Chain_toString__closure: function Chain_toString__closure(t0) {
      this.longest = t0;
    },
    Frame___parseVM_tearOff(frame) {
      return A.Frame_Frame$parseVM(A._asString(frame));
    },
    Frame_Frame$parseVM(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseVM_closure(frame));
    },
    Frame___parseV8_tearOff(frame) {
      return A.Frame_Frame$parseV8(A._asString(frame));
    },
    Frame_Frame$parseV8(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseV8_closure(frame));
    },
    Frame_Frame$_parseFirefoxEval(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$_parseFirefoxEval_closure(frame));
    },
    Frame___parseFirefox_tearOff(frame) {
      return A.Frame_Frame$parseFirefox(A._asString(frame));
    },
    Frame_Frame$parseFirefox(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseFirefox_closure(frame));
    },
    Frame___parseFriendly_tearOff(frame) {
      return A.Frame_Frame$parseFriendly(A._asString(frame));
    },
    Frame_Frame$parseFriendly(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseFriendly_closure(frame));
    },
    Frame__uriOrPathToUri(uriOrPath) {
      if (B.JSString_methods.contains$1(uriOrPath, $.$get$Frame__uriRegExp()))
        return A.Uri_parse(uriOrPath);
      else if (B.JSString_methods.contains$1(uriOrPath, $.$get$Frame__windowsRegExp()))
        return A._Uri__Uri$file(uriOrPath, true);
      else if (B.JSString_methods.startsWith$1(uriOrPath, "/"))
        return A._Uri__Uri$file(uriOrPath, false);
      if (B.JSString_methods.contains$1(uriOrPath, "\\"))
        return $.$get$windows().toUri$1(uriOrPath);
      return A.Uri_parse(uriOrPath);
    },
    Frame__catchFormatException(text, body) {
      var t1, exception;
      try {
        t1 = body.call$0();
        return t1;
      } catch (exception) {
        if (type$.FormatException._is(A.unwrapException(exception)))
          return new A.UnparsedFrame(A._Uri__Uri(null, "unparsed", null, null), text);
        else
          throw exception;
      }
    },
    Frame: function Frame(t0, t1, t2, t3) {
      var _ = this;
      _.uri = t0;
      _.line = t1;
      _.column = t2;
      _.member = t3;
    },
    Frame_Frame$parseVM_closure: function Frame_Frame$parseVM_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseV8_closure: function Frame_Frame$parseV8_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseV8_closure_parseLocation: function Frame_Frame$parseV8_closure_parseLocation(t0) {
      this.frame = t0;
    },
    Frame_Frame$_parseFirefoxEval_closure: function Frame_Frame$_parseFirefoxEval_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseFirefox_closure: function Frame_Frame$parseFirefox_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseFriendly_closure: function Frame_Frame$parseFriendly_closure(t0) {
      this.frame = t0;
    },
    LazyChain: function LazyChain(t0) {
      this._thunk = t0;
      this.__LazyChain__chain_FI = $;
    },
    LazyTrace: function LazyTrace(t0) {
      this._lazy_trace$_thunk = t0;
      this.__LazyTrace__trace_FI = $;
    },
    LazyTrace_foldFrames_closure: function LazyTrace_foldFrames_closure(t0, t1, t2) {
      this.$this = t0;
      this.predicate = t1;
      this.terse = t2;
    },
    Trace_Trace$current() {
      return new A.LazyTrace(new A.Trace_Trace$current_closure(A.Trace_Trace$from(A.StackTrace_current()), 0));
    },
    Trace_Trace$from(trace) {
      if (type$.Trace._is(trace))
        return trace;
      if (type$.Chain._is(trace))
        return trace.toTrace$0();
      return new A.LazyTrace(new A.Trace_Trace$from_closure(trace));
    },
    Trace_Trace$parse(trace) {
      var error, t1, exception;
      try {
        if (trace.length === 0) {
          t1 = A.Trace$(A._setArrayType([], type$.JSArray_Frame), null);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_v8Trace())) {
          t1 = A.Trace$parseV8(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, "\tat ")) {
          t1 = A.Trace$parseJSCore(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_firefoxSafariTrace()) || B.JSString_methods.contains$1(trace, $.$get$_firefoxEvalTrace())) {
          t1 = A.Trace$parseFirefox(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, string$.______)) {
          t1 = A.Chain_Chain$parse(trace).toTrace$0();
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_friendlyTrace())) {
          t1 = A.Trace$parseFriendly(trace);
          return t1;
        }
        t1 = A.Trace$parseVM(trace);
        return t1;
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (type$.FormatException._is(t1)) {
          error = t1;
          throw A.wrapException(A.FormatException$(J.get$message$z(error) + "\nStack trace:\n" + trace, null, null));
        } else
          throw exception;
      }
    },
    Trace___parseVM_tearOff(trace) {
      return A.Trace$parseVM(A._asString(trace));
    },
    Trace$parseVM(trace) {
      var t1 = A.List_List$unmodifiable(A.Trace__parseVM(trace), type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace__parseVM(trace) {
      var $frames,
        t1 = B.JSString_methods.trim$0(trace),
        t2 = type$.Pattern._as($.$get$vmChainGap()),
        t3 = type$.WhereIterable_String,
        lines = new A.WhereIterable(A._setArrayType(A.stringReplaceAllUnchecked(t1, t2, "").split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace__parseVM_closure()), t3);
      if (!lines.get$iterator(lines).moveNext$0())
        return A._setArrayType([], type$.JSArray_Frame);
      t1 = A.TakeIterable_TakeIterable(lines, lines.get$length(lines) - 1, t3._eval$1("Iterable.E"));
      t2 = A._instanceType(t1);
      t2 = A.MappedIterable_MappedIterable(t1, t2._eval$1("Frame(Iterable.E)")._as(A.frame_Frame___parseVM_tearOff$closure()), t2._eval$1("Iterable.E"), type$.Frame);
      $frames = A.List_List$of(t2, true, A._instanceType(t2)._eval$1("Iterable.E"));
      if (!J.endsWith$1$s(lines.get$last(lines), ".da"))
        B.JSArray_methods.add$1($frames, A.Frame_Frame$parseVM(lines.get$last(lines)));
      return $frames;
    },
    Trace$parseV8(trace) {
      var t2, t3,
        t1 = A.SubListIterable$(A._setArrayType(trace.split("\n"), type$.JSArray_String), 1, null, type$.String);
      t1 = t1.super$Iterable$skipWhile(0, t1.$ti._eval$1("bool(ListIterable.E)")._as(new A.Trace$parseV8_closure()));
      t2 = type$.Frame;
      t3 = t1.$ti;
      t2 = A.List_List$unmodifiable(A.MappedIterable_MappedIterable(t1, t3._eval$1("Frame(Iterable.E)")._as(A.frame_Frame___parseV8_tearOff$closure()), t3._eval$1("Iterable.E"), t2), t2);
      return new A.Trace(t2, new A._StringStackTrace(trace));
    },
    Trace$parseJSCore(trace) {
      var t1 = A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(A._setArrayType(trace.split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseJSCore_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(A.frame_Frame___parseV8_tearOff$closure()), type$.MappedIterable_String_Frame), type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace$parseFirefox(trace) {
      var t1 = A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(A._setArrayType(B.JSString_methods.trim$0(trace).split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseFirefox_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(A.frame_Frame___parseFirefox_tearOff$closure()), type$.MappedIterable_String_Frame), type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace___parseFriendly_tearOff(trace) {
      return A.Trace$parseFriendly(A._asString(trace));
    },
    Trace$parseFriendly(trace) {
      var t1 = trace.length === 0 ? A._setArrayType([], type$.JSArray_Frame) : new A.MappedIterable(new A.WhereIterable(A._setArrayType(B.JSString_methods.trim$0(trace).split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseFriendly_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(A.frame_Frame___parseFriendly_tearOff$closure()), type$.MappedIterable_String_Frame);
      t1 = A.List_List$unmodifiable(t1, type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace$($frames, original) {
      var t1 = A.List_List$unmodifiable($frames, type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(original == null ? "" : original));
    },
    Trace: function Trace(t0, t1) {
      this.frames = t0;
      this.original = t1;
    },
    Trace_Trace$current_closure: function Trace_Trace$current_closure(t0, t1) {
      this.trace = t0;
      this.level = t1;
    },
    Trace_Trace$from_closure: function Trace_Trace$from_closure(t0) {
      this.trace = t0;
    },
    Trace__parseVM_closure: function Trace__parseVM_closure() {
    },
    Trace$parseV8_closure: function Trace$parseV8_closure() {
    },
    Trace$parseJSCore_closure: function Trace$parseJSCore_closure() {
    },
    Trace$parseFirefox_closure: function Trace$parseFirefox_closure() {
    },
    Trace$parseFriendly_closure: function Trace$parseFriendly_closure() {
    },
    Trace_toString_closure0: function Trace_toString_closure0() {
    },
    Trace_toString_closure: function Trace_toString_closure(t0) {
      this.longest = t0;
    },
    UnparsedFrame: function UnparsedFrame(t0, t1) {
      this.uri = t0;
      this.member = t1;
    },
    StateNotifierListenerError: function StateNotifierListenerError(t0, t1, t2) {
      this.errors = t0;
      this.stackTraces = t1;
      this.stateNotifier = t2;
    },
    StateNotifier: function StateNotifier() {
    },
    StateNotifier_addListener_closure: function StateNotifier_addListener_closure(t0) {
      this.listenerEntry = t0;
    },
    _ListenerEntry: function _ListenerEntry(t0, t1) {
      var _ = this;
      _.listener = t0;
      _._collection$_previous = _._collection$_next = _._list = null;
      _.$ti = t1;
    },
    main() {
      var t1, t2;
      A.print("main from web!");
      t1 = A.Builder$single(new A.main_closure());
      if ($.ComponentsBinding__instance == null) {
        t2 = type$.String;
        t2 = new A.AppBinding(A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.dynamic), false, A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.SyncState_dynamic), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.RenderElement), A.LinkedHashMap_LinkedHashMap$_empty(type$.GlobalKey_State_StatefulComponent, type$.Element_2), B.SchedulerPhase_0, A._setArrayType([], type$.JSArray_of_void_Function));
        t2.super$_AppBinding_BindingBase_SchedulerBinding_ComponentsBinding_SyncBinding$initInstances();
        t2._loadRawState$0();
      }
      $.ComponentsBinding__instance.attachRootComponent$2$attachTo(new A.ProviderScope(t1, null), "body");
    },
    main_closure: function main_closure() {
    },
    printString(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    },
    max(a, b, $T) {
      A.checkTypeBound($T, type$.num, "T", "max");
      return Math.max($T._as(a), $T._as(b));
    },
    ListExtensions_mapIndexed(_this, convert, $E, $R) {
      return A.ListExtensions_mapIndexed$body(_this, convert, $E, $R, $R);
    },
    ListExtensions_mapIndexed$body($async$_this, $async$convert, $async$$E, $async$$R, $async$type) {
      return A._makeSyncStarIterable(function() {
        var _this = $async$_this,
          convert = $async$convert,
          $E = $async$$E,
          $R = $async$$R;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, index;
        return function $async$ListExtensions_mapIndexed($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = J.getInterceptor$asx(_this), index = 0;
              case 2:
                // for condition
                if (!(index < t1.get$length(_this))) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                $async$goto = 5;
                return convert.call$2(index, t1.$index(_this, index));
              case 5:
                // after yield
              case 3:
                // for update
                ++index;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, $async$type);
    },
    toUint8List(input) {
      if (type$.Uint8List._is(input))
        return input;
      if (type$.TypedData._is(input))
        return A.NativeUint8List_NativeUint8List$view(input.buffer, 0, null);
      return new Uint8Array(A._ensureNativeList(input));
    },
    toByteStream(stream) {
      return stream;
    },
    current() {
      var exception, t1, path, lastIndex, uri = null;
      try {
        uri = A.Uri_base();
      } catch (exception) {
        if (type$.Exception._is(A.unwrapException(exception))) {
          t1 = $._current;
          if (t1 != null)
            return t1;
          throw exception;
        } else
          throw exception;
      }
      if (J.$eq$(uri, $._currentUriBase)) {
        t1 = $._current;
        t1.toString;
        return t1;
      }
      $._currentUriBase = uri;
      if ($.$get$Style_platform() == $.$get$Style_url())
        t1 = $._current = uri.resolve$1(".").toString$0(0);
      else {
        path = uri.toFilePath$0();
        lastIndex = path.length - 1;
        t1 = $._current = lastIndex === 0 ? path : B.JSString_methods.substring$2(path, 0, lastIndex);
      }
      return t1;
    },
    isAlphabetic(char) {
      var t1;
      if (!(char >= 65 && char <= 90))
        t1 = char >= 97 && char <= 122;
      else
        t1 = true;
      return t1;
    },
    isDriveLetter(path, index) {
      var t1 = path.length,
        t2 = index + 2;
      if (t1 < t2)
        return false;
      if (!A.isAlphabetic(B.JSString_methods.codeUnitAt$1(path, index)))
        return false;
      if (B.JSString_methods.codeUnitAt$1(path, index + 1) !== 58)
        return false;
      if (t1 === t2)
        return true;
      return B.JSString_methods.codeUnitAt$1(path, t2) === 47;
    },
    runUnaryGuarded(cb, value, $T, Res) {
      var err, stack, exception;
      try {
        cb.call$1(value);
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(err), type$.StackTrace._as(stack));
      }
    },
    runBinaryGuarded(cb, value, value2, $A, $B) {
      var err, stack, exception;
      try {
        cb.call$2(value, value2);
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(err), type$.StackTrace._as(stack));
      }
    },
    runTernaryGuarded(cb, value, value2, value3, $A, $B, $C) {
      var err, stack, exception;
      try {
        cb.call$3(value, value2, value3);
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(err), type$.StackTrace._as(stack));
      }
    },
    runQuaternaryGuarded(cb, value, value2, value3, value4, $A, $B, $C, $D) {
      var err, stack, exception;
      try {
        cb.call$4(value, value2, value3, value4);
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(err), type$.StackTrace._as(stack));
      }
    }
  },
  J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      return J.JSArray_markFixedList(A._setArrayType(allocation, $E._eval$1("JSArray<0>")), $E);
    },
    JSArray_markFixedList(list, $T) {
      list.fixed$length = Array;
      return list;
    },
    JSArray__compareAny(a, b) {
      var t1 = type$.Comparable_dynamic;
      return J.compareTo$1$ns(t1._as(a), t1._as(b));
    },
    JSString__isWhitespace(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = B.JSString_methods._codeUnitAt$1(string, index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = B.JSString_methods.codeUnitAt$1(string, index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$n(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$ns(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$text$x(receiver, value) {
      return J.getInterceptor$x(receiver).set$text(receiver, value);
    },
    set$value$x(receiver, value) {
      return J.getInterceptor$x(receiver).set$value(receiver, value);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$message$z(receiver) {
      return J.getInterceptor$z(receiver).get$message(receiver);
    },
    get$runtimeType$(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    get$setRequestHeader$x(receiver) {
      return J.getInterceptor$x(receiver).get$setRequestHeader(receiver);
    },
    get$sync$x(receiver) {
      return J.getInterceptor$x(receiver).get$sync(receiver);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (receiver.constructor == Array || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    _addEventListener$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._addEventListener$3(receiver, a0, a1, a2);
    },
    _removeAttribute$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver)._removeAttribute$1(receiver, a0);
    },
    _removeEventListener$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._removeEventListener$3(receiver, a0, a1, a2);
    },
    _replaceChild$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
    },
    add$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    allMatches$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
    },
    allMatches$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).allMatches$2(receiver, a0, a1);
    },
    append$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).append$1(receiver, a0);
    },
    cast$2$0$ax(receiver, $T1, $T2) {
      return J.getInterceptor$ax(receiver).cast$2$0(receiver, $T1, $T2);
    },
    clear$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).clear$0(receiver);
    },
    close$0$z(receiver) {
      return J.getInterceptor$z(receiver).close$0(receiver);
    },
    codeUnitAt$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
    },
    compareTo$1$ns(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    endsWith$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).endsWith$1(receiver, a0);
    },
    forEach$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    insertBefore$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).insertBefore$2(receiver, a0, a1);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    matchAsPrefix$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
    },
    remove$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).remove$0(receiver);
    },
    replaceWith$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
    },
    send$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).send$1(receiver, a0);
    },
    skip$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    toList$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).toList$0(receiver);
    },
    toRadixString$1$n(receiver, a0) {
      return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _.__interceptors$_length = t1;
      _._index = 0;
      _.__interceptors$_current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    get$runtimeType(receiver) {
      return A.getRuntimeType(receiver);
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType(receiver) {
      return B.Type_bool_lhE;
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return B.Type_JSObject_8k0;
    },
    toString$0(receiver) {
      return String(receiver);
    },
    get$sync(obj) {
      return obj.sync;
    },
    get$name(obj) {
      return obj.name;
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    },
    $isFunction: 1
  };
  J.JSArray.prototype = {
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1(receiver, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("add"));
      receiver.push(value);
    },
    removeAt$1(receiver, index) {
      var t1;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("removeAt"));
      t1 = receiver.length;
      if (index >= t1)
        throw A.wrapException(A.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    insert$2(receiver, index, value) {
      var t1;
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("insert"));
      t1 = receiver.length;
      if (index > t1)
        throw A.wrapException(A.RangeError$value(index, null));
      receiver.splice(index, 0, value);
    },
    insertAll$2(receiver, index, iterable) {
      var insertionLength, end;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(iterable);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("insertAll"));
      A.RangeError_checkValueInInterval(index, 0, receiver.length, "index");
      if (!type$.EfficientLengthIterable_dynamic._is(iterable))
        iterable = J.toList$0$ax(iterable);
      insertionLength = J.get$length$asx(iterable);
      receiver.length = receiver.length + insertionLength;
      end = index + insertionLength;
      this.setRange$4(receiver, end, receiver.length, receiver, index);
      this.setRange$3(receiver, index, end, iterable);
    },
    removeLast$0(receiver) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("removeLast"));
      if (receiver.length === 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, -1));
      return receiver.pop();
    },
    remove$1(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    addAll$1(receiver, collection) {
      var t1;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(collection);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("addAll"));
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current());
    },
    _addAllFromArray$1(receiver, array) {
      var len, i;
      type$.JSArray_dynamic._as(array);
      len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    clear$0(receiver) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("clear"));
      receiver.length = 0;
    },
    forEach$1(receiver, f) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("~(1)")._as(f);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1(receiver, f, $T) {
      var t1 = A._arrayInstanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1(receiver, separator) {
      var i,
        list = A.List_List$filled(receiver.length, "", false, type$.String);
      for (i = 0; i < receiver.length; ++i)
        this.$indexSet(list, i, A.S(receiver[i]));
      return list.join(separator);
    },
    join$0($receiver) {
      return this.join$1($receiver, "");
    },
    skip$1(receiver, n) {
      return A.SubListIterable$(receiver, n, null, A._arrayInstanceType(receiver)._precomputed1);
    },
    fold$1$2(receiver, initialValue, combine, $T) {
      var $length, value, i;
      $T._as(initialValue);
      A._arrayInstanceType(receiver)._bind$1($T)._eval$1("1(1,2)")._as(combine);
      $length = receiver.length;
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if (receiver.length !== $length)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$last(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$single(receiver) {
      var t1 = receiver.length;
      if (t1 === 1) {
        if (0 >= t1)
          return A.ioore(receiver, 0);
        return receiver[0];
      }
      if (t1 === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      throw A.wrapException(A.IterableElementError_tooMany());
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherList, otherStart, t1, i;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(iterable);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("setRange"));
      A.RangeError_checkValidRange(start, end, receiver.length);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherList = iterable;
        otherStart = skipCount;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    setRange$3($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    sort$1(receiver, compare) {
      var t2,
        t1 = A._arrayInstanceType(receiver);
      t1._eval$1("int(1,1)?")._as(compare);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("sort"));
      t2 = compare == null ? J._interceptors_JSArray__compareAny$closure() : compare;
      A.Sort_sort(receiver, t2, t1._precomputed1);
    },
    get$isEmpty(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    toString$0(receiver) {
      return A.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    toList$1$growable(receiver, growable) {
      var t1 = A._arrayInstanceType(receiver);
      return growable ? A._setArrayType(receiver.slice(0), t1) : J.JSArray_JSArray$markFixed(receiver.slice(0), t1._precomputed1);
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("indexed set"));
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current() {
      var t1 = this.__interceptors$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this.__interceptors$_length !== $length)
        throw A.wrapException(A.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this.set$__interceptors$_current(null);
        return false;
      }
      _this.set$__interceptors$_current(t1[t2]);
      ++_this._index;
      return true;
    },
    set$__interceptors$_current(_current) {
      this.__interceptors$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  J.JSNumber.prototype = {
    compareTo$1(receiver, b) {
      var bIsNegative;
      A._asNum(b);
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    floor$0(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647)
          return receiver | 0;
      } else if (receiver >= -2147483648) {
        truncated = receiver | 0;
        return receiver === truncated ? truncated : truncated - 1;
      }
      d = Math.floor(receiver);
      if (isFinite(d))
        return d;
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".floor()"));
    },
    round$0(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".round()"));
    },
    toRadixString$1(receiver, radix) {
      var result, match, t1, exponent;
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (B.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
      t1 = match.length;
      if (1 >= t1)
        return A.ioore(match, 1);
      result = match[1];
      if (3 >= t1)
        return A.ioore(match, 3);
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + B.JSString_methods.$mul("0", exponent);
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $mod(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      return result + other;
    },
    $tdiv(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + A.S(other)));
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1(receiver, other) {
      if (0 > other)
        throw A.wrapException(A.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    get$runtimeType(receiver) {
      return B.Type_num_cv7;
    },
    $isComparable: 1,
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$bitLength(receiver) {
      var wordBits,
        t1 = receiver < 0 ? -receiver - 1 : receiver,
        nonneg = t1;
      for (wordBits = 32; nonneg >= 4294967296;) {
        nonneg = this._tdivFast$1(nonneg, 4294967296);
        wordBits += 32;
      }
      return wordBits - Math.clz32(nonneg);
    },
    get$runtimeType(receiver) {
      return B.Type_int_tHn;
    },
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType(receiver) {
      return B.Type_double_K1J;
    }
  };
  J.JSString.prototype = {
    codeUnitAt$1(receiver, index) {
      if (index < 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        A.throwExpression(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    _codeUnitAt$1(receiver, index) {
      if (index >= receiver.length)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    allMatches$2(receiver, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._StringAllMatchesIterable(string, receiver, start);
    },
    allMatches$1($receiver, string) {
      return this.allMatches$2($receiver, string, 0);
    },
    matchAsPrefix$2(receiver, string, start) {
      var t1, i, _null = null;
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, _null, _null));
      t1 = receiver.length;
      if (start + t1 > string.length)
        return _null;
      for (i = 0; i < t1; ++i)
        if (this.codeUnitAt$1(string, start + i) !== this._codeUnitAt$1(receiver, i))
          return _null;
      return new A.StringMatch(start, receiver);
    },
    $add(receiver, other) {
      return receiver + other;
    },
    endsWith$1(receiver, other) {
      var otherLength = other.length,
        t1 = receiver.length;
      if (otherLength > t1)
        return false;
      return other === this.substring$1(receiver, t1 - otherLength);
    },
    replaceFirst$2(receiver, from, to) {
      type$.Pattern._as(from);
      A.RangeError_checkValueInInterval(0, 0, receiver.length, "startIndex");
      return A.stringReplaceFirstUnchecked(receiver, from, to, 0);
    },
    split$1(receiver, pattern) {
      type$.Pattern._as(pattern);
      if (typeof pattern == "string")
        return A._setArrayType(receiver.split(pattern), type$.JSArray_String);
      else if (pattern instanceof A.JSSyntaxRegExp && pattern.get$_nativeAnchoredVersion().exec("").length - 2 === 0)
        return A._setArrayType(receiver.split(pattern._nativeRegExp), type$.JSArray_String);
      else
        return this._defaultSplit$1(receiver, pattern);
    },
    replaceRange$3(receiver, start, end, replacement) {
      var e = A.RangeError_checkValidRange(start, end, receiver.length);
      return A.stringReplaceRangeUnchecked(receiver, start, e, replacement);
    },
    _defaultSplit$1(receiver, pattern) {
      var t1, start, $length, match, matchStart, matchEnd,
        result = A._setArrayType([], type$.JSArray_String);
      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), start = 0, $length = 1; t1.moveNext$0();) {
        match = t1.get$current();
        matchStart = match.get$start(match);
        matchEnd = match.get$end();
        $length = matchEnd - matchStart;
        if ($length === 0 && start === matchStart)
          continue;
        B.JSArray_methods.add$1(result, this.substring$2(receiver, start, matchStart));
        start = matchEnd;
      }
      if (start < receiver.length || $length > 0)
        B.JSArray_methods.add$1(result, this.substring$1(receiver, start));
      return result;
    },
    startsWith$2(receiver, pattern, index) {
      var endIndex;
      type$.Pattern._as(pattern);
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$range(index, 0, receiver.length, null, null));
      if (typeof pattern == "string") {
        endIndex = index + pattern.length;
        if (endIndex > receiver.length)
          return false;
        return pattern === receiver.substring(index, endIndex);
      }
      return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
    },
    startsWith$1($receiver, pattern) {
      return this.startsWith$2($receiver, pattern, 0);
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length));
    },
    substring$1($receiver, start) {
      return this.substring$2($receiver, start, null);
    },
    trim$0(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (this._codeUnitAt$1(result, 0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    padRight$1(receiver, width) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return receiver + this.$mul(" ", delta);
    },
    indexOf$2(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1($receiver, pattern) {
      return this.indexOf$2($receiver, pattern, 0);
    },
    lastIndexOf$2(receiver, pattern, start) {
      var t1, t2;
      if (start == null)
        start = receiver.length;
      else if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = pattern.length;
      t2 = receiver.length;
      if (start + t1 > t2)
        start = t2 - t1;
      return receiver.lastIndexOf(pattern, start);
    },
    lastIndexOf$1($receiver, pattern) {
      return this.lastIndexOf$2($receiver, pattern, null);
    },
    contains$2(receiver, other, startIndex) {
      var t1;
      type$.Pattern._as(other);
      t1 = receiver.length;
      if (startIndex > t1)
        throw A.wrapException(A.RangeError$range(startIndex, 0, t1, null, null));
      return A.stringContainsUnchecked(receiver, other, startIndex);
    },
    contains$1($receiver, other) {
      return this.contains$2($receiver, other, 0);
    },
    compareTo$1(receiver, other) {
      var t1;
      A._asString(other);
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType(receiver) {
      return B.Type_String_k8F;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $isJSIndexable: 1,
    $isComparable: 1,
    $isPattern: 1,
    $isString: 1
  };
  A.CastStreamTransformer.prototype = {
    cast$2$0(_, RS, RT) {
      var t1 = this.$ti;
      return new A.CastStreamTransformer(this._source, t1._eval$1("@<1>")._bind$1(t1._rest[1])._bind$1(RS)._bind$1(RT)._eval$1("CastStreamTransformer<1,2,3,4>"));
    }
  };
  A.CastConverter.prototype = {
    convert$1(input) {
      var t1 = this.$ti;
      return t1._rest[3]._as(this._source.convert$1(t1._precomputed1._as(t1._rest[2]._as(input))));
    },
    cast$2$0(_, RS, RT) {
      var t1 = this.$ti;
      return new A.CastConverter(this._source, t1._eval$1("@<1>")._bind$1(t1._rest[1])._bind$1(RS)._bind$1(RT)._eval$1("CastConverter<1,2,3,4>"));
    }
  };
  A._CastIterableBase.prototype = {
    get$iterator(_) {
      var t1 = A._instanceType(this);
      return new A.CastIterator(J.get$iterator$ax(this.get$_source()), t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("CastIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1(_, index) {
      return A._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    toString$0(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  A.CastIterator.prototype = {
    moveNext$0() {
      return this._source.moveNext$0();
    },
    get$current() {
      return this.$ti._rest[1]._as(this._source.get$current());
    },
    $isIterator: 1
  };
  A.CastIterable.prototype = {
    get$_source() {
      return this._source;
    }
  };
  A._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  A._CastListBase.prototype = {
    $index(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, index));
    },
    $indexSet(_, index, value) {
      var t1 = this.$ti;
      J.$indexSet$ax(this._source, index, t1._precomputed1._as(t1._rest[1]._as(value)));
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  A.CastList.prototype = {
    cast$1$0(_, $R) {
      return new A.CastList(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    get$_source() {
      return this._source;
    }
  };
  A.CastMap.prototype = {
    cast$2$0(_, RK, RV) {
      var t1 = this.$ti;
      return new A.CastMap(this._source, t1._eval$1("@<1>")._bind$1(t1._rest[1])._bind$1(RK)._bind$1(RV)._eval$1("CastMap<1,2,3,4>"));
    },
    $index(_, key) {
      return this.$ti._eval$1("4?")._as(this._source.$index(0, key));
    },
    forEach$1(_, f) {
      this._source.forEach$1(0, new A.CastMap_forEach_closure(this, this.$ti._eval$1("~(3,4)")._as(f)));
    },
    get$keys() {
      var t1 = this.$ti;
      return A.CastIterable_CastIterable(this._source.get$keys(), t1._precomputed1, t1._rest[2]);
    },
    get$length(_) {
      var t1 = this._source;
      return t1.get$length(t1);
    },
    get$isEmpty(_) {
      var t1 = this._source;
      return t1.get$isEmpty(t1);
    },
    get$entries(_) {
      var t1 = this._source;
      return t1.get$entries(t1).map$1$1(0, new A.CastMap_entries_closure(this), this.$ti._eval$1("MapEntry<3,4>"));
    }
  };
  A.CastMap_forEach_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this.$ti;
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      this.f.call$2(t1._rest[2]._as(key), t1._rest[3]._as(value));
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1,2)");
    }
  };
  A.CastMap_entries_closure.prototype = {
    call$1(e) {
      var t2,
        t1 = this.$this.$ti;
      t1._eval$1("MapEntry<1,2>")._as(e);
      t2 = t1._rest[3];
      return new A.MapEntry(t1._rest[2]._as(e.key), t2._as(e.value), t1._eval$1("@<3>")._bind$1(t2)._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<3,4>(MapEntry<1,2>)");
    }
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this.__internal$_message;
    }
  };
  A.CodeUnits.prototype = {
    get$length(_) {
      return this.__internal$_string.length;
    },
    $index(_, i) {
      return B.JSString_methods.codeUnitAt$1(this.__internal$_string, i);
    }
  };
  A.nullFuture_closure.prototype = {
    call$0() {
      return A.Future_Future$value(null, type$.Null);
    },
    $signature: 20
  };
  A.SentinelValue.prototype = {};
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$last(_) {
      var _this = this;
      if (_this.get$length(_this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return _this.elementAt$1(0, _this.get$length(_this) - 1);
    },
    join$1(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = A.S(_this.elementAt$1(0, 0));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    join$0($receiver) {
      return this.join$1($receiver, "");
    },
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return new A.MappedListIterable(this, t1._bind$1($T)._eval$1("1(ListIterable.E)")._as(toElement), t1._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    fold$1$2(_, initialValue, combine, $T) {
      var $length, value, i, _this = this;
      $T._as(initialValue);
      A._instanceType(_this)._bind$1($T)._eval$1("1(1,ListIterable.E)")._as(combine);
      $length = _this.get$length(_this);
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, _this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return value;
    },
    skip$1(_, count) {
      return A.SubListIterable$(this, count, null, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, growable, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  A.SubListIterable.prototype = {
    SubListIterable$3(_iterable, _start, _endOrLength, $E) {
      var endOrLength,
        t1 = this._start;
      A.RangeError_checkNotNegative(t1, "start");
      endOrLength = this._endOrLength;
      if (endOrLength != null) {
        A.RangeError_checkNotNegative(endOrLength, "end");
        if (t1 > endOrLength)
          throw A.wrapException(A.RangeError$range(t1, 0, endOrLength, "start", null));
      }
    },
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      if (typeof endOrLength !== "number")
        return endOrLength.$sub();
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw A.wrapException(A.IndexError$withLength(index, _this.get$length(_this), _this, null, "index"));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    skip$1(_, count) {
      var newStart, endOrLength, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      newStart = _this._start + count;
      endOrLength = _this._endOrLength;
      if (endOrLength != null && newStart >= endOrLength)
        return new A.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return A.SubListIterable$(_this.__internal$_iterable, newStart, endOrLength, _this.$ti._precomputed1);
    },
    take$1(_, count) {
      var endOrLength, t1, newEnd, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      endOrLength = _this._endOrLength;
      t1 = _this._start;
      newEnd = t1 + count;
      if (endOrLength == null)
        return A.SubListIterable$(_this.__internal$_iterable, t1, newEnd, _this.$ti._precomputed1);
      else {
        if (endOrLength < newEnd)
          return _this;
        return A.SubListIterable$(_this.__internal$_iterable, t1, newEnd, _this.$ti._precomputed1);
      }
    },
    toList$1$growable(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = _this.$ti._precomputed1;
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      result = A.List_List$filled($length, t2.elementAt$1(t1, start), growable, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        B.JSArray_methods.$indexSet(result, i, t2.elementAt$1(t1, start + i));
        if (t2.get$length(t1) < end)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return result;
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  A.ListIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.set$__internal$_current(null);
        return false;
      }
      _this.set$__internal$_current(t2.elementAt$1(t1, t3));
      ++_this.__internal$_index;
      return true;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.MappedIterable.prototype = {
    get$iterator(_) {
      var t1 = A._instanceType(this);
      return new A.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("MappedIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  A.MappedIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.set$__internal$_current(_this._f.call$1(t1.get$current()));
        return true;
      }
      _this.set$__internal$_current(null);
      return false;
    },
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("2?")._as(_current);
    }
  };
  A.MappedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  A.WhereIterable.prototype = {
    get$iterator(_) {
      return new A.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("WhereIterator<1>"));
    },
    map$1$1(_, toElement, $T) {
      var t1 = this.$ti;
      return new A.MappedIterable(this, t1._bind$1($T)._eval$1("1(2)")._as(toElement), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    }
  };
  A.WhereIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (A.boolConversionCheck(t2.call$1(t1.get$current())))
          return true;
      return false;
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.ExpandIterable.prototype = {
    get$iterator(_) {
      var t1 = this.$ti;
      return new A.ExpandIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, B.C_EmptyIterator, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("ExpandIterator<1,2>"));
    }
  };
  A.ExpandIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, _this = this;
      if (_this._currentExpansion == null)
        return false;
      for (t1 = _this._iterator, t2 = _this._f; !_this._currentExpansion.moveNext$0();) {
        _this.set$__internal$_current(null);
        if (t1.moveNext$0()) {
          _this.set$_currentExpansion(null);
          _this.set$_currentExpansion(J.get$iterator$ax(t2.call$1(t1.get$current())));
        } else
          return false;
      }
      _this.set$__internal$_current(_this._currentExpansion.get$current());
      return true;
    },
    set$_currentExpansion(_currentExpansion) {
      this._currentExpansion = this.$ti._eval$1("Iterator<2>?")._as(_currentExpansion);
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("2?")._as(_current);
    },
    $isIterator: 1
  };
  A.TakeIterable.prototype = {
    get$iterator(_) {
      return new A.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount, A._instanceType(this)._eval$1("TakeIterator<1>"));
    }
  };
  A.EfficientLengthTakeIterable.prototype = {
    get$length(_) {
      var iterableLength = J.get$length$asx(this.__internal$_iterable),
        t1 = this._takeCount;
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  A.TakeIterator.prototype = {
    moveNext$0() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current() {
      if (this._remaining < 0) {
        this.$ti._precomputed1._as(null);
        return null;
      }
      return this._iterator.get$current();
    }
  };
  A.SkipIterable.prototype = {
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.SkipIterable(this.__internal$_iterable, this._skipCount + count, A._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator(_) {
      return new A.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount, A._instanceType(this)._eval$1("SkipIterator<1>"));
    }
  };
  A.EfficientLengthSkipIterable.prototype = {
    get$length(_) {
      var $length = J.get$length$asx(this.__internal$_iterable) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  A.SkipIterator.prototype = {
    moveNext$0() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.SkipWhileIterable.prototype = {
    get$iterator(_) {
      return new A.SkipWhileIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("SkipWhileIterator<1>"));
    }
  };
  A.SkipWhileIterator.prototype = {
    moveNext$0() {
      var t1, t2, _this = this;
      if (!_this._hasSkipped) {
        _this._hasSkipped = true;
        for (t1 = _this._iterator, t2 = _this._f; t1.moveNext$0();)
          if (!A.boolConversionCheck(t2.call$1(t1.get$current())))
            return true;
      }
      return _this._iterator.moveNext$0();
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.EmptyIterable.prototype = {
    get$iterator(_) {
      return B.C_EmptyIterator;
    },
    get$isEmpty(_) {
      return true;
    },
    get$length(_) {
      return 0;
    },
    elementAt$1(_, index) {
      throw A.wrapException(A.RangeError$range(index, 0, 0, "index", null));
    },
    join$1(_, separator) {
      return "";
    },
    map$1$1(_, toElement, $T) {
      this.$ti._bind$1($T)._eval$1("1(2)")._as(toElement);
      return new A.EmptyIterable($T._eval$1("EmptyIterable<0>"));
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    },
    toList$1$growable(_, growable) {
      var t1 = this.$ti._precomputed1;
      return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  A.EmptyIterator.prototype = {
    moveNext$0() {
      return false;
    },
    get$current() {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    $isIterator: 1
  };
  A.WhereTypeIterable.prototype = {
    get$iterator(_) {
      return new A.WhereTypeIterator(J.get$iterator$ax(this._source), this.$ti._eval$1("WhereTypeIterator<1>"));
    }
  };
  A.WhereTypeIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._source, t2 = this.$ti._precomputed1; t1.moveNext$0();)
        if (t2._is(t1.get$current()))
          return true;
      return false;
    },
    get$current() {
      return this.$ti._precomputed1._as(this._source.get$current());
    },
    $isIterator: 1
  };
  A.FixedLengthListMixin.prototype = {};
  A.UnmodifiableListMixin.prototype = {
    $indexSet(_, index, value) {
      A._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    }
  };
  A.UnmodifiableListBase.prototype = {};
  A.ReversedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      var t1 = this._source,
        t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
    }
  };
  A.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  A.ConstantMap.prototype = {
    cast$2$0(_, RK, RV) {
      var t1 = A._instanceType(this);
      return A.Map_castFrom(this, t1._precomputed1, t1._rest[1], RK, RV);
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    get$entries(_) {
      return this.entries$body$ConstantMap(0, A._instanceType(this)._eval$1("MapEntry<1,2>"));
    },
    entries$body$ConstantMap($async$_, $async$type) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var _ = $async$_;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, key, t4;
        return function $async$get$entries($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.get$keys(), t1 = t1.get$iterator(t1), t2 = A._instanceType($async$self), t3 = t2._rest[1], t2 = t2._eval$1("@<1>")._bind$1(t3)._eval$1("MapEntry<1,2>");
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                key = t1.get$current();
                t4 = $async$self.$index(0, key);
                $async$goto = 4;
                return new A.MapEntry(key, t4 == null ? t3._as(t4) : t4, t2);
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, $async$type);
    },
    $isMap: 1
  };
  A.ConstantStringMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    containsKey$1(key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsObject.hasOwnProperty(key);
    },
    $index(_, key) {
      if (!this.containsKey$1(key))
        return null;
      return this._jsObject[A._asString(key)];
    },
    forEach$1(_, f) {
      var keys, t2, t3, i, t4,
        t1 = this.$ti;
      t1._eval$1("~(1,2)")._as(f);
      keys = this.__js_helper$_keys;
      for (t2 = keys.length, t3 = this._jsObject, t1 = t1._rest[1], i = 0; i < t2; ++i) {
        t4 = A._asString(keys[i]);
        f.call$2(t4, t1._as(t3[t4]));
      }
    },
    get$keys() {
      return new A._ConstantMapKeyIterable(this, this.$ti._eval$1("_ConstantMapKeyIterable<1>"));
    }
  };
  A._ConstantMapKeyIterable.prototype = {
    get$iterator(_) {
      var t1 = this._map.__js_helper$_keys;
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    get$length(_) {
      return this._map.__js_helper$_keys.length;
    }
  };
  A.Instantiation.prototype = {
    Instantiation$1(_genericClosure) {
      if (false)
        A.instantiatedGenericFunctionType(0, 0);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Instantiation && this._genericClosure.$eq(0, other._genericClosure) && A.getRuntimeType(this) === A.getRuntimeType(other);
    },
    get$hashCode(_) {
      return A.Object_hash(this._genericClosure, A.getRuntimeType(this), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = B.JSArray_methods.join$1([A.createRuntimeType(this.$ti._precomputed1)], ", ");
      return this._genericClosure.toString$0(0) + " with " + ("<" + t1 + ">");
    }
  };
  A.Instantiation1.prototype = {
    call$1(a0) {
      return this._genericClosure.call$1$1(a0, this.$ti._rest[0]);
    },
    call$2(a0, a1) {
      return this._genericClosure.call$1$2(a0, a1, this.$ti._rest[0]);
    },
    call$5$argument$dependencies$from$name(a0, a1, a2, a3, a4) {
      return this._genericClosure.call$1$5$argument$dependencies$from$name(a0, a1, a2, a3, a4, this.$ti._rest[0]);
    },
    $signature() {
      return A.instantiatedGenericFunctionType(A.closureFunctionType(this._genericClosure), this.$ti);
    }
  };
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + this.__js_helper$_message;
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    },
    $isException: 1
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A._AssertionError.prototype = {
    toString$0(_) {
      return "Assertion failed: " + A.Error_safeToString(this.message);
    }
  };
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$keys() {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$values(_) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(this, t1._eval$1("LinkedHashMapKeyIterable<1>")), new A.JsLinkedHashMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1(key) {
      var strings, nums;
      if (typeof key == "string") {
        strings = this.__js_helper$_strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this.__js_helper$_nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else
        return this.internalContainsKey$1(key);
    },
    internalContainsKey$1(key) {
      var rest = this.__js_helper$_rest;
      if (rest == null)
        return false;
      return this.internalFindBucketIndex$2(rest[this.internalComputeHashCode$1(key)], key) >= 0;
    },
    addAll$1(_, other) {
      A._instanceType(this)._eval$1("Map<1,2>")._as(other).forEach$1(0, new A.JsLinkedHashMap_addAll_closure(this));
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this.__js_helper$_strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this.__js_helper$_nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string") {
        strings = _this.__js_helper$_strings;
        _this.__js_helper$_addHashTableEntry$3(strings == null ? _this.__js_helper$_strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this.__js_helper$_nums;
        _this.__js_helper$_addHashTableEntry$3(nums == null ? _this.__js_helper$_nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this.__js_helper$_newLinkedCell$2(key, value)];
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this.__js_helper$_newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2(key, ifAbsent) {
      var t2, value, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._eval$1("2()")._as(ifAbsent);
      if (_this.containsKey$1(key)) {
        t2 = _this.$index(0, key);
        return t2 == null ? t1._rest[1]._as(t2) : t2;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this._removeHashTableEntry$2(_this.__js_helper$_strings, key);
      else if (typeof key == "number" && (key & 0x3fffffff) === key)
        return _this._removeHashTableEntry$2(_this.__js_helper$_nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this._unlinkCell$1(cell);
      if (bucket.length === 0)
        delete rest[hash];
      return cell.hashMapCellValue;
    },
    forEach$1(_, action) {
      var cell, modifications, _this = this;
      A._instanceType(_this)._eval$1("~(1,2)")._as(action);
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    __js_helper$_addHashTableEntry$3(table, key, value) {
      var cell,
        t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      cell = table[key];
      if (cell == null)
        table[key] = this.__js_helper$_newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    _removeHashTableEntry$2(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = table[key];
      if (cell == null)
        return null;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.hashMapCellValue;
    },
    _modified$0() {
      this._modifications = this._modifications + 1 & 1073741823;
    },
    __js_helper$_newLinkedCell$2(key, value) {
      var _this = this,
        t1 = A._instanceType(_this),
        cell = new A.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    _unlinkCell$1(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this.__js_helper$_length;
      _this._modified$0();
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 0x3fffffff;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    $isLinkedHashMap: 1
  };
  A.JsLinkedHashMap_values_closure.prototype = {
    call$1(each) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1 = t1.$index(0, t2._precomputed1._as(each));
      return t1 == null ? t2._rest[1]._as(t1) : t1;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  A.JsLinkedHashMap_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1.$indexSet(0, t2._precomputed1._as(key), t2._rest[1]._as(value));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._map,
        t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
      t2._cell = t1._first;
      return t2;
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.set$__js_helper$_current(null);
        return false;
      } else {
        _this.set$__js_helper$_current(cell.hashMapCellKey);
        _this._cell = cell._next;
        return true;
      }
    },
    set$__js_helper$_current(_current) {
      this.__js_helper$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 27
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 96
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(A._asString(tag));
    },
    $signature: 42
  };
  A.JSSyntaxRegExp.prototype = {
    toString$0(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    get$_nativeGlobalVersion() {
      var _this = this,
        t1 = _this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeGlobalRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);
    },
    get$_nativeAnchoredVersion() {
      var _this = this,
        t1 = _this._nativeAnchoredRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeAnchoredRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern + "|()", t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);
    },
    firstMatch$1(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new A._MatchImplementation(m);
    },
    allMatches$2(_, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._AllMatchesIterable(this, string, start);
    },
    allMatches$1($receiver, string) {
      return this.allMatches$2($receiver, string, 0);
    },
    _execGlobal$2(string, start) {
      var match,
        regexp = this.get$_nativeGlobalVersion();
      if (regexp == null)
        regexp = type$.Object._as(regexp);
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      return new A._MatchImplementation(match);
    },
    _execAnchored$2(string, start) {
      var match,
        regexp = this.get$_nativeAnchoredVersion();
      if (regexp == null)
        regexp = type$.Object._as(regexp);
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      if (0 >= match.length)
        return A.ioore(match, -1);
      if (match.pop() != null)
        return null;
      return new A._MatchImplementation(match);
    },
    matchAsPrefix$2(_, string, start) {
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, null, null));
      return this._execAnchored$2(string, start);
    },
    $isPattern: 1
  };
  A._MatchImplementation.prototype = {
    get$start(_) {
      return this._match.index;
    },
    get$end() {
      var t1 = this._match;
      return t1.index + t1[0].length;
    },
    $isMatch: 1,
    $isRegExpMatch: 1
  };
  A._AllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._AllMatchesIterator(this._re, this._string, this.__js_helper$_start);
    }
  };
  A._AllMatchesIterator.prototype = {
    get$current() {
      var t1 = this.__js_helper$_current;
      return t1 == null ? type$.RegExpMatch._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, t3, match, nextIndex, _this = this,
        string = _this._string;
      if (string == null)
        return false;
      t1 = _this._nextIndex;
      t2 = string.length;
      if (t1 <= t2) {
        t3 = _this._regExp;
        match = t3._execGlobal$2(string, t1);
        if (match != null) {
          _this.__js_helper$_current = match;
          nextIndex = match.get$end();
          if (match._match.index === nextIndex) {
            if (t3._nativeRegExp.unicode) {
              t1 = _this._nextIndex;
              t3 = t1 + 1;
              if (t3 < t2) {
                t1 = B.JSString_methods.codeUnitAt$1(string, t1);
                if (t1 >= 55296 && t1 <= 56319) {
                  t1 = B.JSString_methods.codeUnitAt$1(string, t3);
                  t1 = t1 >= 56320 && t1 <= 57343;
                } else
                  t1 = false;
              } else
                t1 = false;
            } else
              t1 = false;
            nextIndex = (t1 ? nextIndex + 1 : nextIndex) + 1;
          }
          _this._nextIndex = nextIndex;
          return true;
        }
      }
      _this._string = _this.__js_helper$_current = null;
      return false;
    },
    $isIterator: 1
  };
  A.StringMatch.prototype = {
    get$end() {
      return this.start + this.pattern.length;
    },
    $isMatch: 1,
    get$start(receiver) {
      return this.start;
    }
  };
  A._StringAllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index);
    }
  };
  A._StringAllMatchesIterator.prototype = {
    moveNext$0() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new A.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current() {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    },
    $isIterator: 1
  };
  A._Cell.prototype = {
    _readLocal$0() {
      var t1 = this.__late_helper$_value;
      if (t1 === this)
        throw A.wrapException(new A.LateError("Local '" + this.__late_helper$_name + "' has not been initialized."));
      return t1;
    }
  };
  A.NativeByteBuffer.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteBuffer_RkP;
    },
    $isByteBuffer: 1
  };
  A.NativeTypedData.prototype = {
    _invalidPosition$3(receiver, position, $length, $name) {
      var t1 = A.RangeError$range(position, 0, $length, $name, null);
      throw A.wrapException(t1);
    },
    _checkPosition$3(receiver, position, $length, $name) {
      if (position >>> 0 !== position || position > $length)
        this._invalidPosition$3(receiver, position, $length, $name);
    },
    $isTypedData: 1
  };
  A.NativeByteData.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteData_zNC;
    },
    _getFloat64$2(receiver, byteOffset, littleEndian) {
      return receiver.getFloat64(byteOffset, littleEndian);
    },
    _setFloat64$3(receiver, byteOffset, value, littleEndian) {
      return receiver.setFloat64(byteOffset, value, littleEndian);
    }
  };
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $isJSIndexable: 1,
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfInt.prototype = {
    $indexSet(receiver, index, value) {
      A._asInt(value);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var targetLength, count, sourceLength, source;
      type$.Iterable_int._as(iterable);
      if (type$.NativeTypedArrayOfInt._is(iterable)) {
        targetLength = receiver.length;
        this._checkPosition$3(receiver, start, targetLength, "start");
        this._checkPosition$3(receiver, end, targetLength, "end");
        if (start > end)
          A.throwExpression(A.RangeError$range(start, 0, end, null, null));
        count = end - start;
        sourceLength = iterable.length;
        if (sourceLength - skipCount < count)
          A.throwExpression(A.StateError$("Not enough elements"));
        source = skipCount !== 0 || sourceLength !== count ? iterable.subarray(skipCount, skipCount + count) : iterable;
        receiver.set(source, start);
        return;
      }
      this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeInt8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int8List_ekJ;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint32List_2bx;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8List_WLA;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    $isNativeUint8List: 1,
    $isUint8List: 1
  };
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Type.prototype = {
    toString$0(_) {
      return A._rtiToString(this._rti, null);
    },
    $isType: 1
  };
  A._Error.prototype = {
    toString$0(_) {
      return this._message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 34
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = type$.void_Function._as(callback);
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 110
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 11
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 11
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    }
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 0
  };
  A._AsyncAwaitCompleter.prototype = {
    complete$1(_, value) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/?")._as(value);
      if (value == null)
        t1._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t2 = _this._future;
        if (t1._eval$1("Future<1>")._is(value))
          t2._chainFuture$1(value);
        else
          t2._completeWithValue$1(t1._precomputed1._as(value));
      }
    },
    completeError$2(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    },
    $isCompleter: 1
  };
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 9
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, type$.StackTrace._as(stackTrace)));
    },
    $signature: 122
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(A._asInt(errorCode), result);
    },
    $signature: 37
  };
  A._IterationMarker.prototype = {
    toString$0(_) {
      return "IterationMarker(" + this.state + ", " + A.S(this.value) + ")";
    }
  };
  A._SyncStarIterator.prototype = {
    get$current() {
      var t1,
        nested = this._nestedIterator;
      if (nested == null) {
        t1 = this._async$_current;
        return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
      }
      return nested.get$current();
    },
    moveNext$0() {
      var t1, t2, value, state, suspendedBodies, inner, _this = this;
      for (t1 = _this.$ti._eval$1("Iterator<1>"); true;) {
        t2 = _this._nestedIterator;
        if (t2 != null)
          if (t2.moveNext$0())
            return true;
          else
            _this.set$_nestedIterator(null);
        value = function(body, SUCCESS, ERROR) {
          var errorValue,
            errorCode = SUCCESS;
          while (true)
            try {
              return body(errorCode, errorValue);
            } catch (error) {
              errorValue = error;
              errorCode = ERROR;
            }
        }(_this._body, 0, 1);
        if (value instanceof A._IterationMarker) {
          state = value.state;
          if (state === 2) {
            suspendedBodies = _this._suspendedBodies;
            if (suspendedBodies == null || suspendedBodies.length === 0) {
              _this.set$_async$_current(null);
              return false;
            }
            if (0 >= suspendedBodies.length)
              return A.ioore(suspendedBodies, -1);
            _this._body = suspendedBodies.pop();
            continue;
          } else {
            t2 = value.value;
            if (state === 3)
              throw t2;
            else {
              inner = t1._as(J.get$iterator$ax(t2));
              if (inner instanceof A._SyncStarIterator) {
                t2 = _this._suspendedBodies;
                if (t2 == null)
                  t2 = _this._suspendedBodies = [];
                B.JSArray_methods.add$1(t2, _this._body);
                _this._body = inner._body;
                continue;
              } else {
                _this.set$_nestedIterator(inner);
                continue;
              }
            }
          }
        } else {
          _this.set$_async$_current(value);
          return true;
        }
      }
      return false;
    },
    set$_async$_current(_current) {
      this._async$_current = this.$ti._eval$1("1?")._as(_current);
    },
    set$_nestedIterator(_nestedIterator) {
      this._nestedIterator = this.$ti._eval$1("Iterator<1>?")._as(_nestedIterator);
    },
    $isIterator: 1
  };
  A._SyncStarIterable.prototype = {
    get$iterator(_) {
      return new A._SyncStarIterator(this._outerHelper(), this.$ti._eval$1("_SyncStarIterator<1>"));
    }
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A.Future_Future_closure.prototype = {
    call$0() {
      var e, s, exception;
      try {
        this.result._complete$1(this.computation.call$0());
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._completeWithErrorCallback(this.result, e, s);
      }
    },
    $signature: 0
  };
  A.Future_Future$microtask_closure.prototype = {
    call$0() {
      var e, s, exception;
      try {
        this.result._complete$1(this.computation.call$0());
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._completeWithErrorCallback(this.result, e, s);
      }
    },
    $signature: 0
  };
  A.Future_wait_handleError.prototype = {
    call$2(theError, theStackTrace) {
      var t1, t2, _this = this;
      type$.Object._as(theError);
      type$.StackTrace._as(theStackTrace);
      t1 = _this._box_0;
      t2 = --t1.remaining;
      if (t1.values != null) {
        t1.values = null;
        if (t1.remaining === 0 || _this.eagerError)
          _this._future._completeError$2(theError, theStackTrace);
        else {
          _this.error.__late_helper$_value = theError;
          _this.stackTrace.__late_helper$_value = theStackTrace;
        }
      } else if (t2 === 0 && !_this.eagerError)
        _this._future._completeError$2(_this.error._readLocal$0(), _this.stackTrace._readLocal$0());
    },
    $signature: 4
  };
  A.Future_wait_closure.prototype = {
    call$1(value) {
      var valueList, t2, _this = this,
        t1 = _this.T;
      t1._as(value);
      t2 = _this._box_0;
      --t2.remaining;
      valueList = t2.values;
      if (valueList != null) {
        J.$indexSet$ax(valueList, _this.pos, value);
        if (t2.remaining === 0)
          _this._future._completeWithValue$1(A.List_List$from(valueList, true, t1));
      } else if (t2.remaining === 0 && !_this.eagerError)
        _this._future._completeError$2(_this.error._readLocal$0(), _this.stackTrace._readLocal$0());
    },
    $signature() {
      return this.T._eval$1("Null(0)");
    }
  };
  A._Completer.prototype = {
    completeError$2(error, stackTrace) {
      var t1 = type$.Object;
      t1._as(error);
      type$.nullable_StackTrace._as(stackTrace);
      A.checkNotNullable(error, "error", t1);
      if ((this.future._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      this._completeError$2(error, stackTrace);
    },
    completeError$1(error) {
      return this.completeError$2(error, null);
    },
    $isCompleter: 1
  };
  A._AsyncCompleter.prototype = {
    complete$1(_, value) {
      var t2,
        t1 = this.$ti;
      t1._eval$1("1/?")._as(value);
      t2 = this.future;
      if ((t2._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t2._asyncComplete$1(t1._eval$1("1/")._as(value));
    },
    complete$0($receiver) {
      return this.complete$1($receiver, null);
    },
    _completeError$2(error, stackTrace) {
      this.future._asyncCompleteError$2(error, stackTrace);
    }
  };
  A._SyncCompleter.prototype = {
    complete$1(_, value) {
      var t2,
        t1 = this.$ti;
      t1._eval$1("1/?")._as(value);
      t2 = this.future;
      if ((t2._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t2._complete$1(t1._eval$1("1/")._as(value));
    },
    complete$0($receiver) {
      return this.complete$1($receiver, null);
    },
    _completeError$2(error, stackTrace) {
      this.future._completeError$2(error, stackTrace);
    }
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2$2(type$.bool_Function_Object._as(this.callback), asyncError.error, type$.bool, type$.Object);
    },
    handleError$1(asyncError) {
      var exception, _this = this,
        errorCallback = _this.errorCallback,
        result = null,
        t1 = type$.dynamic,
        t2 = type$.Object,
        t3 = asyncError.error,
        t4 = _this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t4.runBinary$3$3(errorCallback, t3, asyncError.stackTrace, t1, t2, type$.StackTrace);
      else
        result = t4.runUnary$2$2(type$.dynamic_Function_Object._as(errorCallback), t3, t1, t2);
      try {
        t1 = _this.$ti._eval$1("2/")._as(result);
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((_this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    then$1$2$onError(f, onError, $R) {
      var currentZone, result, t2,
        t1 = this.$ti;
      t1._bind$1($R)._eval$1("1/(2)")._as(f);
      currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else {
        $R._eval$1("@<0/>")._bind$1(t1._precomputed1)._eval$1("1(2)")._as(f);
        if (onError != null)
          onError = A._registerErrorHandler(onError, currentZone);
      }
      result = new A._Future(currentZone, $R._eval$1("_Future<0>"));
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t2, f, onError, t1._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result,
        t1 = this.$ti;
      t1._bind$1($E)._eval$1("1/(2)")._as(f);
      result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 3, f, onError, t1._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    whenComplete$1(action) {
      var t1, result;
      type$.dynamic_Function._as(action);
      t1 = this.$ti;
      result = new A._Future($.Zone__current, t1);
      this._addListener$1(new A._FutureListener(result, 8, action, null, t1._eval$1("@<1>")._bind$1(t1._precomputed1)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(source);
        }
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__addListener_closure(_this, listener)));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(source);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__prependListeners_closure(_box_0, _this)));
      }
    },
    _removeListeners$0() {
      var current = type$.nullable__FutureListener_dynamic_dynamic._as(this._resultOrListeners);
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1(source) {
      var e, s, exception, _this = this;
      _this._state ^= 2;
      try {
        source.then$1$2$onError(new A._Future__chainForeignFuture_closure(_this), new A._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A.scheduleMicrotask(new A._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _complete$1(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value))
        if (t1._is(value))
          A._Future__chainCoreFuture(value, _this);
        else
          _this._chainForeignFuture$1(value);
      else {
        listeners = _this._removeListeners$0();
        t1._precomputed1._as(value);
        _this._state = 8;
        _this._resultOrListeners = value;
        A._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1(value) {
      var listeners, _this = this;
      _this.$ti._precomputed1._as(value);
      listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2(error, stackTrace) {
      var listeners;
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      listeners = this._removeListeners$0();
      this._setErrorObject$1(A.AsyncError$(error, stackTrace));
      A._Future__propagateToListeners(this, listeners);
    },
    _asyncComplete$1(value) {
      var t1 = this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(t1._precomputed1._as(value));
    },
    _asyncCompleteWithValue$1(value) {
      var _this = this;
      _this.$ti._precomputed1._as(value);
      _this._state ^= 2;
      A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__asyncCompleteWithValue_closure(_this, value)));
    },
    _chainFuture$1(value) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("Future<1>")._as(value);
      if (t1._is(value)) {
        if ((value._state & 16) !== 0) {
          _this._state ^= 2;
          A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__chainFuture_closure(_this, value)));
        } else
          A._Future__chainCoreFuture(value, _this);
        return;
      }
      _this._chainForeignFuture$1(value);
    },
    _asyncCompleteError$2(error, stackTrace) {
      type$.StackTrace._as(stackTrace);
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, type$.void_Function._as(new A._Future__asyncCompleteError_closure(this, error, stackTrace)));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainForeignFuture_closure.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state ^= 2;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1._completeError$2(error, stackTrace);
      }
    },
    $signature: 34
  };
  A._Future__chainForeignFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      this.$this._completeError$2(type$.Object._as(error), type$.StackTrace._as(stackTrace));
    },
    $signature: 31
  };
  A._Future__chainForeignFuture_closure1.prototype = {
    call$0() {
      this.$this._completeError$2(this.e, this.s);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__chainFuture_closure.prototype = {
    call$0() {
      A._Future__chainCoreFuture(this.value, this.$this);
    },
    $signature: 0
  };
  A._Future__asyncCompleteError_closure.prototype = {
    call$0() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1$1(type$.dynamic_Function._as(t1.callback), type$.dynamic);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this.hasError && type$.AsyncError._as(_this._box_1.source._resultOrListeners).error === e;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = type$.AsyncError._as(completeResult._resultOrListeners);
          t1.listenerHasError = true;
        }
        return;
      }
      if (type$.Future_dynamic._is(completeResult)) {
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(_) {
      return this.originalSource;
    },
    $signature: 101
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, t3, t4, t5, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t3 = t2.$ti;
        t4 = t3._precomputed1;
        t5 = t4._as(this.sourceResult);
        t1.listenerValueOrError = t2.result._zone.runUnary$2$2(t3._eval$1("2/(1)")._as(t2.callback), t5, t3._eval$1("2/"), t4);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = this._box_0;
        t1.listenerValueOrError = A.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, _this = this;
      try {
        asyncError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t2 = _this._box_0;
        if (t1.error === e)
          t2.listenerValueOrError = t1;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    get$length(_) {
      var t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new A.Stream_length_closure(t1, this), true, new A.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    },
    get$first(_) {
      var future = new A._Future($.Zone__current, A._instanceType(this)._eval$1("_Future<Stream.T>")),
        subscription = this.listen$4$cancelOnError$onDone$onError(null, true, new A.Stream_first_closure(future), future.get$_completeError());
      subscription.onData$1(new A.Stream_first_closure0(this, subscription, future));
      return future;
    }
  };
  A.Stream_length_closure.prototype = {
    call$1(_) {
      A._instanceType(this.$this)._eval$1("Stream.T")._as(_);
      ++this._box_0.count;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      this.future._complete$1(this._box_0.count);
    },
    $signature: 0
  };
  A.Stream_first_closure.prototype = {
    call$0() {
      var e, s, t1, exception;
      try {
        t1 = A.IterableElementError_noElement();
        throw A.wrapException(t1);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._completeWithErrorCallback(this.future, e, s);
      }
    },
    $signature: 0
  };
  A.Stream_first_closure0.prototype = {
    call$1(value) {
      A._cancelAndValue(this.subscription, this.future, A._instanceType(this.$this)._eval$1("Stream.T")._as(value));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.StreamSubscription.prototype = {};
  A.StreamView.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      return this._stream.listen$4$cancelOnError$onDone$onError(A._instanceType(this)._eval$1("~(StreamView.T)?")._as(onData), true, type$.nullable_void_Function._as(onDone), onError);
    }
  };
  A.StreamTransformerBase.prototype = {
    cast$2$0(_, RS, RT) {
      var t1 = A._instanceType(this);
      return new A.CastStreamTransformer(this, t1._eval$1("@<StreamTransformerBase.S>")._bind$1(t1._eval$1("StreamTransformerBase.T"))._bind$1(RS)._bind$1(RT)._eval$1("CastStreamTransformer<1,2,3,4>"));
    },
    $isStreamTransformer: 1
  };
  A._StreamController.prototype = {
    get$_pendingEvents() {
      var t1, _this = this;
      if ((_this._state & 8) === 0)
        return _this.$ti._eval$1("_PendingEvents<1>?")._as(_this._varData);
      t1 = _this.$ti;
      return t1._eval$1("_PendingEvents<1>?")._as(t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).get$varData());
    },
    _ensurePendingEvents$0() {
      var events, t1, _this = this;
      if ((_this._state & 8) === 0) {
        events = _this._varData;
        if (events == null)
          events = _this._varData = new A._PendingEvents(_this.$ti._eval$1("_PendingEvents<1>"));
        return _this.$ti._eval$1("_PendingEvents<1>")._as(events);
      }
      t1 = _this.$ti;
      events = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).get$varData();
      return t1._eval$1("_PendingEvents<1>")._as(events);
    },
    get$_subscription() {
      var varData = this._varData;
      if ((this._state & 8) !== 0)
        varData = type$._StreamControllerAddStreamState_nullable_Object._as(varData).get$varData();
      return this.$ti._eval$1("_ControllerSubscription<1>")._as(varData);
    },
    _closeUnchecked$0() {
      var t1 = this._state |= 4;
      if ((t1 & 1) !== 0)
        this.get$_subscription()._addPending$1(B.C__DelayedDone);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, B.C__DelayedDone);
    },
    _async$_add$1(value) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(value);
      t2 = _this._state;
      if ((t2 & 1) !== 0) {
        t1._precomputed1._as(value);
        _this.get$_subscription()._addPending$1(new A._DelayedData(value, t1._eval$1("_DelayedData<1>")));
      } else if ((t2 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, new A._DelayedData(value, t1._eval$1("_DelayedData<1>")));
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, t5, subscription, pendingEvents, addState, _this = this,
        t1 = _this.$ti;
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      if ((_this._state & 3) !== 0)
        throw A.wrapException(A.StateError$("Stream has already been listened to."));
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      t4 = A._BufferingStreamSubscription__registerDataHandler(t2, onData, t1._precomputed1);
      A._BufferingStreamSubscription__registerErrorHandler(t2, onError);
      t5 = type$.void_Function;
      subscription = new A._ControllerSubscription(_this, t4, t5._as(onDone), t2, t3, t1._eval$1("_ControllerSubscription<1>"));
      pendingEvents = _this.get$_pendingEvents();
      t3 = _this._state |= 1;
      if ((t3 & 8) !== 0) {
        addState = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
        addState.set$varData(subscription);
        addState.resume$0();
      } else
        _this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      t1 = t5._as(new A._StreamController__subscribe_closure(_this));
      t2 = subscription._state;
      subscription._state = t2 | 32;
      t1.call$0();
      subscription._state &= 4294967263;
      subscription._checkState$1((t2 & 4) !== 0);
      return subscription;
    },
    _recordCancel$1(subscription) {
      var result, onCancel, cancelResult, e, s, exception, result0, _this = this,
        t1 = _this.$ti;
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      result = null;
      if ((_this._state & 8) !== 0)
        result = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).cancel$0();
      _this._varData = null;
      _this._state = _this._state & 4294967286 | 2;
      onCancel = _this.onCancel;
      if (onCancel != null)
        if (result == null)
          try {
            cancelResult = onCancel.call$0();
            if (type$.Future_void._is(cancelResult))
              result = cancelResult;
          } catch (exception) {
            e = A.unwrapException(exception);
            s = A.getTraceFromException(exception);
            result0 = new A._Future($.Zone__current, type$._Future_void);
            result0._asyncCompleteError$2(e, s);
            result = result0;
          }
        else
          result = result.whenComplete$1(onCancel);
      t1 = new A._StreamController__recordCancel_complete(_this);
      if (result != null)
        result = result.whenComplete$1(t1);
      else
        t1.call$0();
      return result;
    },
    $is_StreamControllerLifecycle: 1,
    $is_EventDispatch: 1
  };
  A._StreamController__subscribe_closure.prototype = {
    call$0() {
      A._runGuarded(this.$this.onListen);
    },
    $signature: 0
  };
  A._StreamController__recordCancel_complete.prototype = {
    call$0() {
      var doneFuture = this.$this._doneFuture;
      if (doneFuture != null && (doneFuture._state & 30) === 0)
        doneFuture._asyncComplete$1(null);
    },
    $signature: 0
  };
  A._AsyncStreamControllerDispatch.prototype = {};
  A._AsyncStreamController.prototype = {};
  A._ControllerStream.prototype = {
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A._ControllerStream && other._controller === this._controller;
    }
  };
  A._ControllerSubscription.prototype = {
    _onCancel$0() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0() {
      var t1 = this._controller,
        t2 = t1.$ti;
      t2._eval$1("StreamSubscription<1>")._as(this);
      if ((t1._state & 8) !== 0)
        t2._eval$1("_StreamControllerAddStreamState<1>")._as(t1._varData).pause$0(0);
      A._runGuarded(t1.onPause);
    },
    _onResume$0() {
      var t1 = this._controller,
        t2 = t1.$ti;
      t2._eval$1("StreamSubscription<1>")._as(this);
      if ((t1._state & 8) !== 0)
        t2._eval$1("_StreamControllerAddStreamState<1>")._as(t1._varData).resume$0();
      A._runGuarded(t1.onResume);
    }
  };
  A._BufferingStreamSubscription.prototype = {
    _setPendingEvents$1(pendingEvents) {
      var _this = this;
      A._instanceType(_this)._eval$1("_PendingEvents<1>?")._as(pendingEvents);
      if (pendingEvents == null)
        return;
      _this.set$_pending(pendingEvents);
      if (pendingEvents.lastPendingEvent != null) {
        _this._state |= 64;
        pendingEvents.schedule$1(_this);
      }
    },
    onData$1(handleData) {
      var t1 = A._instanceType(this);
      this.set$_async$_onData(A._BufferingStreamSubscription__registerDataHandler(this._zone, t1._eval$1("~(1)?")._as(handleData), t1._precomputed1));
    },
    cancel$0() {
      var t1 = this._state &= 4294967279;
      if ((t1 & 8) === 0)
        this._cancel$0();
      t1 = this._cancelFuture;
      return t1 == null ? $.$get$Future__nullFuture() : t1;
    },
    _cancel$0() {
      var t2, _this = this,
        t1 = _this._state |= 8;
      if ((t1 & 64) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 32) === 0)
        _this.set$_pending(null);
      _this._cancelFuture = _this._onCancel$0();
    },
    _onPause$0() {
    },
    _onResume$0() {
    },
    _onCancel$0() {
      return null;
    },
    _addPending$1($event) {
      var t1, _this = this,
        pending = _this._pending;
      if (pending == null) {
        pending = new A._PendingEvents(A._instanceType(_this)._eval$1("_PendingEvents<1>"));
        _this.set$_pending(pending);
      }
      pending.add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 64) === 0) {
        t1 |= 64;
        _this._state = t1;
        if (t1 < 128)
          pending.schedule$1(_this);
      }
    },
    _sendDone$0() {
      var cancelFuture, _this = this,
        t1 = new A._BufferingStreamSubscription__sendDone_sendDone(_this);
      _this._cancel$0();
      _this._state |= 16;
      cancelFuture = _this._cancelFuture;
      if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _checkState$1(wasInputPaused) {
      var t2, isInputPaused, _this = this,
        t1 = _this._state;
      if ((t1 & 64) !== 0 && _this._pending.lastPendingEvent == null) {
        t1 = _this._state = t1 & 4294967231;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t2 = _this._pending;
            t2 = t2 == null ? null : t2.lastPendingEvent == null;
            t2 = t2 !== false;
          } else
            t2 = false;
        else
          t2 = false;
        if (t2) {
          t1 &= 4294967291;
          _this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          _this.set$_pending(null);
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = t1 ^ 32;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = _this._state &= 4294967263;
      }
      if ((t1 & 64) !== 0 && t1 < 128)
        _this._pending.schedule$1(_this);
    },
    set$_async$_onData(_onData) {
      this._async$_onData = A._instanceType(this)._eval$1("~(1)")._as(_onData);
    },
    set$_pending(_pending) {
      this._pending = A._instanceType(this)._eval$1("_PendingEvents<1>?")._as(_pending);
    },
    $isStreamSubscription: 1,
    $is_EventDispatch: 1
  };
  A._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = t2 | 42;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state &= 4294967263;
    },
    $signature: 0
  };
  A._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1 = this.$ti;
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      return this._controller._subscribe$4(t1._eval$1("~(1)?")._as(onData), onError, onDone, true);
    }
  };
  A._DelayedEvent.prototype = {
    set$next(next) {
      this.next = type$.nullable__DelayedEvent_dynamic._as(next);
    },
    get$next() {
      return this.next;
    }
  };
  A._DelayedData.prototype = {
    perform$1(dispatch) {
      var t1, t2, t3;
      this.$ti._eval$1("_EventDispatch<1>")._as(dispatch);
      t1 = A._instanceType(dispatch)._precomputed1;
      t2 = t1._as(this.value);
      t3 = dispatch._state;
      dispatch._state = t3 | 32;
      dispatch._zone.runUnaryGuarded$1$2(dispatch._async$_onData, t2, t1);
      dispatch._state &= 4294967263;
      dispatch._checkState$1((t3 & 4) !== 0);
    }
  };
  A._DelayedDone.prototype = {
    perform$1(dispatch) {
      dispatch._sendDone$0();
    },
    get$next() {
      return null;
    },
    set$next(_) {
      throw A.wrapException(A.StateError$("No events after a done."));
    },
    $is_DelayedEvent: 1
  };
  A._PendingEvents.prototype = {
    schedule$1(dispatch) {
      var t1, _this = this;
      _this.$ti._eval$1("_EventDispatch<1>")._as(dispatch);
      t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      A.scheduleMicrotask(new A._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    },
    add$1(_, $event) {
      var _this = this,
        lastEvent = _this.lastPendingEvent;
      if (lastEvent == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        lastEvent.set$next($event);
        _this.lastPendingEvent = $event;
      }
    }
  };
  A._PendingEvents_schedule_closure.prototype = {
    call$0() {
      var t2, $event, nextEvent,
        t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t2 = t1.$ti._eval$1("_EventDispatch<1>")._as(this.dispatch);
      $event = t1.firstPendingEvent;
      nextEvent = $event.get$next();
      t1.firstPendingEvent = nextEvent;
      if (nextEvent == null)
        t1.lastPendingEvent = null;
      $event.perform$1(t2);
    },
    $signature: 0
  };
  A._DoneStreamSubscription.prototype = {
    _schedule$0() {
      var _this = this;
      if ((_this._state & 2) !== 0)
        return;
      A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(_this.get$_sendDone()));
      _this._state |= 2;
    },
    onData$1(handleData) {
      this.$ti._eval$1("~(1)?")._as(handleData);
    },
    cancel$0() {
      return $.$get$Future__nullFuture();
    },
    _sendDone$0() {
      var _this = this,
        t1 = _this._state &= 4294967293;
      if (t1 >= 4)
        return;
      _this._state = t1 | 1;
      _this._zone.runGuarded$1(_this._onDone);
    },
    $isStreamSubscription: 1
  };
  A._StreamIterator.prototype = {};
  A._EmptyStream.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1 = this.$ti;
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      t1 = new A._DoneStreamSubscription($.Zone__current, onDone, t1._eval$1("_DoneStreamSubscription<1>"));
      t1._schedule$0();
      return t1;
    }
  };
  A._cancelAndValue_closure.prototype = {
    call$0() {
      return this.future._complete$1(this.value);
    },
    $signature: 0
  };
  A._Zone.prototype = {$isZone: 1};
  A._rootHandleError_closure.prototype = {
    call$0() {
      A.Error_throwWithStackTrace(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    runGuarded$1(f) {
      var e, s, exception;
      type$.void_Function._as(f);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f, type$.void);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runUnaryGuarded$1$2(f, arg, $T) {
      var e, s, exception;
      $T._eval$1("~(0)")._as(f);
      $T._as(arg);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg, type$.void, $T);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runBinaryGuarded$2$3(f, arg1, arg2, T1, T2) {
      var e, s, exception;
      T1._eval$1("@<0>")._bind$1(T2)._eval$1("~(1,2)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$2(arg1, arg2);
          return;
        }
        A._rootRunBinary(null, null, this, f, arg1, arg2, type$.void, T1, T2);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, type$.void_Function._as(f));
    },
    bindUnaryCallbackGuarded$1$1(f, $T) {
      return new A._RootZone_bindUnaryCallbackGuarded_closure(this, $T._eval$1("~(0)")._as(f), $T);
    },
    handleUncaughtError$2(error, stackTrace) {
      A._rootHandleError(type$.Object._as(error), type$.StackTrace._as(stackTrace));
    },
    run$1$1(f, $R) {
      $R._eval$1("0()")._as(f);
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2(f, arg, $R, $T) {
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3(f, arg1, arg2, $R, T1, T2) {
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    },
    registerBinaryCallback$3$1(f, $R, T1, T2) {
      return $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.f, t1._as(arg), t1);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A._HashMap.prototype = {
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$keys() {
      return new A._HashMapKeyIterable(this, A._instanceType(this)._eval$1("_HashMapKeyIterable<1>"));
    },
    containsKey$1(key) {
      var strings, t1;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[key] != null;
      } else {
        t1 = this._containsKey$1(key);
        return t1;
      }
    },
    _containsKey$1(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    addAll$1(_, other) {
      A._instanceType(this)._eval$1("Map<1,2>")._as(other).forEach$1(0, new A._HashMap_addAll_closure(this));
    },
    $index(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._strings;
        t1 = strings == null ? null : A._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._nums;
        t1 = nums == null ? null : A._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(key);
    },
    _get$1(key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = A._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = A._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        A._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._keys = null;
        }
      }
    },
    putIfAbsent$2(key, ifAbsent) {
      var t2, value, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._eval$1("2()")._as(ifAbsent);
      if (_this.containsKey$1(key)) {
        t2 = _this.$index(0, key);
        return t2 == null ? t1._rest[1]._as(t2) : t2;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string" && key !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._strings, key);
      else if (typeof key == "number" && (key & 1073741823) === key)
        return _this._collection$_removeHashTableEntry$2(_this._nums, key);
      else
        return _this._remove$1(key);
    },
    _remove$1(key) {
      var hash, bucket, index, result, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return null;
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      --_this._collection$_length;
      _this._keys = null;
      result = bucket.splice(index, 2)[1];
      if (0 === bucket.length)
        delete rest[hash];
      return result;
    },
    clear$0(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._strings = _this._nums = _this._collection$_rest = _this._keys = null;
        _this._collection$_length = 0;
      }
    },
    forEach$1(_, action) {
      var keys, $length, t2, i, key, t3, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1,2)")._as(action);
      keys = _this._computeKeys$0();
      for ($length = keys.length, t2 = t1._precomputed1, t1 = t1._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        t2._as(key);
        t3 = _this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
        if (keys !== _this._keys)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._keys;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._keys = result;
    },
    _addHashTableEntry$3(table, key, value) {
      var t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (table[key] == null) {
        ++this._collection$_length;
        this._keys = null;
      }
      A._HashMap__setTableEntry(table, key, value);
    },
    _collection$_removeHashTableEntry$2(table, key) {
      var value;
      if (table != null && table[key] != null) {
        value = A._instanceType(this)._rest[1]._as(A._HashMap__getTableEntry(table, key));
        delete table[key];
        --this._collection$_length;
        this._keys = null;
        return value;
      } else
        return null;
    },
    _computeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    _getBucket$2(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq$(bucket[i], key))
          return i;
      return -1;
    },
    $isHashMap: 1
  };
  A._HashMap_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1.$indexSet(0, t2._precomputed1._as(key), t2._rest[1]._as(value));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A._IdentityHashMap.prototype = {
    _computeHashCode$1(key) {
      return A.objectHashCode(key) & 1073741823;
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A._CustomHashMap.prototype = {
    $index(_, key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return null;
      return this.super$_HashMap$_get(key);
    },
    $indexSet(_, key, value) {
      var t1 = this.$ti;
      this.super$_HashMap$_set(t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    containsKey$1(key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return false;
      return this.super$_HashMap$_containsKey(key);
    },
    remove$1(_, key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return null;
      return this.super$_HashMap$_remove(key);
    },
    _computeHashCode$1(key) {
      return this._hashCode.call$1(this.$ti._precomputed1._as(key)) & 1073741823;
    },
    _findBucketIndex$2(bucket, key) {
      var $length, t1, t2, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (t1 = this.$ti._precomputed1, t2 = this._equals, i = 0; i < $length; i += 2)
        if (A.boolConversionCheck(t2.call$2(bucket[i], t1._as(key))))
          return i;
      return -1;
    }
  };
  A._CustomHashMap_closure.prototype = {
    call$1(v) {
      return this.K._is(v);
    },
    $signature: 30
  };
  A._HashMapKeyIterable.prototype = {
    get$length(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._collection$_map;
      return new A._HashMapKeyIterator(t1, t1._computeKeys$0(), this.$ti._eval$1("_HashMapKeyIterator<1>"));
    },
    forEach$1(_, f) {
      var t1, keys, $length, i;
      this.$ti._eval$1("~(1)")._as(f);
      t1 = this._collection$_map;
      keys = t1._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        f.call$1(keys[i]);
        if (keys !== t1._keys)
          throw A.wrapException(A.ConcurrentModificationError$(t1));
      }
    }
  };
  A._HashMapKeyIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        keys = _this._keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._keys)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(keys[offset]);
        _this._offset = offset + 1;
        return true;
      }
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A._LinkedIdentityHashMap.prototype = {
    internalComputeHashCode$1(key) {
      return A.objectHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i].hashMapCellKey;
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A._LinkedCustomHashMap.prototype = {
    $index(_, key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return null;
      return this.super$JsLinkedHashMap$internalGet(key);
    },
    $indexSet(_, key, value) {
      var t1 = this.$ti;
      this.super$JsLinkedHashMap$internalSet(t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    containsKey$1(key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return false;
      return this.super$JsLinkedHashMap$internalContainsKey(key);
    },
    remove$1(_, key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return null;
      return this.super$JsLinkedHashMap$internalRemove(key);
    },
    internalComputeHashCode$1(key) {
      return this._hashCode.call$1(this.$ti._precomputed1._as(key)) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, t1, t2, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (t1 = this.$ti._precomputed1, t2 = this._equals, i = 0; i < $length; ++i)
        if (A.boolConversionCheck(t2.call$2(t1._as(bucket[i].hashMapCellKey), t1._as(key))))
          return i;
      return -1;
    }
  };
  A._LinkedCustomHashMap_closure.prototype = {
    call$1(v) {
      return this.K._is(v);
    },
    $signature: 30
  };
  A._HashSet.prototype = {
    get$iterator(_) {
      return new A._HashSetIterator(this, this._computeElements$0(), A._instanceType(this)._eval$1("_HashSetIterator<1>"));
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._nums;
        return nums == null ? false : nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._strings;
        return _this._addHashTableEntry$2(strings == null ? _this._strings = A._HashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._nums;
        return _this._addHashTableEntry$2(nums == null ? _this._nums = A._HashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(element);
    },
    _add$1(element) {
      var rest, hash, bucket, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      ++_this._collection$_length;
      _this._collection$_elements = null;
      return true;
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._nums, object);
      else
        return _this._remove$1(object);
    },
    _remove$1(object) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      --_this._collection$_length;
      _this._collection$_elements = null;
      bucket.splice(index, 1);
      if (0 === bucket.length)
        delete rest[hash];
      return true;
    },
    clear$0(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._strings = _this._nums = _this._collection$_rest = _this._collection$_elements = null;
        _this._collection$_length = 0;
      }
    },
    _computeElements$0() {
      var strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._collection$_elements;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_elements = result;
    },
    _addHashTableEntry$2(table, element) {
      A._instanceType(this)._precomputed1._as(element);
      if (table[element] != null)
        return false;
      table[element] = 0;
      ++this._collection$_length;
      this._collection$_elements = null;
      return true;
    },
    _collection$_removeHashTableEntry$2(table, element) {
      if (table != null && table[element] != null) {
        delete table[element];
        --this._collection$_length;
        this._collection$_elements = null;
        return true;
      } else
        return false;
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i], element))
          return i;
      return -1;
    }
  };
  A._HashSetIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        elements = _this._collection$_elements,
        offset = _this._offset,
        t1 = _this._set;
      if (elements !== t1._collection$_elements)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(elements[offset]);
        _this._offset = offset + 1;
        return true;
      }
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A._LinkedHashSet.prototype = {
    get$iterator(_) {
      var _this = this,
        t1 = new A._LinkedHashSetIterator(_this, _this._collection$_modifications, A._instanceType(_this)._eval$1("_LinkedHashSetIterator<1>"));
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    forEach$1(_, action) {
      var cell, modifications, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1)")._as(action);
      cell = _this._collection$_first;
      modifications = _this._collection$_modifications;
      for (t1 = t1._precomputed1; cell != null;) {
        action.call$1(t1._as(cell._collection$_element));
        if (modifications !== _this._collection$_modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._collection$_next;
      }
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._strings;
        return _this._addHashTableEntry$2(strings == null ? _this._strings = A._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._nums;
        return _this._addHashTableEntry$2(nums == null ? _this._nums = A._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(element);
    },
    _add$1(element) {
      var rest, hash, bucket, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._newLinkedCell$1(element));
      }
      return true;
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._nums, object);
      else
        return _this._remove$1(object);
    },
    _remove$1(object) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      _this._collection$_unlinkCell$1(cell);
      return true;
    },
    _addHashTableEntry$2(table, element) {
      A._instanceType(this)._precomputed1._as(element);
      if (type$.nullable__LinkedHashSetCell._as(table[element]) != null)
        return false;
      table[element] = this._newLinkedCell$1(element);
      return true;
    },
    _collection$_removeHashTableEntry$2(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = type$.nullable__LinkedHashSetCell._as(table[element]);
      if (cell == null)
        return false;
      this._collection$_unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0() {
      this._collection$_modifications = this._collection$_modifications + 1 & 1073741823;
    },
    _newLinkedCell$1(element) {
      var t1, _this = this,
        cell = new A._LinkedHashSetCell(A._instanceType(_this)._precomputed1._as(element));
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        t1 = _this._collection$_last;
        t1.toString;
        cell._collection$_previous = t1;
        _this._collection$_last = t1._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _collection$_unlinkCell$1(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._collection$_element, element))
          return i;
      return -1;
    }
  };
  A._LinkedHashSetCell.prototype = {};
  A._LinkedHashSetIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        cell = _this._collection$_cell,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (cell == null) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(_this.$ti._eval$1("1?")._as(cell._collection$_element));
        _this._collection$_cell = cell._collection$_next;
        return true;
      }
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.UnmodifiableListView.prototype = {
    get$length(_) {
      return J.get$length$asx(this._collection$_source);
    },
    $index(_, index) {
      return J.elementAt$1$ax(this._collection$_source, index);
    }
  };
  A.HashMap_HashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 111
  };
  A.IterableBase.prototype = {};
  A.LinkedList.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A._LinkedListIterator(_this, _this._modificationCount, _this._collection$_first, _this.$ti._eval$1("_LinkedListIterator<1>"));
    },
    get$length(_) {
      return this._collection$_length;
    },
    clear$0(_) {
      var t1, next, _this = this, _null = null;
      ++_this._modificationCount;
      if (_this._collection$_length === 0)
        return;
      t1 = _this._collection$_first;
      t1.toString;
      next = t1;
      do {
        t1 = next._collection$_next;
        t1.toString;
        next.set$_list(_null);
        next.set$_collection$_previous(_null);
        next.set$_collection$_next(_null);
        if (t1 !== _this._collection$_first) {
          next = t1;
          continue;
        } else
          break;
      } while (true);
      _this.set$_collection$_first(_null);
      _this._collection$_length = 0;
    },
    get$first(_) {
      var t1;
      if (this._collection$_length === 0)
        throw A.wrapException(A.StateError$("No such element"));
      t1 = this._collection$_first;
      t1.toString;
      return t1;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    _insertBefore$3$updateFirst(entry, newEntry, updateFirst) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("1?")._as(entry);
      t1._precomputed1._as(newEntry);
      if (newEntry._list != null)
        throw A.wrapException(A.StateError$("LinkedListEntry is already in a LinkedList"));
      ++_this._modificationCount;
      newEntry.set$_list(_this);
      if (_this._collection$_length === 0) {
        newEntry.set$_collection$_next(newEntry);
        newEntry.set$_collection$_previous(newEntry);
        _this.set$_collection$_first(newEntry);
        ++_this._collection$_length;
        return;
      }
      t1 = entry._collection$_previous;
      t1.toString;
      newEntry.set$_collection$_previous(t1);
      newEntry.set$_collection$_next(entry);
      t1.set$_collection$_next(newEntry);
      entry.set$_collection$_previous(newEntry);
      ++_this._collection$_length;
    },
    _unlink$1(entry) {
      var t1, next, _this = this, _null = null;
      _this.$ti._precomputed1._as(entry);
      ++_this._modificationCount;
      entry._collection$_next.set$_collection$_previous(entry._collection$_previous);
      t1 = entry._collection$_previous;
      next = entry._collection$_next;
      t1.set$_collection$_next(next);
      --_this._collection$_length;
      entry.set$_collection$_previous(_null);
      entry.set$_collection$_next(_null);
      entry.set$_list(_null);
      if (_this._collection$_length === 0)
        _this.set$_collection$_first(_null);
      else if (entry === _this._collection$_first)
        _this.set$_collection$_first(next);
    },
    set$_collection$_first(_first) {
      this._collection$_first = this.$ti._eval$1("1?")._as(_first);
    }
  };
  A._LinkedListIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this._list;
      if (_this._modificationCount !== t1._modificationCount)
        throw A.wrapException(A.ConcurrentModificationError$(_this));
      if (t1._collection$_length !== 0)
        t1 = _this._visitedFirst && _this._collection$_next === t1.get$first(t1);
      else
        t1 = true;
      if (t1) {
        _this.set$_collection$_current(null);
        return false;
      }
      _this._visitedFirst = true;
      _this.set$_collection$_current(_this._collection$_next);
      _this.set$_collection$_next(_this._collection$_next._collection$_next);
      return true;
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    set$_collection$_next(_next) {
      this._collection$_next = this.$ti._eval$1("1?")._as(_next);
    },
    $isIterator: 1
  };
  A.LinkedListEntry.prototype = {
    set$_list(_list) {
      this._list = this.$ti._eval$1("LinkedList<LinkedListEntry.E>?")._as(_list);
    },
    set$_collection$_next(_next) {
      this._collection$_next = this.$ti._eval$1("LinkedListEntry.E?")._as(_next);
    },
    set$_collection$_previous(_previous) {
      this._collection$_previous = this.$ti._eval$1("LinkedListEntry.E?")._as(_previous);
    }
  };
  A.ListBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};
  A.ListMixin.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListMixin.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    forEach$1(receiver, action) {
      var $length, i;
      A.instanceType(receiver)._eval$1("~(ListMixin.E)")._as(action);
      $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        action.call$1(this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    get$isEmpty(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty(receiver) {
      return !this.get$isEmpty(receiver);
    },
    map$1$1(receiver, f, $T) {
      var t1 = A.instanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(ListMixin.E)")._as(f), t1._eval$1("@<ListMixin.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(receiver, count) {
      return A.SubListIterable$(receiver, count, null, A.instanceType(receiver)._eval$1("ListMixin.E"));
    },
    toList$1$growable(receiver, growable) {
      var t1, first, result, i, _this = this;
      if (_this.get$isEmpty(receiver)) {
        t1 = J.JSArray_JSArray$growable(0, A.instanceType(receiver)._eval$1("ListMixin.E"));
        return t1;
      }
      first = _this.$index(receiver, 0);
      result = A.List_List$filled(_this.get$length(receiver), first, true, A.instanceType(receiver)._eval$1("ListMixin.E"));
      for (i = 1; i < _this.get$length(receiver); ++i)
        B.JSArray_methods.$indexSet(result, i, _this.$index(receiver, i));
      return result;
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    fillRange$3(receiver, start, end, fill) {
      var i;
      A.instanceType(receiver)._eval$1("ListMixin.E?")._as(fill);
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      for (i = start; i < end; ++i)
        this.$indexSet(receiver, i, fill);
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherStart, otherList, i,
        t1 = A.instanceType(receiver);
      t1._eval$1("Iterable<ListMixin.E>")._as(iterable);
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (t1._eval$1("List<ListMixin.E>")._is(iterable)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
      else
        for (i = 0; i < $length; ++i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
    },
    toString$0(receiver) {
      return A.IterableBase_iterableToFullString(receiver, "[", "]");
    }
  };
  A.MapBase.prototype = {};
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += A.S(k);
      t1._contents = t2 + ": ";
      t1._contents += A.S(v);
    },
    $signature: 13
  };
  A.MapMixin.prototype = {
    cast$2$0(_, RK, RV) {
      var t1 = A._instanceType(this);
      return A.Map_castFrom(this, t1._eval$1("MapMixin.K"), t1._eval$1("MapMixin.V"), RK, RV);
    },
    forEach$1(_, action) {
      var t2, key, t3,
        t1 = A._instanceType(this);
      t1._eval$1("~(MapMixin.K,MapMixin.V)")._as(action);
      for (t2 = J.get$iterator$ax(this.get$keys()), t1 = t1._eval$1("MapMixin.V"); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
      }
    },
    get$entries(_) {
      return J.map$1$1$ax(this.get$keys(), new A.MapMixin_entries_closure(this), A._instanceType(this)._eval$1("MapEntry<MapMixin.K,MapMixin.V>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$keys());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$keys());
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  A.MapMixin_entries_closure.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t2._eval$1("MapMixin.K")._as(key);
      t1 = t1.$index(0, key);
      if (t1 == null)
        t1 = t2._eval$1("MapMixin.V")._as(t1);
      return new A.MapEntry(key, t1, t2._eval$1("@<MapMixin.K>")._bind$1(t2._eval$1("MapMixin.V"))._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("MapEntry<MapMixin.K,MapMixin.V>(MapMixin.K)");
    }
  };
  A._DoubleLinkedQueueEntry.prototype = {
    _link$2(previous, next) {
      var _this = this,
        t1 = A._instanceType(_this)._eval$1("_DoubleLinkedQueueEntry<1>?");
      t1._as(previous);
      t1._as(next);
      _this.set$_nextLink(next);
      _this.set$_previousLink(previous);
      if (previous != null)
        previous.set$_nextLink(_this);
      next.set$_previousLink(_this);
    },
    set$_previousLink(_previousLink) {
      this._previousLink = A._instanceType(this)._eval$1("_DoubleLinkedQueueEntry<1>?")._as(_previousLink);
    },
    set$_nextLink(_nextLink) {
      this._nextLink = A._instanceType(this)._eval$1("_DoubleLinkedQueueEntry<1>?")._as(_nextLink);
    }
  };
  A._DoubleLinkedQueueElement.prototype = {
    _remove$0() {
      var t1, _this = this;
      _this.set$_queue(null);
      t1 = _this._previousLink;
      if (t1 != null)
        t1.set$_nextLink(_this._nextLink);
      t1 = _this._nextLink;
      if (t1 != null)
        t1.set$_previousLink(_this._previousLink);
      _this.set$_nextLink(null);
      _this.set$_previousLink(null);
      return _this.element;
    },
    _asNonSentinelEntry$0() {
      return this;
    },
    set$_queue(_queue) {
      this._queue = this.$ti._eval$1("DoubleLinkedQueue<1>?")._as(_queue);
    }
  };
  A._DoubleLinkedQueueSentinel.prototype = {
    _asNonSentinelEntry$0() {
      return null;
    },
    _remove$0() {
      throw A.wrapException(A.IterableElementError_noElement());
    }
  };
  A.DoubleLinkedQueue.prototype = {
    get$length(_) {
      return this._elementCount;
    },
    add$1(_, value) {
      var t3, t4, _this = this,
        t1 = _this._sentinel,
        t2 = t1.$ti;
      value = t2._precomputed1._as(_this.$ti._precomputed1._as(value));
      t3 = t2._eval$1("_DoubleLinkedQueueElement<1>");
      t2 = new A._DoubleLinkedQueueElement(t2._eval$1("DoubleLinkedQueue<1>?")._as(_this), value, t3);
      t3 = t3._eval$1("_DoubleLinkedQueueEntry<1>?");
      t4 = t3._as(t1._previousLink);
      t3._as(t1);
      t2.set$_nextLink(t1);
      t2.set$_previousLink(t4);
      if (t4 != null)
        t4.set$_nextLink(t2);
      t1.set$_previousLink(t2);
      ++_this._elementCount;
    },
    get$isEmpty(_) {
      var t1 = this._sentinel;
      return t1._nextLink === t1;
    },
    get$iterator(_) {
      return new A._DoubleLinkedQueueIterator(this, this._sentinel._nextLink, this.$ti._eval$1("_DoubleLinkedQueueIterator<1>"));
    },
    toString$0(_) {
      return A.IterableBase_iterableToFullString(this, "{", "}");
    },
    $isEfficientLengthIterable: 1
  };
  A._DoubleLinkedQueueIterator.prototype = {
    moveNext$0() {
      var _this = this, _null = null,
        t1 = _this._nextEntry,
        nextElement = t1 == null ? _null : t1._asNonSentinelEntry$0();
      if (nextElement == null) {
        _this.set$_collection$_current(_null);
        _this.set$_nextEntry(_null);
        _this.set$_queue(_null);
        return false;
      }
      t1 = _this._queue;
      if (t1 != nextElement._queue)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      _this.set$_collection$_current(nextElement.element);
      _this.set$_nextEntry(nextElement._nextLink);
      return true;
    },
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    set$_queue(_queue) {
      this._queue = this.$ti._eval$1("DoubleLinkedQueue<1>?")._as(_queue);
    },
    set$_nextEntry(_nextEntry) {
      this._nextEntry = this.$ti._eval$1("_DoubleLinkedQueueEntry<1>?")._as(_nextEntry);
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.SetMixin.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    addAll$1(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(A._instanceType(this)._eval$1("Iterable<1>")._as(elements)); t1.moveNext$0();)
        this.add$1(0, t1.get$current());
    },
    removeAll$1(elements) {
      var t1, _i;
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, A.throwConcurrentModificationError)(elements), ++_i)
        this.remove$1(0, elements[_i]);
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, true, A._instanceType(this)._precomputed1);
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    map$1$1(_, f, $T) {
      var t1 = A._instanceType(this);
      return new A.EfficientLengthMappedIterable(this, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    toString$0(_) {
      return A.IterableBase_iterableToFullString(this, "{", "}");
    },
    skip$1(_, n) {
      return A.SkipIterable_SkipIterable(this, n, A._instanceType(this)._precomputed1);
    },
    elementAt$1(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      A.checkNotNullable(index, _s5_, type$.int);
      A.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current();
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw A.wrapException(A.IndexError$withLength(index, elementIndex, this, null, _s5_));
    }
  };
  A._SetBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
  A._ListBase_Object_ListMixin.prototype = {};
  A.__SetBase_Object_SetMixin.prototype = {};
  A._JsonMap.prototype = {
    $index(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length(_) {
      return this._processed == null ? this._data.__js_helper$_length : this._convert$_computeKeys$0().length;
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$keys() {
      if (this._processed == null) {
        var t1 = this._data;
        return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
      }
      return new A._JsonMapKeyIterable(this);
    },
    forEach$1(_, f) {
      var keys, i, key, value, _this = this;
      type$.void_Function_String_dynamic._as(f);
      if (_this._processed == null)
        return _this._data.forEach$1(0, f);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = A._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._data)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _convert$_computeKeys$0() {
      var keys = type$.nullable_List_dynamic._as(this._data);
      if (keys == null)
        keys = this._data = A._setArrayType(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _process$1(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = A._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  A._JsonMapKeyIterable.prototype = {
    get$length(_) {
      var t1 = this._convert$_parent;
      return t1.get$length(t1);
    },
    elementAt$1(_, index) {
      var t1 = this._convert$_parent;
      if (t1._processed == null)
        t1 = t1.get$keys().elementAt$1(0, index);
      else {
        t1 = t1._convert$_computeKeys$0();
        if (!(index >= 0 && index < t1.length))
          return A.ioore(t1, index);
        t1 = t1[index];
      }
      return t1;
    },
    get$iterator(_) {
      var t1 = this._convert$_parent;
      if (t1._processed == null) {
        t1 = t1.get$keys();
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._convert$_computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    }
  };
  A.Utf8Decoder__decoder_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: true});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 26
  };
  A.Utf8Decoder__decoderNonfatal_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: false});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 26
  };
  A.AsciiCodec.prototype = {
    encode$1(source) {
      return B.AsciiEncoder_127.convert$1(source);
    },
    get$encoder() {
      return B.AsciiEncoder_127;
    }
  };
  A._UnicodeSubsetEncoder.prototype = {
    convert$1(string) {
      var $length, result, t1, i, codeUnit;
      A._asString(string);
      $length = A.RangeError_checkValidRange(0, null, string.length) - 0;
      result = new Uint8Array($length);
      for (t1 = ~this._subsetMask, i = 0; i < $length; ++i) {
        codeUnit = B.JSString_methods._codeUnitAt$1(string, i);
        if ((codeUnit & t1) !== 0)
          throw A.wrapException(A.ArgumentError$value(string, "string", "Contains invalid characters."));
        if (!(i < $length))
          return A.ioore(result, i);
        result[i] = codeUnit;
      }
      return result;
    }
  };
  A.AsciiEncoder.prototype = {};
  A.Base64Codec.prototype = {
    get$encoder() {
      return this._encoder;
    },
    normalize$3(source, start, end) {
      var inverseAlphabet, t1, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, digit2, char0, value, t2, t3, endLength, $length,
        _s31_ = "Invalid base64 encoding length ";
      end = A.RangeError_checkValidRange(start, end, source.length);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (t1 = inverseAlphabet.length, i = start, sliceStart = i, buffer = null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        char = B.JSString_methods._codeUnitAt$1(source, i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            digit1 = A.hexDigitValue(B.JSString_methods._codeUnitAt$1(source, i0));
            digit2 = A.hexDigitValue(B.JSString_methods._codeUnitAt$1(source, i0 + 1));
            char0 = digit1 * 16 + digit2 - (digit2 & 256);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          if (!(char0 >= 0 && char0 < t1))
            return A.ioore(inverseAlphabet, char0);
          value = inverseAlphabet[char0];
          if (value >= 0) {
            char0 = B.JSString_methods.codeUnitAt$1(string$.ABCDEF, value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t2 = buffer == null ? null : buffer._contents.length;
                if (t2 == null)
                  t2 = 0;
                firstPadding = t2 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t2 = buffer;
            } else
              t2 = buffer;
            t3 = t2._contents += B.JSString_methods.substring$2(source, sliceStart, i);
            t2._contents = t3 + A.Primitives_stringFromCharCode(char);
            sliceStart = i0;
            continue;
          }
        }
        throw A.wrapException(A.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = buffer._contents += B.JSString_methods.substring$2(source, sliceStart, end);
        t2 = t1.length;
        if (firstPadding >= 0)
          A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = B.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw A.wrapException(A.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return B.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = B.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw A.wrapException(A.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = B.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  A.Base64Encoder.prototype = {
    convert$1(input) {
      var t1, t2;
      type$.List_int._as(input);
      t1 = J.getInterceptor$asx(input);
      if (t1.get$isEmpty(input))
        return "";
      t2 = this._urlSafe ? "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_" : string$.ABCDEF;
      t1 = new A._Base64Encoder(t2).encode$4(input, 0, t1.get$length(input), true);
      t1.toString;
      return A.String_String$fromCharCodes(t1, 0, null);
    }
  };
  A._Base64Encoder.prototype = {
    encode$4(bytes, start, end, isLast) {
      var t1, byteCount, fullChunks, bufferLength, output;
      type$.List_int._as(bytes);
      t1 = this._convert$_state;
      byteCount = (t1 & 3) + (end - start);
      fullChunks = B.JSInt_methods._tdivFast$1(byteCount, 3);
      bufferLength = fullChunks * 4;
      if (byteCount - fullChunks * 3 > 0)
        bufferLength += 4;
      output = new Uint8Array(bufferLength);
      this._convert$_state = A._Base64Encoder_encodeChunk(this._alphabet, bytes, start, end, true, output, 0, t1);
      if (bufferLength > 0)
        return output;
      return null;
    }
  };
  A.Base64Decoder.prototype = {
    convert$1(input) {
      var end, decoder, t1, t2;
      A._asString(input);
      end = A.RangeError_checkValidRange(0, null, input.length);
      if (0 === end)
        return new Uint8Array(0);
      decoder = new A._Base64Decoder();
      t1 = decoder.decode$3(0, input, 0, end);
      t1.toString;
      t2 = decoder._convert$_state;
      if (t2 < -1)
        A.throwExpression(A.FormatException$("Missing padding character", input, end));
      if (t2 > 0)
        A.throwExpression(A.FormatException$("Invalid length, must be multiple of four", input, end));
      decoder._convert$_state = -1;
      return t1;
    }
  };
  A._Base64Decoder.prototype = {
    decode$3(_, input, start, end) {
      var buffer, _this = this,
        t1 = _this._convert$_state;
      if (t1 < 0) {
        _this._convert$_state = A._Base64Decoder__checkPadding(input, start, end, t1);
        return null;
      }
      if (start === end)
        return new Uint8Array(0);
      buffer = A._Base64Decoder__allocateBuffer(input, start, end, t1);
      _this._convert$_state = A._Base64Decoder_decodeChunk(input, start, end, buffer, 0, _this._convert$_state);
      return buffer;
    }
  };
  A.ByteConversionSink.prototype = {};
  A.ByteConversionSinkBase.prototype = {};
  A._ByteCallbackSink.prototype = {
    add$1(_, chunk) {
      var t1, t2, t3, v, grown, _this = this;
      type$.Iterable_int._as(chunk);
      t1 = _this._convert$_buffer;
      t2 = _this._bufferIndex;
      t3 = J.getInterceptor$asx(chunk);
      if (t3.get$length(chunk) > t1.length - t2) {
        t1 = _this._convert$_buffer;
        v = t3.get$length(chunk) + t1.length - 1;
        v |= B.JSInt_methods._shrOtherPositive$1(v, 1);
        v |= v >>> 2;
        v |= v >>> 4;
        v |= v >>> 8;
        grown = new Uint8Array((((v | v >>> 16) >>> 0) + 1) * 2);
        t1 = _this._convert$_buffer;
        B.NativeUint8List_methods.setRange$3(grown, 0, t1.length, t1);
        _this.set$_convert$_buffer(grown);
      }
      t1 = _this._convert$_buffer;
      t2 = _this._bufferIndex;
      B.NativeUint8List_methods.setRange$3(t1, t2, t2 + t3.get$length(chunk), chunk);
      _this._bufferIndex = _this._bufferIndex + t3.get$length(chunk);
    },
    close$0(_) {
      this._callback.call$1(B.NativeUint8List_methods.sublist$2(this._convert$_buffer, 0, this._bufferIndex));
    },
    set$_convert$_buffer(_buffer) {
      this._convert$_buffer = type$.List_int._as(_buffer);
    }
  };
  A.ChunkedConversionSink.prototype = {};
  A.Codec.prototype = {
    encode$1(input) {
      A._instanceType(this)._eval$1("Codec.S")._as(input);
      return this.get$encoder().convert$1(input);
    }
  };
  A._FusedCodec.prototype = {
    get$encoder() {
      return this._convert$_first.get$encoder().fuse$1$1(this._second._encoder, this.$ti._rest[2]);
    }
  };
  A.Converter.prototype = {
    fuse$1$1(other, TT) {
      var t1 = A._instanceType(this);
      return new A._FusedConverter(this, t1._bind$1(TT)._eval$1("Converter<Converter.T,1>")._as(other), t1._eval$1("@<Converter.S>")._bind$1(t1._eval$1("Converter.T"))._bind$1(TT)._eval$1("_FusedConverter<1,2,3>"));
    },
    cast$2$0(_, RS, RT) {
      var t1 = A._instanceType(this);
      return new A.CastConverter(this, t1._eval$1("@<Converter.S>")._bind$1(t1._eval$1("Converter.T"))._bind$1(RS)._bind$1(RT)._eval$1("CastConverter<1,2,3,4>"));
    }
  };
  A._FusedConverter.prototype = {
    convert$1(input) {
      return this._second.convert$1(this._convert$_first.convert$1(this.$ti._precomputed1._as(input)));
    }
  };
  A.Encoding.prototype = {};
  A.JsonUnsupportedObjectError.prototype = {
    toString$0(_) {
      var safeString = A.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  A.JsonCyclicError.prototype = {
    toString$0(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  A.JsonCodec.prototype = {
    decode$2$reviver(_, source, reviver) {
      var t1;
      type$.nullable_nullable_Object_Function_2_nullable_Object_and_nullable_Object._as(reviver);
      t1 = A._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    decode$1($receiver, source) {
      return this.decode$2$reviver($receiver, source, null);
    },
    get$encoder() {
      return B.JsonEncoder_null;
    },
    get$decoder() {
      return B.JsonDecoder_null;
    }
  };
  A.JsonEncoder.prototype = {
    convert$1(object) {
      var t1,
        output = new A.StringBuffer(""),
        stringifier = A._JsonStringStringifier$(output, this._toEncodable);
      stringifier.writeObject$1(object);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    fuse$1$1(other, $T) {
      $T._eval$1("Converter<String,0>")._as(other);
      return this.super$Converter$fuse(other, $T);
    }
  };
  A.JsonDecoder.prototype = {
    convert$1(input) {
      return A._parseJson(A._asString(input), this._reviver);
    }
  };
  A._JsonStringifier.prototype = {
    writeStringContent$1(s) {
      var offset, i, charCode, t1, t2, _this = this,
        $length = s.length;
      for (offset = 0, i = 0; i < $length; ++i) {
        charCode = B.JSString_methods._codeUnitAt$1(s, i);
        if (charCode > 92) {
          if (charCode >= 55296) {
            t1 = charCode & 64512;
            if (t1 === 55296) {
              t2 = i + 1;
              t2 = !(t2 < $length && (B.JSString_methods._codeUnitAt$1(s, t2) & 64512) === 56320);
            } else
              t2 = false;
            if (!t2)
              if (t1 === 56320) {
                t1 = i - 1;
                t1 = !(t1 >= 0 && (B.JSString_methods.codeUnitAt$1(s, t1) & 64512) === 55296);
              } else
                t1 = false;
            else
              t1 = true;
            if (t1) {
              if (i > offset)
                _this.writeStringSlice$3(s, offset, i);
              offset = i + 1;
              _this.writeCharCode$1(92);
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(100);
              t1 = charCode >>> 8 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
            }
          }
          continue;
        }
        if (charCode < 32) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          switch (charCode) {
            case 8:
              _this.writeCharCode$1(98);
              break;
            case 9:
              _this.writeCharCode$1(116);
              break;
            case 10:
              _this.writeCharCode$1(110);
              break;
            case 12:
              _this.writeCharCode$1(102);
              break;
            case 13:
              _this.writeCharCode$1(114);
              break;
            default:
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(48);
              _this.writeCharCode$1(48);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          _this.writeCharCode$1(charCode);
        }
      }
      if (offset === 0)
        _this.writeString$1(s);
      else if (offset < $length)
        _this.writeStringSlice$3(s, offset, $length);
    },
    _checkCycle$1(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw A.wrapException(new A.JsonCyclicError(object, null));
      }
      B.JSArray_methods.add$1(t1, object);
    },
    writeObject$1(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = A.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw A.wrapException(t1);
        }
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw A.wrapException(t1);
      }
    },
    writeJsonValue$1(object) {
      var t1, success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this.writeNumber$1(object);
        return true;
      } else if (object === true) {
        _this.writeString$1("true");
        return true;
      } else if (object === false) {
        _this.writeString$1("false");
        return true;
      } else if (object == null) {
        _this.writeString$1("null");
        return true;
      } else if (typeof object == "string") {
        _this.writeString$1('"');
        _this.writeStringContent$1(object);
        _this.writeString$1('"');
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return success;
      } else
        return false;
    },
    writeList$1(list) {
      var t1, i, _this = this;
      _this.writeString$1("[");
      t1 = J.getInterceptor$asx(list);
      if (t1.get$isNotEmpty(list)) {
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",");
          _this.writeObject$1(t1.$index(list, i));
        }
      }
      _this.writeString$1("]");
    },
    writeMap$1(map) {
      var t1, keyValueList, i, separator, t2, _this = this, _box_0 = {};
      if (map.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t1 = map.get$length(map) * 2;
      keyValueList = A.List_List$filled(t1, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      map.forEach$1(0, new A._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{");
      for (separator = '"'; i < t1; i += 2, separator = ',"') {
        _this.writeString$1(separator);
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('":');
        t2 = i + 1;
        if (!(t2 < t1))
          return A.ioore(keyValueList, t2);
        _this.writeObject$1(keyValueList[t2]);
      }
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonStringifier_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      B.JSArray_methods.$indexSet(t1, t2.i++, key);
      B.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 13
  };
  A._JsonStringStringifier.prototype = {
    get$_partialResult() {
      var t1 = this._sink._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    writeNumber$1(number) {
      this._sink._contents += B.JSNumber_methods.toString$0(number);
    },
    writeString$1(string) {
      this._sink._contents += string;
    },
    writeStringSlice$3(string, start, end) {
      this._sink._contents += B.JSString_methods.substring$2(string, start, end);
    },
    writeCharCode$1(charCode) {
      this._sink._contents += A.Primitives_stringFromCharCode(charCode);
    }
  };
  A.Utf8Codec.prototype = {
    decode$1(_, codeUnits) {
      type$.List_int._as(codeUnits);
      return B.Utf8Decoder_false.convert$1(codeUnits);
    },
    get$encoder() {
      return B.C_Utf8Encoder;
    }
  };
  A.Utf8Encoder.prototype = {
    convert$1(string) {
      var end, $length, t1, encoder;
      A._asString(string);
      end = A.RangeError_checkValidRange(0, null, string.length);
      $length = end - 0;
      if ($length === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array($length * 3);
      encoder = new A._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end) {
        B.JSString_methods.codeUnitAt$1(string, end - 1);
        encoder._writeReplacementCharacter$0();
      }
      return B.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
    }
  };
  A._Utf8Encoder.prototype = {
    _writeReplacementCharacter$0() {
      var _this = this,
        t1 = _this._convert$_buffer,
        t2 = _this._bufferIndex,
        t3 = _this._bufferIndex = t2 + 1,
        t4 = t1.length;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 239;
      t2 = _this._bufferIndex = t3 + 1;
      if (!(t3 < t4))
        return A.ioore(t1, t3);
      t1[t3] = 191;
      _this._bufferIndex = t2 + 1;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 189;
    },
    _writeSurrogate$2(leadingSurrogate, nextCodeUnit) {
      var rune, t1, t2, t3, t4, _this = this;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        t1 = _this._convert$_buffer;
        t2 = _this._bufferIndex;
        t3 = _this._bufferIndex = t2 + 1;
        t4 = t1.length;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 18 | 240;
        t2 = _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune >>> 12 & 63 | 128;
        t3 = _this._bufferIndex = t2 + 1;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 6 & 63 | 128;
        _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune & 63 | 128;
        return true;
      } else {
        _this._writeReplacementCharacter$0();
        return false;
      }
    },
    _fillBuffer$3(str, start, end) {
      var t1, t2, stringIndex, codeUnit, t3, stringIndex0, t4, _this = this;
      if (start !== end && (B.JSString_methods.codeUnitAt$1(str, end - 1) & 64512) === 55296)
        --end;
      for (t1 = _this._convert$_buffer, t2 = t1.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        codeUnit = B.JSString_methods._codeUnitAt$1(str, stringIndex);
        if (codeUnit <= 127) {
          t3 = _this._bufferIndex;
          if (t3 >= t2)
            break;
          _this._bufferIndex = t3 + 1;
          t1[t3] = codeUnit;
        } else {
          t3 = codeUnit & 64512;
          if (t3 === 55296) {
            if (_this._bufferIndex + 4 > t2)
              break;
            stringIndex0 = stringIndex + 1;
            if (_this._writeSurrogate$2(codeUnit, B.JSString_methods._codeUnitAt$1(str, stringIndex0)))
              stringIndex = stringIndex0;
          } else if (t3 === 56320) {
            if (_this._bufferIndex + 3 > t2)
              break;
            _this._writeReplacementCharacter$0();
          } else if (codeUnit <= 2047) {
            t3 = _this._bufferIndex;
            t4 = t3 + 1;
            if (t4 >= t2)
              break;
            _this._bufferIndex = t4;
            if (!(t3 < t2))
              return A.ioore(t1, t3);
            t1[t3] = codeUnit >>> 6 | 192;
            _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit & 63 | 128;
          } else {
            t3 = _this._bufferIndex;
            if (t3 + 2 >= t2)
              break;
            t4 = _this._bufferIndex = t3 + 1;
            if (!(t3 < t2))
              return A.ioore(t1, t3);
            t1[t3] = codeUnit >>> 12 | 224;
            t3 = _this._bufferIndex = t4 + 1;
            if (!(t4 < t2))
              return A.ioore(t1, t4);
            t1[t4] = codeUnit >>> 6 & 63 | 128;
            _this._bufferIndex = t3 + 1;
            if (!(t3 < t2))
              return A.ioore(t1, t3);
            t1[t3] = codeUnit & 63 | 128;
          }
        }
      }
      return stringIndex;
    }
  };
  A.Utf8Decoder.prototype = {
    fuse$1$1(next, $T) {
      return this.super$Converter$fuse($T._eval$1("Converter<String,0>")._as(next), $T);
    },
    convert$1(codeUnits) {
      var t1, result;
      type$.List_int._as(codeUnits);
      t1 = this._allowMalformed;
      result = A.Utf8Decoder__convertIntercepted(t1, codeUnits, 0, null);
      if (result != null)
        return result;
      return new A._Utf8Decoder(t1).convertGeneral$4(codeUnits, 0, null, true);
    }
  };
  A._Utf8Decoder.prototype = {
    convertGeneral$4(codeUnits, start, maybeEnd, single) {
      var end, bytes, errorOffset, result, t1, message, _this = this;
      type$.List_int._as(codeUnits);
      end = A.RangeError_checkValidRange(start, maybeEnd, J.get$length$asx(codeUnits));
      if (start === end)
        return "";
      if (type$.Uint8List._is(codeUnits)) {
        bytes = codeUnits;
        errorOffset = 0;
      } else {
        bytes = A._Utf8Decoder__makeUint8List(codeUnits, start, end);
        end -= start;
        errorOffset = start;
        start = 0;
      }
      result = _this._convertRecursive$4(bytes, start, end, true);
      t1 = _this._convert$_state;
      if ((t1 & 1) !== 0) {
        message = A._Utf8Decoder_errorDescription(t1);
        _this._convert$_state = 0;
        throw A.wrapException(A.FormatException$(message, codeUnits, errorOffset + _this._charOrIndex));
      }
      return result;
    },
    _convertRecursive$4(bytes, start, end, single) {
      var mid, s1, _this = this;
      if (end - start > 1000) {
        mid = B.JSInt_methods._tdivFast$1(start + end, 2);
        s1 = _this._convertRecursive$4(bytes, start, mid, false);
        if ((_this._convert$_state & 1) !== 0)
          return s1;
        return s1 + _this._convertRecursive$4(bytes, mid, end, single);
      }
      return _this.decodeGeneral$4(bytes, start, end, single);
    },
    decodeGeneral$4(bytes, start, end, single) {
      var byte, t2, type, t3, i0, markEnd, i1, m, _this = this, _65533 = 65533,
        state = _this._convert$_state,
        char = _this._charOrIndex,
        buffer = new A.StringBuffer(""),
        i = start + 1,
        t1 = bytes.length;
      if (!(start >= 0 && start < t1))
        return A.ioore(bytes, start);
      byte = bytes[start];
      $label0$0:
        for (t2 = _this.allowMalformed; true;) {
          for (; true; i = i0) {
            type = B.JSString_methods._codeUnitAt$1("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE", byte) & 31;
            char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;
            state = B.JSString_methods._codeUnitAt$1(" \x000:XECCCCCN:lDb \x000:XECCCCCNvlDb \x000:XECCCCCN:lDb AAAAA\x00\x00\x00\x00\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\x800AAAAA\x00\x00\x00\x00 AAAAA", state + type);
            if (state === 0) {
              buffer._contents += A.Primitives_stringFromCharCode(char);
              if (i === end)
                break $label0$0;
              break;
            } else if ((state & 1) !== 0) {
              if (t2)
                switch (state) {
                  case 69:
                  case 67:
                    buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    break;
                  case 65:
                    buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    --i;
                    break;
                  default:
                    t3 = buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    buffer._contents = t3 + A.Primitives_stringFromCharCode(_65533);
                    break;
                }
              else {
                _this._convert$_state = state;
                _this._charOrIndex = i - 1;
                return "";
              }
              state = 0;
            }
            if (i === end)
              break $label0$0;
            i0 = i + 1;
            if (!(i >= 0 && i < t1))
              return A.ioore(bytes, i);
            byte = bytes[i];
          }
          i0 = i + 1;
          if (!(i >= 0 && i < t1))
            return A.ioore(bytes, i);
          byte = bytes[i];
          if (byte < 128) {
            while (true) {
              if (!(i0 < end)) {
                markEnd = end;
                break;
              }
              i1 = i0 + 1;
              if (!(i0 >= 0 && i0 < t1))
                return A.ioore(bytes, i0);
              byte = bytes[i0];
              if (byte >= 128) {
                markEnd = i1 - 1;
                i0 = i1;
                break;
              }
              i0 = i1;
            }
            if (markEnd - i < 20)
              for (m = i; m < markEnd; ++m) {
                if (!(m < t1))
                  return A.ioore(bytes, m);
                buffer._contents += A.Primitives_stringFromCharCode(bytes[m]);
              }
            else
              buffer._contents += A.String_String$fromCharCodes(bytes, i, markEnd);
            if (markEnd === end)
              break $label0$0;
            i = i0;
          } else
            i = i0;
        }
      if (single && state > 32)
        if (t2)
          buffer._contents += A.Primitives_stringFromCharCode(_65533);
        else {
          _this._convert$_state = 77;
          _this._charOrIndex = end;
          return "";
        }
      _this._convert$_state = state;
      _this._charOrIndex = char;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.DateTime.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DateTime && this._core$_value === other._core$_value && true;
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._core$_value, type$.DateTime._as(other)._core$_value);
    },
    get$hashCode(_) {
      var t1 = this._core$_value;
      return (t1 ^ B.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
    },
    toString$0(_) {
      var _this = this,
        y = A.DateTime__fourDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this));
      return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
    },
    $isComparable: 1
  };
  A.Duration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Duration && true;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(0);
    },
    compareTo$1(_, other) {
      type$.Duration._as(other);
      return 0;
    },
    toString$0(_) {
      return "" + Math.abs(0) + ":00:00." + B.JSString_methods.padLeft$2(B.JSInt_methods.toString$0(0), 6, "0");
    },
    $isComparable: 1
  };
  A._Enum.prototype = {
    toString$0(_) {
      return this._enumToString$0();
    }
  };
  A.Error.prototype = {
    get$stackTrace() {
      return A.getTraceFromException(this.$thrownJsError);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  A.TypeError.prototype = {};
  A.NullThrownError.prototype = {
    toString$0(_) {
      return "Throw of null.";
    },
    $isTypeError: 1
  };
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + A.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.get$invalidValue());
    },
    get$invalidValue() {
      return this.invalidValue;
    }
  };
  A.RangeError.prototype = {
    get$invalidValue() {
      return A._asNumQ(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$invalidValue() {
      return A._asInt(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (A._asInt(this.invalidValue) < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      var message = this.message;
      return message != null ? "UnimplementedError: " + message : "UnimplementedError";
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.CyclicInitializationError.prototype = {
    toString$0(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }
  };
  A._Exception.prototype = {
    toString$0(_) {
      return "Exception: " + this.message;
    },
    $isException: 1
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var t1, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = B.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = B.JSString_methods._codeUnitAt$1(source, i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = source.length;
        for (i = offset; i < lineEnd; ++i) {
          char = B.JSString_methods.codeUnitAt$1(source, i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
    },
    $isException: 1,
    get$message(receiver) {
      return this.message;
    }
  };
  A.Iterable.prototype = {
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(this, t1._bind$1($T)._eval$1("1(Iterable.E)")._as(toElement), t1._eval$1("Iterable.E"), $T);
    },
    where$1(_, test) {
      var t1 = A._instanceType(this);
      return new A.WhereIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("WhereIterable<Iterable.E>"));
    },
    forEach$1(_, action) {
      var t1;
      A._instanceType(this)._eval$1("~(Iterable.E)")._as(action);
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        action.call$1(t1.get$current());
    },
    fold$1$2(_, initialValue, combine, $T) {
      var t1, value;
      $T._as(initialValue);
      A._instanceType(this)._bind$1($T)._eval$1("1(1,Iterable.E)")._as(combine);
      for (t1 = this.get$iterator(this), value = initialValue; t1.moveNext$0();)
        value = combine.call$2(value, t1.get$current());
      return value;
    },
    join$1(_, separator) {
      var t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      if (separator === "") {
        t1 = "";
        do
          t1 += J.toString$0$(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        t1 = "" + J.toString$0$(iterator.get$current());
        for (; iterator.moveNext$0();)
          t1 = t1 + separator + J.toString$0$(iterator.get$current());
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, growable, A._instanceType(this)._eval$1("Iterable.E"));
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty(_) {
      return !this.get$isEmpty(this);
    },
    skip$1(_, count) {
      return A.SkipIterable_SkipIterable(this, count, A._instanceType(this)._eval$1("Iterable.E"));
    },
    skipWhile$1(_, test) {
      var t1 = A._instanceType(this);
      return new A.SkipWhileIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("SkipWhileIterable<Iterable.E>"));
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current();
    },
    get$last(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      do
        result = it.get$current();
      while (it.moveNext$0());
      return result;
    },
    elementAt$1(_, index) {
      var t1, elementIndex, element;
      A.RangeError_checkNotNegative(index, "index");
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current();
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw A.wrapException(A.IndexError$withLength(index, elementIndex, this, null, "index"));
    },
    toString$0(_) {
      return A.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  A.Iterator.prototype = {};
  A.MapEntry.prototype = {
    toString$0(_) {
      return "MapEntry(" + A.S(this.key) + ": " + A.S(this.value) + ")";
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    get$runtimeType(_) {
      return A.getRuntimeType(this);
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return this._stackTrace;
    },
    $isStackTrace: 1
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isStringSink: 1
  };
  A.Uri__parseIPv4Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    },
    $signature: 47
  };
  A.Uri_parseIPv6Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    $signature: 49
  };
  A.Uri_parseIPv6Address_parseHex.prototype = {
    call$2(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = A.int_parse(B.JSString_methods.substring$2(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 62
  };
  A._Uri.prototype = {
    get$_text() {
      var t1, t2, t3, t4, _this = this,
        value = _this.___Uri__text_FI;
      if (value === $) {
        t1 = _this.scheme;
        t2 = t1.length !== 0 ? "" + t1 + ":" : "";
        t3 = _this._host;
        t4 = t3 == null;
        if (!t4 || t1 === "file") {
          t1 = t2 + "//";
          t2 = _this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += t3;
          t2 = _this._port;
          if (t2 != null)
            t1 = t1 + ":" + A.S(t2);
        } else
          t1 = t2;
        t1 += _this.path;
        t2 = _this._query;
        if (t2 != null)
          t1 = t1 + "?" + t2;
        t2 = _this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + t2;
        value !== $ && A.throwLateFieldADI("_text");
        value = _this.___Uri__text_FI = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return value;
    },
    get$pathSegments() {
      var pathToSplit, result, _this = this,
        value = _this.___Uri_pathSegments_FI;
      if (value === $) {
        pathToSplit = _this.path;
        if (pathToSplit.length !== 0 && B.JSString_methods._codeUnitAt$1(pathToSplit, 0) === 47)
          pathToSplit = B.JSString_methods.substring$1(pathToSplit, 1);
        result = pathToSplit.length === 0 ? B.List_empty0 : A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(pathToSplit.split("/"), type$.JSArray_String), type$.dynamic_Function_String._as(A.core_Uri_decodeComponent$closure()), type$.MappedListIterable_String_dynamic), type$.String);
        _this.___Uri_pathSegments_FI !== $ && A.throwLateFieldADI("pathSegments");
        _this.set$___Uri_pathSegments_FI(result);
        value = result;
      }
      return value;
    },
    get$hashCode(_) {
      var result, _this = this,
        value = _this.___Uri_hashCode_FI;
      if (value === $) {
        result = B.JSString_methods.get$hashCode(_this.get$_text());
        _this.___Uri_hashCode_FI !== $ && A.throwLateFieldADI("hashCode");
        _this.___Uri_hashCode_FI = result;
        value = result;
      }
      return value;
    },
    get$userInfo() {
      return this._userInfo;
    },
    get$host(_) {
      var host = this._host;
      if (host == null)
        return "";
      if (B.JSString_methods.startsWith$1(host, "["))
        return B.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port(_) {
      var t1 = this._port;
      return t1 == null ? A._Uri__defaultPort(this.scheme) : t1;
    },
    get$query() {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    isScheme$1(scheme) {
      var thisScheme = this.scheme;
      if (scheme.length !== thisScheme.length)
        return false;
      return A._caseInsensitiveCompareStart(scheme, thisScheme, 0) >= 0;
    },
    _mergePaths$2(base, reference) {
      var backCount, refStart, baseEnd, newEnd, delta, t1;
      for (backCount = 0, refStart = 0; B.JSString_methods.startsWith$2(reference, "../", refStart);) {
        refStart += 3;
        ++backCount;
      }
      baseEnd = B.JSString_methods.lastIndexOf$1(base, "/");
      while (true) {
        if (!(baseEnd > 0 && backCount > 0))
          break;
        newEnd = B.JSString_methods.lastIndexOf$2(base, "/", baseEnd - 1);
        if (newEnd < 0)
          break;
        delta = baseEnd - newEnd;
        t1 = delta !== 2;
        if (!t1 || delta === 3)
          if (B.JSString_methods.codeUnitAt$1(base, newEnd + 1) === 46)
            t1 = !t1 || B.JSString_methods.codeUnitAt$1(base, newEnd + 2) === 46;
          else
            t1 = false;
        else
          t1 = false;
        if (t1)
          break;
        --backCount;
        baseEnd = newEnd;
      }
      return B.JSString_methods.replaceRange$3(base, baseEnd + 1, null, B.JSString_methods.substring$1(reference, refStart - 3 * backCount));
    },
    resolve$1(reference) {
      return this.resolveUri$1(A.Uri_parse(reference));
    },
    resolveUri$1(reference) {
      var targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, packageNameEnd, packageName, mergedPath, t1, _this = this, _null = null;
      if (reference.get$scheme().length !== 0) {
        targetScheme = reference.get$scheme();
        if (reference.get$hasAuthority()) {
          targetUserInfo = reference.get$userInfo();
          targetHost = reference.get$host(reference);
          targetPort = reference.get$hasPort() ? reference.get$port(reference) : _null;
        } else {
          targetPort = _null;
          targetHost = targetPort;
          targetUserInfo = "";
        }
        targetPath = A._Uri__removeDotSegments(reference.get$path(reference));
        targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;
      } else {
        targetScheme = _this.scheme;
        if (reference.get$hasAuthority()) {
          targetUserInfo = reference.get$userInfo();
          targetHost = reference.get$host(reference);
          targetPort = A._Uri__makePort(reference.get$hasPort() ? reference.get$port(reference) : _null, targetScheme);
          targetPath = A._Uri__removeDotSegments(reference.get$path(reference));
          targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;
        } else {
          targetUserInfo = _this._userInfo;
          targetHost = _this._host;
          targetPort = _this._port;
          targetPath = _this.path;
          if (reference.get$path(reference) === "")
            targetQuery = reference.get$hasQuery() ? reference.get$query() : _this._query;
          else {
            packageNameEnd = A._Uri__packageNameEnd(_this, targetPath);
            if (packageNameEnd > 0) {
              packageName = B.JSString_methods.substring$2(targetPath, 0, packageNameEnd);
              targetPath = reference.get$hasAbsolutePath() ? packageName + A._Uri__removeDotSegments(reference.get$path(reference)) : packageName + A._Uri__removeDotSegments(_this._mergePaths$2(B.JSString_methods.substring$1(targetPath, packageName.length), reference.get$path(reference)));
            } else if (reference.get$hasAbsolutePath())
              targetPath = A._Uri__removeDotSegments(reference.get$path(reference));
            else if (targetPath.length === 0)
              if (targetHost == null)
                targetPath = targetScheme.length === 0 ? reference.get$path(reference) : A._Uri__removeDotSegments(reference.get$path(reference));
              else
                targetPath = A._Uri__removeDotSegments("/" + reference.get$path(reference));
            else {
              mergedPath = _this._mergePaths$2(targetPath, reference.get$path(reference));
              t1 = targetScheme.length === 0;
              if (!t1 || targetHost != null || B.JSString_methods.startsWith$1(targetPath, "/"))
                targetPath = A._Uri__removeDotSegments(mergedPath);
              else
                targetPath = A._Uri__normalizeRelativePath(mergedPath, !t1 || targetHost != null);
            }
            targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;
          }
        }
      }
      return A._Uri$_internal(targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, reference.get$hasFragment() ? reference.get$fragment() : _null);
    },
    get$hasAuthority() {
      return this._host != null;
    },
    get$hasPort() {
      return this._port != null;
    },
    get$hasQuery() {
      return this._query != null;
    },
    get$hasFragment() {
      return this._fragment != null;
    },
    get$hasAbsolutePath() {
      return B.JSString_methods.startsWith$1(this.path, "/");
    },
    toFilePath$0() {
      var pathSegments, _this = this,
        t1 = _this.scheme;
      if (t1 !== "" && t1 !== "file")
        throw A.wrapException(A.UnsupportedError$("Cannot extract a file path from a " + t1 + " URI"));
      t1 = _this._query;
      if ((t1 == null ? "" : t1) !== "")
        throw A.wrapException(A.UnsupportedError$(string$.Cannotfq));
      t1 = _this._fragment;
      if ((t1 == null ? "" : t1) !== "")
        throw A.wrapException(A.UnsupportedError$(string$.Cannotff));
      t1 = $.$get$_Uri__isWindowsCached();
      if (A.boolConversionCheck(t1))
        t1 = A._Uri__toWindowsFilePath(_this);
      else {
        if (_this._host != null && _this.get$host(_this) !== "")
          A.throwExpression(A.UnsupportedError$(string$.Cannotn));
        pathSegments = _this.get$pathSegments();
        A._Uri__checkNonWindowsPathReservedCharacters(pathSegments, false);
        t1 = A.StringBuffer__writeAll(B.JSString_methods.startsWith$1(_this.path, "/") ? "" + "/" : "", pathSegments, "/");
        t1 = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return t1;
    },
    toString$0(_) {
      return this.get$_text();
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (type$.Uri._is(other))
        if (_this.scheme === other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo === other.get$userInfo())
              if (_this.get$host(_this) === other.get$host(other))
                if (_this.get$port(_this) === other.get$port(other))
                  if (_this.path === other.get$path(other)) {
                    t1 = _this._query;
                    t2 = t1 == null;
                    if (!t2 === other.get$hasQuery()) {
                      if (t2)
                        t1 = "";
                      if (t1 === other.get$query()) {
                        t1 = _this._fragment;
                        t2 = t1 == null;
                        if (!t2 === other.get$hasFragment()) {
                          if (t2)
                            t1 = "";
                          t1 = t1 === other.get$fragment();
                        } else
                          t1 = false;
                      } else
                        t1 = false;
                    } else
                      t1 = false;
                  } else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    set$___Uri_pathSegments_FI(___Uri_pathSegments_FI) {
      this.___Uri_pathSegments_FI = type$.List_String._as(___Uri_pathSegments_FI);
    },
    $isUri: 1,
    get$scheme() {
      return this.scheme;
    },
    get$path(receiver) {
      return this.path;
    }
  };
  A._Uri__makePath_closure.prototype = {
    call$1(s) {
      return A._Uri__uriEncode(B.List_qg40, A._asString(s), B.C_Utf8Codec, false);
    },
    $signature: 15
  };
  A.UriData.prototype = {
    get$uri() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 == null) {
        t1 = _this._separatorIndices;
        if (0 >= t1.length)
          return A.ioore(t1, 0);
        t2 = _this._text;
        t1 = t1[0] + 1;
        queryIndex = B.JSString_methods.indexOf$2(t2, "?", t1);
        end = t2.length;
        if (queryIndex >= 0) {
          query = A._Uri__normalizeOrSubstring(t2, queryIndex + 1, end, B.List_CVk, false, false);
          end = queryIndex;
        } else
          query = _null;
        t1 = _this._uriCache = new A._DataUri("data", "", _null, _null, A._Uri__normalizeOrSubstring(t2, t1, end, B.List_qg4, false, false), query, _null);
      }
      return t1;
    },
    toString$0(_) {
      var t2,
        t1 = this._separatorIndices;
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      t2 = this._text;
      return t1[0] === -1 ? "data:" + t2 : t2;
    }
  };
  A._createTables_build.prototype = {
    call$2(state, defaultTransition) {
      var t1 = this.tables;
      if (!(state < t1.length))
        return A.ioore(t1, state);
      t1 = t1[state];
      B.NativeUint8List_methods.fillRange$3(t1, 0, 96, defaultTransition);
      return t1;
    },
    $signature: 88
  };
  A._createTables_setChars.prototype = {
    call$3(target, chars, transition) {
      var t1, i, t2;
      for (t1 = chars.length, i = 0; i < t1; ++i) {
        t2 = B.JSString_methods._codeUnitAt$1(chars, i) ^ 96;
        if (!(t2 < 96))
          return A.ioore(target, t2);
        target[t2] = transition;
      }
    },
    $signature: 23
  };
  A._createTables_setRange.prototype = {
    call$3(target, range, transition) {
      var i, n, t1;
      for (i = B.JSString_methods._codeUnitAt$1(range, 0), n = B.JSString_methods._codeUnitAt$1(range, 1); i <= n; ++i) {
        t1 = (i ^ 96) >>> 0;
        if (!(t1 < 96))
          return A.ioore(target, t1);
        target[t1] = transition;
      }
    },
    $signature: 23
  };
  A._SimpleUri.prototype = {
    get$hasAuthority() {
      return this._hostStart > 0;
    },
    get$hasPort() {
      return this._hostStart > 0 && this._portStart + 1 < this._pathStart;
    },
    get$hasQuery() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment() {
      return this._fragmentStart < this._uri.length;
    },
    get$hasAbsolutePath() {
      return B.JSString_methods.startsWith$2(this._uri, "/", this._pathStart);
    },
    get$scheme() {
      var t1 = this._schemeCache;
      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;
    },
    _computeScheme$0() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = t1 === 4;
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return "http";
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return "https";
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "file"))
        return "file";
      if (t1 === 7 && B.JSString_methods.startsWith$1(_this._uri, "package"))
        return "package";
      return B.JSString_methods.substring$2(_this._uri, 0, t1);
    },
    get$userInfo() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? B.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host(_) {
      var t1 = this._hostStart;
      return t1 > 0 ? B.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port(_) {
      var t1, _this = this;
      if (_this.get$hasPort())
        return A.int_parse(B.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);
      t1 = _this._schemeEnd;
      if (t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return 80;
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return 443;
      return 0;
    },
    get$path(_) {
      return B.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query() {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? B.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? B.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments() {
      var parts, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri;
      if (B.JSString_methods.startsWith$2(t1, "/", start))
        ++start;
      if (start === end)
        return B.List_empty0;
      parts = A._setArrayType([], type$.JSArray_String);
      for (i = start; i < end; ++i)
        if (B.JSString_methods.codeUnitAt$1(t1, i) === 47) {
          B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(t1, start, i));
          start = i + 1;
        }
      B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(t1, start, end));
      return A.List_List$unmodifiable(parts, type$.String);
    },
    _isPort$1(port) {
      var portDigitStart = this._portStart + 1;
      return portDigitStart + port.length === this._pathStart && B.JSString_methods.startsWith$2(this._uri, port, portDigitStart);
    },
    removeFragment$0() {
      var _this = this,
        t1 = _this._fragmentStart,
        t2 = _this._uri;
      if (t1 >= t2.length)
        return _this;
      return new A._SimpleUri(B.JSString_methods.substring$2(t2, 0, t1), _this._schemeEnd, _this._hostStart, _this._portStart, _this._pathStart, _this._queryStart, t1, _this._schemeCache);
    },
    resolve$1(reference) {
      return this.resolveUri$1(A.Uri_parse(reference));
    },
    resolveUri$1(reference) {
      if (reference instanceof A._SimpleUri)
        return this._simpleMerge$2(this, reference);
      return this._toNonSimple$0().resolveUri$1(reference);
    },
    _simpleMerge$2(base, ref) {
      var t2, t3, t4, isSimple, delta, refStart, basePathStart, packageNameEnd, basePathStart0, baseStart, baseEnd, baseUri, baseStart0, backCount, refStart0, insert,
        t1 = ref._schemeEnd;
      if (t1 > 0)
        return ref;
      t2 = ref._hostStart;
      if (t2 > 0) {
        t3 = base._schemeEnd;
        if (t3 <= 0)
          return ref;
        t4 = t3 === 4;
        if (t4 && B.JSString_methods.startsWith$1(base._uri, "file"))
          isSimple = ref._pathStart !== ref._queryStart;
        else if (t4 && B.JSString_methods.startsWith$1(base._uri, "http"))
          isSimple = !ref._isPort$1("80");
        else
          isSimple = !(t3 === 5 && B.JSString_methods.startsWith$1(base._uri, "https")) || !ref._isPort$1("443");
        if (isSimple) {
          delta = t3 + 1;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, delta) + B.JSString_methods.substring$1(ref._uri, t1 + 1), t3, t2 + delta, ref._portStart + delta, ref._pathStart + delta, ref._queryStart + delta, ref._fragmentStart + delta, base._schemeCache);
        } else
          return this._toNonSimple$0().resolveUri$1(ref);
      }
      refStart = ref._pathStart;
      t1 = ref._queryStart;
      if (refStart === t1) {
        t2 = ref._fragmentStart;
        if (t1 < t2) {
          t3 = base._queryStart;
          delta = t3 - t1;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, t3) + B.JSString_methods.substring$1(ref._uri, t1), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, t1 + delta, t2 + delta, base._schemeCache);
        }
        t1 = ref._uri;
        if (t2 < t1.length) {
          t3 = base._fragmentStart;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, t3) + B.JSString_methods.substring$1(t1, t2), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, base._queryStart, t2 + (t3 - t2), base._schemeCache);
        }
        return base.removeFragment$0();
      }
      t2 = ref._uri;
      if (B.JSString_methods.startsWith$2(t2, "/", refStart)) {
        basePathStart = base._pathStart;
        packageNameEnd = A._SimpleUri__packageNameEnd(this);
        basePathStart0 = packageNameEnd > 0 ? packageNameEnd : basePathStart;
        delta = basePathStart0 - refStart;
        return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, basePathStart0) + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, basePathStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
      }
      baseStart = base._pathStart;
      baseEnd = base._queryStart;
      if (baseStart === baseEnd && base._hostStart > 0) {
        for (; B.JSString_methods.startsWith$2(t2, "../", refStart);)
          refStart += 3;
        delta = baseStart - refStart + 1;
        return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, baseStart) + "/" + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
      }
      baseUri = base._uri;
      packageNameEnd = A._SimpleUri__packageNameEnd(this);
      if (packageNameEnd >= 0)
        baseStart0 = packageNameEnd;
      else
        for (baseStart0 = baseStart; B.JSString_methods.startsWith$2(baseUri, "../", baseStart0);)
          baseStart0 += 3;
      backCount = 0;
      while (true) {
        refStart0 = refStart + 3;
        if (!(refStart0 <= t1 && B.JSString_methods.startsWith$2(t2, "../", refStart)))
          break;
        ++backCount;
        refStart = refStart0;
      }
      for (insert = ""; baseEnd > baseStart0;) {
        --baseEnd;
        if (B.JSString_methods.codeUnitAt$1(baseUri, baseEnd) === 47) {
          if (backCount === 0) {
            insert = "/";
            break;
          }
          --backCount;
          insert = "/";
        }
      }
      if (baseEnd === baseStart0 && base._schemeEnd <= 0 && !B.JSString_methods.startsWith$2(baseUri, "/", baseStart)) {
        refStart -= backCount * 3;
        insert = "";
      }
      delta = baseEnd - refStart + insert.length;
      return new A._SimpleUri(B.JSString_methods.substring$2(baseUri, 0, baseEnd) + insert + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
    },
    toFilePath$0() {
      var t2, t3, _this = this,
        t1 = _this._schemeEnd;
      if (t1 >= 0) {
        t2 = !(t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "file"));
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        throw A.wrapException(A.UnsupportedError$("Cannot extract a file path from a " + _this.get$scheme() + " URI"));
      t1 = _this._queryStart;
      t2 = _this._uri;
      if (t1 < t2.length) {
        if (t1 < _this._fragmentStart)
          throw A.wrapException(A.UnsupportedError$(string$.Cannotfq));
        throw A.wrapException(A.UnsupportedError$(string$.Cannotff));
      }
      t3 = $.$get$_Uri__isWindowsCached();
      if (A.boolConversionCheck(t3))
        t1 = A._Uri__toWindowsFilePath(_this);
      else {
        if (_this._hostStart < _this._portStart)
          A.throwExpression(A.UnsupportedError$(string$.Cannotn));
        t1 = B.JSString_methods.substring$2(t2, _this._pathStart, t1);
      }
      return t1;
    },
    get$hashCode(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = B.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    _toNonSimple$0() {
      var _this = this, _null = null,
        t1 = _this.get$scheme(),
        t2 = _this.get$userInfo(),
        t3 = _this._hostStart > 0 ? _this.get$host(_this) : _null,
        t4 = _this.get$hasPort() ? _this.get$port(_this) : _null,
        t5 = _this._uri,
        t6 = _this._queryStart,
        t7 = B.JSString_methods.substring$2(t5, _this._pathStart, t6),
        t8 = _this._fragmentStart;
      t6 = t6 < t8 ? _this.get$query() : _null;
      return A._Uri$_internal(t1, t2, t3, t4, t7, t6, t8 < t5.length ? _this.get$fragment() : _null);
    },
    toString$0(_) {
      return this._uri;
    },
    $isUri: 1
  };
  A._DataUri.prototype = {};
  A.HtmlElement.prototype = {};
  A.AnchorElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.AreaElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.CharacterData.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.Document.prototype = {$isDocument: 1};
  A.DomException.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.Element0.prototype = {
    toString$0(receiver) {
      var t1 = receiver.localName;
      t1.toString;
      return t1;
    },
    _removeAttribute$1(receiver, $name) {
      return receiver.removeAttribute($name);
    },
    $isElement0: 1
  };
  A.Event.prototype = {$isEvent: 1};
  A.Events.prototype = {};
  A.ElementEvents.prototype = {
    $index(_, type) {
      var t1 = $.$get$ElementEvents_webkitEvents();
      if (t1.containsKey$1(type.toLowerCase()))
        if ($.$get$Device_isWebKit())
          return new A._ElementEventStreamImpl(this._ptr, A._asString(t1.$index(0, type.toLowerCase())), false, type$._ElementEventStreamImpl_Event);
      return new A._ElementEventStreamImpl(this._ptr, type, false, type$._ElementEventStreamImpl_Event);
    }
  };
  A.EventTarget.prototype = {
    _addEventListener$3(receiver, type, listener, options) {
      return receiver.addEventListener(type, A.convertDartClosureToJS(type$.nullable_dynamic_Function_Event._as(listener), 1), false);
    },
    _removeEventListener$3(receiver, type, listener, options) {
      return receiver.removeEventListener(type, A.convertDartClosureToJS(type$.nullable_dynamic_Function_Event._as(listener), 1), false);
    },
    $isEventTarget: 1
  };
  A.FormElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.HtmlCollection.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.HttpRequest.prototype = {
    get$responseHeaders(receiver) {
      var _i, header, t2, splitIdx, key, value,
        t1 = type$.String,
        headers = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1),
        headersString = receiver.getAllResponseHeaders(),
        headersList = headersString.split("\r\n");
      for (t1 = headersList.length, _i = 0; _i < t1; ++_i) {
        header = headersList[_i];
        t2 = J.getInterceptor$asx(header);
        if (t2.get$length(header) === 0)
          continue;
        splitIdx = t2.indexOf$1(header, ": ");
        if (splitIdx === -1)
          continue;
        key = t2.substring$2(header, 0, splitIdx).toLowerCase();
        value = t2.substring$1(header, splitIdx + 2);
        if (headers.containsKey$1(key))
          headers.$indexSet(0, key, A.S(headers.$index(0, key)) + ", " + value);
        else
          headers.$indexSet(0, key, value);
      }
      return headers;
    },
    open$3$async(receiver, method, url, async) {
      return receiver.open(method, url, true);
    },
    set$withCredentials(receiver, value) {
      receiver.withCredentials = false;
    },
    send$1(receiver, body_OR_data) {
      return receiver.send(body_OR_data);
    },
    setRequestHeader$2(receiver, $name, value) {
      return receiver.setRequestHeader(A._asString($name), A._asString(value));
    },
    $isHttpRequest: 1
  };
  A.HttpRequestEventTarget.prototype = {};
  A.InputElement.prototype = {
    set$value(receiver, value) {
      receiver.value = value;
    },
    $isInputElement: 1
  };
  A.Location.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A._ChildNodeListLazy.prototype = {
    $indexSet(_, index, value) {
      var t1, t2;
      type$.Node._as(value);
      t1 = this._this;
      t2 = t1.childNodes;
      if (!(index >= 0 && index < t2.length))
        return A.ioore(t2, index);
      t1.replaceChild(value, t2[index]).toString;
    },
    get$iterator(_) {
      var t1 = this._this.childNodes;
      return new A.FixedSizeListIterator(t1, t1.length, A.instanceType(t1)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    get$length(_) {
      return this._this.childNodes.length;
    },
    $index(_, index) {
      var t1 = this._this.childNodes;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    }
  };
  A.Node.prototype = {
    remove$0(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver).toString;
    },
    replaceWith$1(receiver, otherNode) {
      var $parent, t1, exception;
      try {
        t1 = receiver.parentNode;
        t1.toString;
        $parent = t1;
        J._replaceChild$2$x($parent, otherNode, receiver);
      } catch (exception) {
      }
      return receiver;
    },
    toString$0(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    set$text(receiver, value) {
      receiver.textContent = value;
    },
    append$1(receiver, node) {
      var t1 = receiver.appendChild(node);
      t1.toString;
      return t1;
    },
    insertBefore$2(receiver, node, child) {
      var t1 = receiver.insertBefore(node, child);
      t1.toString;
      return t1;
    },
    _replaceChild$2(receiver, node, child) {
      var t1 = receiver.replaceChild(node, child);
      t1.toString;
      return t1;
    },
    $isNode: 1
  };
  A.NodeList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.ProgressEvent.prototype = {$isProgressEvent: 1};
  A.SelectElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.Text0.prototype = {$isText0: 1};
  A.Window.prototype = {
    _requestAnimationFrame$1(receiver, callback) {
      var t1 = receiver.requestAnimationFrame(A.convertDartClosureToJS(type$.void_Function_num._as(callback), 1));
      t1.toString;
      return t1;
    },
    _ensureRequestAnimationFrame$0(receiver) {
      var t1 = !!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame);
      t1.toString;
      if (t1)
        return;
      (function($this) {
        var vendors = ["ms", "moz", "webkit", "o"];
        for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
          $this.requestAnimationFrame = $this[vendors[i] + "RequestAnimationFrame"];
          $this.cancelAnimationFrame = $this[vendors[i] + "CancelAnimationFrame"] || $this[vendors[i] + "CancelRequestAnimationFrame"];
        }
        if ($this.requestAnimationFrame && $this.cancelAnimationFrame)
          return;
        $this.requestAnimationFrame = function(callback) {
          return window.setTimeout(function() {
            callback(Date.now());
          }, 16);
        };
        $this.cancelAnimationFrame = function(id) {
          clearTimeout(id);
        };
      })(receiver);
    }
  };
  A._Attr.prototype = {$is_Attr: 1};
  A._NamedNodeMap.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._AttributeMap.prototype = {
    cast$2$0(_, $K, $V) {
      var t1 = type$.String;
      return A.Map_castFrom(this, t1, t1, $K, $V);
    },
    forEach$1(_, f) {
      var t1, t2, t3, _i, t4, value;
      type$.void_Function_String_String._as(f);
      for (t1 = this.get$keys(), t2 = t1.length, t3 = this._element, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        t4 = A._asString(t1[_i]);
        value = t3.getAttribute(t4);
        f.call$2(t4, value == null ? A._asString(value) : value);
      }
    },
    get$keys() {
      var keys, len, t2, i, attr, t3,
        t1 = this._element.attributes;
      t1.toString;
      keys = A._setArrayType([], type$.JSArray_String);
      for (len = t1.length, t2 = type$._Attr, i = 0; i < len; ++i) {
        if (!(i < t1.length))
          return A.ioore(t1, i);
        attr = t2._as(t1[i]);
        if (attr.namespaceURI == null) {
          t3 = attr.name;
          t3.toString;
          B.JSArray_methods.add$1(keys, t3);
        }
      }
      return keys;
    },
    get$isEmpty(_) {
      return this.get$keys().length === 0;
    }
  };
  A._ElementAttributeMap.prototype = {
    $index(_, key) {
      return this._element.getAttribute(A._asString(key));
    },
    get$length(_) {
      return this.get$keys().length;
    }
  };
  A.EventStreamProvider.prototype = {};
  A._EventStream.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1 = A._instanceType(this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      return A._EventStreamSubscription$(this._target, this._eventType, onData, false, t1._precomputed1);
    }
  };
  A._ElementEventStreamImpl.prototype = {};
  A._EventStreamSubscription.prototype = {
    cancel$0() {
      var _this = this;
      if (_this._target == null)
        return $.$get$nullFuture();
      _this._unlisten$0();
      _this._target = null;
      _this.set$_onData(null);
      return $.$get$nullFuture();
    },
    onData$1(handleData) {
      var t1, _this = this;
      _this.$ti._eval$1("~(1)?")._as(handleData);
      if (_this._target == null)
        throw A.wrapException(A.StateError$("Subscription has been canceled."));
      _this._unlisten$0();
      t1 = A._wrapZone(new A._EventStreamSubscription_onData_closure(handleData), type$.Event);
      _this.set$_onData(t1);
      _this._tryResume$0();
    },
    _tryResume$0() {
      var t3,
        t1 = this._onData,
        t2 = t1 != null;
      if (t2 && true) {
        t3 = this._target;
        t3.toString;
        type$.nullable_dynamic_Function_Event._as(t1);
        if (t2)
          J._addEventListener$3$x(t3, this._eventType, t1, false);
      }
    },
    _unlisten$0() {
      var t2,
        t1 = this._onData;
      if (t1 != null) {
        t2 = this._target;
        t2.toString;
        J._removeEventListener$3$x(t2, this._eventType, type$.nullable_dynamic_Function_Event._as(t1), false);
      }
    },
    set$_onData(_onData) {
      this._onData = type$.nullable_dynamic_Function_Event._as(_onData);
    }
  };
  A._EventStreamSubscription_closure.prototype = {
    call$1(e) {
      return this.onData.call$1(type$.Event._as(e));
    },
    $signature: 16
  };
  A._EventStreamSubscription_onData_closure.prototype = {
    call$1(e) {
      return this.handleData.call$1(type$.Event._as(e));
    },
    $signature: 16
  };
  A.ImmutableListMixin.prototype = {
    get$iterator(receiver) {
      return new A.FixedSizeListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    }
  };
  A.FixedSizeListIterator.prototype = {
    moveNext$0() {
      var _this = this,
        nextPosition = _this._position + 1,
        t1 = _this._length;
      if (nextPosition < t1) {
        _this.set$_current(J.$index$asx(_this._array, nextPosition));
        _this._position = nextPosition;
        return true;
      }
      _this.set$_current(null);
      _this._position = t1;
      return false;
    },
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    set$_current(_current) {
      this._current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A._HtmlCollection_JavaScriptObject_ListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._AcceptStructuredClone.prototype = {
    findSlot$1(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      B.JSArray_methods.add$1(t1, value);
      B.JSArray_methods.add$1(this.copies, null);
      return $length;
    },
    walk$1(e) {
      var t1, t2, proto, slot, copy, map, t3, $length, t4, i, _this = this;
      if (e == null)
        return e;
      if (A._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      t1 = e instanceof Date;
      t1.toString;
      if (t1) {
        t1 = e.getTime();
        t1.toString;
        if (Math.abs(t1) <= 864e13)
          t2 = false;
        else
          t2 = true;
        if (t2)
          A.throwExpression(A.ArgumentError$("DateTime is outside valid range: " + t1, null));
        A.checkNotNullable(true, "isUtc", type$.bool);
        return new A.DateTime(t1, true);
      }
      t1 = e instanceof RegExp;
      t1.toString;
      if (t1)
        throw A.wrapException(A.UnimplementedError$("structured clone of RegExp"));
      t1 = typeof Promise != "undefined" && e instanceof Promise;
      t1.toString;
      if (t1)
        return A.promiseToFuture(e, type$.dynamic);
      proto = Object.getPrototypeOf(e);
      t1 = proto === Object.prototype;
      t1.toString;
      if (!t1) {
        t1 = proto === null;
        t1.toString;
      } else
        t1 = true;
      if (t1) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        if (!(slot < t1.length))
          return A.ioore(t1, slot);
        copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = type$.dynamic;
        map = A.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        B.JSArray_methods.$indexSet(t1, slot, map);
        _this.forEachJsField$2(e, new A._AcceptStructuredClone_walk_closure(_this, map));
        return map;
      }
      t1 = e instanceof Array;
      t1.toString;
      if (t1) {
        t1 = e;
        t1.toString;
        slot = _this.findSlot$1(t1);
        t2 = _this.copies;
        if (!(slot < t2.length))
          return A.ioore(t2, slot);
        copy = t2[slot];
        if (copy != null)
          return copy;
        t3 = J.getInterceptor$asx(t1);
        $length = t3.get$length(t1);
        if (_this.mustCopy) {
          t4 = new Array($length);
          t4.toString;
          copy = t4;
        } else
          copy = t1;
        B.JSArray_methods.$indexSet(t2, slot, copy);
        for (t2 = J.getInterceptor$ax(copy), i = 0; i < $length; ++i)
          t2.$indexSet(copy, i, _this.walk$1(t3.$index(t1, i)));
        return copy;
      }
      return e;
    }
  };
  A._AcceptStructuredClone_walk_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this.walk$1(value);
      this.map.$indexSet(0, key, t1);
      return t1;
    },
    $signature: 105
  };
  A._AcceptStructuredCloneDart2Js.prototype = {
    forEachJsField$2(object, action) {
      var t1, t2, _i, key;
      type$.dynamic_Function_dynamic_dynamic._as(action);
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  A.promiseToFuture_closure.prototype = {
    call$1(r) {
      return this.completer.complete$1(0, this.T._eval$1("0/?")._as(r));
    },
    $signature: 9
  };
  A.promiseToFuture_closure0.prototype = {
    call$1(e) {
      if (e == null)
        return this.completer.completeError$1(new A.NullRejectionException(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 9
  };
  A.NullRejectionException.prototype = {
    toString$0(_) {
      return "Promise was rejected with a value of `" + (this.isUndefined ? "undefined" : "null") + "`.";
    },
    $isException: 1
  };
  A.BinaryCodec.prototype = {
    get$decoder() {
      return new A.Decoder();
    },
    get$encoder() {
      return new A.Encoder();
    }
  };
  A.Decoder.prototype = {
    convert$1(input) {
      return this.decode$1(0, new A.ByteReader(type$.Uint8List._as(input)));
    },
    decode$1(_, reader) {
      var _this = this,
        tag = reader.read$0();
      if (tag < 128)
        return tag - 0;
      else if (tag < 192)
        return -(tag - 128);
      else if (tag < 216)
        return reader.readAll$1(tag - 192);
      else if (tag < 240)
        return B.C_Utf8Codec.decode$1(0, reader.readAll$1(tag - 216));
      else if (tag < 248)
        return _this.decodeInt$2(tag, reader);
      else if (tag === 248)
        return null;
      else if (tag === 249)
        return true;
      else if (tag === 250)
        return false;
      else if (tag === 251)
        return _this.decodeDouble$1(reader);
      else if (tag === 252)
        return reader.readAll$1(_this.decodeLength$1(reader));
      else if (tag === 253)
        return B.C_Utf8Codec.decode$1(0, reader.readAll$1(_this.decodeLength$1(reader)));
      else if (tag === 254)
        return _this.decodeList$1(reader);
      else if (tag === 255)
        return _this.decodeMap$1(reader);
      else
        throw A.wrapException("Tag '" + tag + "' not handled");
    },
    decodeInt$2(tag, reader) {
      var t1, t2, value, i, t3, t4, t5, last,
        byteCountMinusOne = tag - 240;
      for (t1 = reader._byte_reader$_data, t2 = t1.length, value = 0, i = 0; i < byteCountMinusOne; ++i) {
        t3 = Math.pow(2, i * 8);
        t4 = reader._byte_reader$_index;
        t5 = t4 + 1;
        if (t5 > t2)
          A.throwExpression(A.ArgumentError$("No more elements", null));
        reader._byte_reader$_index = t5;
        if (!(t4 >= 0 && t4 < t2))
          return A.ioore(t1, t4);
        value += A._asInt(t3 * t1[t4]);
      }
      last = reader.read$0();
      t1 = byteCountMinusOne * 8;
      value += A._asInt(Math.pow(2, t1) * (last & 127));
      return (last & 128) !== 0 ? value - A._asInt(Math.pow(2, t1 + 7)) : value;
    },
    decodeDouble$1(reader) {
      var bytes = reader.readAll$1(8);
      return B.NativeByteData_methods._getFloat64$2(A.NativeByteData_NativeByteData$view(bytes.buffer, bytes.byteOffset, 8), 0, true);
    },
    decodeLength$1(reader) {
      var $length, rounded,
        tag = reader.read$0();
      if (tag < 128)
        return tag - 0;
      else if (tag < 240)
        throw A.wrapException("Tag '" + tag + "' is no length");
      else if (tag < 248)
        return this.decodeInt$2(tag, reader);
      else if (tag === 251) {
        $length = this.decodeDouble$1(reader);
        rounded = B.JSNumber_methods.round$0($length);
        if ($length !== rounded)
          throw A.wrapException("Tag '" + tag + "' is a double value (" + A.S($length) + ") and no length (lengths must have no decimal places)");
        return rounded;
      } else
        throw A.wrapException("Tag '" + tag + "' is no length");
    },
    decodeList$1(reader) {
      var i,
        $length = this.decodeLength$1(reader),
        list = [];
      for (i = 0; i < $length; ++i)
        list.push(this.decode$1(0, reader));
      return list;
    },
    decodeMap$1(reader) {
      var i,
        $length = this.decodeLength$1(reader),
        map = new A.JsLinkedHashMap(type$.JsLinkedHashMap_dynamic_dynamic);
      for (i = 0; i < $length; ++i)
        map.$indexSet(0, this.decode$1(0, reader), this.decode$1(0, reader));
      return map;
    }
  };
  A.Encoder.prototype = {
    convert$1(value) {
      var result,
        writer = new A.ByteWriter(new Uint8Array(8));
      this.encode$2(value, writer);
      result = A.NativeUint8List_NativeUint8List$view(writer._buffer.buffer, 0, writer._byte_writer$_index);
      writer._buffer = new Uint8Array(8);
      writer._byte_writer$_index = 0;
      return result;
    },
    encode$2(value, writer) {
      var _this = this;
      if (value == null)
        writer.write$1(248);
      else if (A._isBool(value))
        writer.write$1(value ? 249 : 250);
      else if (typeof value == "number")
        _this.encodeDouble$2(value, writer);
      else if (A._isInt(value))
        _this.encodeInt$2(value, writer);
      else if (type$.Uint8List._is(value))
        _this.encodeData$3(value, false, writer);
      else if (typeof value == "string") {
        type$.Utf8Codec._eval$1("Codec.S")._as(value);
        _this.encodeData$3(B.C_Utf8Codec.get$encoder().convert$1(value), true, writer);
      } else if (type$.List_dynamic._is(value))
        _this.encodeList$2(value, writer);
      else if (type$.Map_dynamic_dynamic._is(value))
        _this.encodeMap$2(value, writer);
      else
        throw A.wrapException("Type of " + A.S(value) + " is not supported (" + J.get$runtimeType$(value).toString$0(0) + ")");
    },
    encodeDouble$2(value, writer) {
      var bytes;
      writer.write$1(251);
      bytes = new Uint8Array(8);
      B.NativeByteData_methods._setFloat64$3(A.NativeByteData_NativeByteData$view(bytes.buffer, 0, null), 0, value, true);
      writer.writeAll$1(bytes);
    },
    encodeInt$2(value, writer) {
      var t1, byteCountMinusOne, i, byte, t2, t3;
      if (value >= 0 && value < 128)
        writer.write$1(value);
      else {
        t1 = value < 0;
        if (t1 && value > -64)
          writer.write$1(128 - value);
        else {
          byteCountMinusOne = B.JSNumber_methods.floor$0(B.JSInt_methods.get$bitLength(value) / 8);
          writer.write$1(240 + byteCountMinusOne);
          if (t1)
            value = -value - 1;
          for (i = 0; i <= byteCountMinusOne; ++i) {
            byte = B.JSInt_methods.$tdiv(value, Math.pow(2, i * 8));
            if (t1)
              byte = -(byte + 1);
            writer._reserve$1(1);
            t2 = writer._buffer;
            t3 = writer._byte_writer$_index++;
            if (!(t3 < t2.length))
              return A.ioore(t2, t3);
            t2[t3] = byte;
          }
        }
      }
    },
    encodeLength$2($length, writer) {
      this.encodeDouble$2($length, writer);
    },
    encodeData$3(value, isText, writer) {
      var $length = value.length;
      if ($length < 24)
        writer.write$1((isText ? 216 : 192) + $length);
      else {
        writer.write$1(isText ? 253 : 252);
        this.encodeLength$2($length, writer);
      }
      writer.writeAll$1(value);
    },
    encodeList$2(value, writer) {
      var t1, t2, _i;
      writer.write$1(254);
      t1 = J.getInterceptor$asx(value);
      this.encodeLength$2(t1.get$length(value), writer);
      for (t1 = t1.toList$0(value), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        this.encode$2(t1[_i], writer);
    },
    encodeMap$2(value, writer) {
      var t1, t2, _i, entry;
      writer.write$1(255);
      this.encodeLength$2(value.get$length(value), writer);
      for (t1 = value.get$entries(value).toList$0(0), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        this.encode$2(entry.key, writer);
        this.encode$2(entry.value, writer);
      }
    }
  };
  A.ByteReader.prototype = {
    _require$1(byteCount) {
      if (this._byte_reader$_index + byteCount > this._byte_reader$_data.length)
        throw A.wrapException(A.ArgumentError$("No more elements", null));
    },
    read$0() {
      var t1, t2;
      this._require$1(1);
      t1 = this._byte_reader$_data;
      t2 = this._byte_reader$_index++;
      if (!(t2 >= 0 && t2 < t1.length))
        return A.ioore(t1, t2);
      return t1[t2];
    },
    readAll$1(byteCount) {
      var t1, result, _this = this;
      _this._require$1(byteCount);
      t1 = _this._byte_reader$_data;
      result = A.NativeUint8List_NativeUint8List$view(t1.buffer, t1.byteOffset + _this._byte_reader$_index, byteCount);
      _this._byte_reader$_index += byteCount;
      return result;
    }
  };
  A.ByteWriter.prototype = {
    _reserve$1(byteCount) {
      var t1, t2, t3, next, _this = this;
      for (; t1 = _this._byte_writer$_index, t2 = _this._byte_writer$_length, t1 + byteCount > t2;)
        _this._byte_writer$_length = t2 * 2;
      t3 = _this._buffer;
      if (t2 !== t3.length) {
        next = new Uint8Array(t2);
        B.NativeUint8List_methods.setRange$3(next, 0, t1, t3);
        _this._buffer = next;
      }
    },
    write$1(byte) {
      var t1, t2;
      this._reserve$1(1);
      t1 = this._buffer;
      t2 = this._byte_writer$_index++;
      if (!(t2 < t1.length))
        return A.ioore(t1, t2);
      t1[t2] = byte;
    },
    writeAll$1(bytes) {
      var t1, t2, t3, _this = this;
      type$.Iterable_int._as(bytes);
      t1 = bytes.length;
      _this._reserve$1(t1);
      t2 = _this._buffer;
      t3 = _this._byte_writer$_index;
      B.NativeUint8List_methods.setRange$3(t2, t3, t3 + t1, bytes);
      _this._byte_writer$_index += t1;
    }
  };
  A.DefaultEquality.prototype = {$isEquality: 1};
  A.IterableEquality.prototype = {
    equals$2(elements1, elements2) {
      var it1, it2, hasNext,
        t1 = this.$ti._eval$1("Iterable<1>?");
      t1._as(elements1);
      t1._as(elements2);
      if (elements1 === elements2)
        return true;
      it1 = J.get$iterator$ax(elements1);
      it2 = J.get$iterator$ax(elements2);
      for (t1 = this._elementEquality; true;) {
        hasNext = it1.moveNext$0();
        if (hasNext !== it2.moveNext$0())
          return false;
        if (!hasNext)
          return true;
        if (!t1.equals$2(it1.get$current(), it2.get$current()))
          return false;
      }
    },
    hash$1(_, elements) {
      var t1, t2, hash;
      this.$ti._eval$1("Iterable<1>?")._as(elements);
      for (t1 = J.get$iterator$ax(elements), t2 = this._elementEquality, hash = 0; t1.moveNext$0();) {
        hash = hash + t2.hash$1(0, t1.get$current()) & 2147483647;
        hash = hash + (hash << 10 >>> 0) & 2147483647;
        hash ^= hash >>> 6;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.ListEquality.prototype = {
    equals$2(list1, list2) {
      var $length, t2, t3, i,
        t1 = this.$ti._eval$1("List<1>?");
      t1._as(list1);
      t1._as(list2);
      if (list1 === list2)
        return true;
      t1 = J.getInterceptor$asx(list1);
      $length = t1.get$length(list1);
      t2 = J.getInterceptor$asx(list2);
      if ($length !== t2.get$length(list2))
        return false;
      for (t3 = this._elementEquality, i = 0; i < $length; ++i)
        if (!t3.equals$2(t1.$index(list1, i), t2.$index(list2, i)))
          return false;
      return true;
    },
    hash$1(_, list) {
      var t1, t2, hash, i;
      this.$ti._eval$1("List<1>?")._as(list);
      for (t1 = J.getInterceptor$asx(list), t2 = this._elementEquality, hash = 0, i = 0; i < t1.get$length(list); ++i) {
        hash = hash + t2.hash$1(0, t1.$index(list, i)) & 2147483647;
        hash = hash + (hash << 10 >>> 0) & 2147483647;
        hash ^= hash >>> 6;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A._UnorderedEquality.prototype = {
    equals$2(elements1, elements2) {
      var counts, $length, e, count,
        t1 = A._instanceType(this),
        t2 = t1._eval$1("_UnorderedEquality.T?");
      t2._as(elements1);
      t2._as(elements2);
      if (elements1 === elements2)
        return true;
      t2 = this._elementEquality;
      counts = A.HashMap_HashMap(t1._eval$1("bool(_UnorderedEquality.E,_UnorderedEquality.E)")._as(t2.get$equals()), t1._eval$1("int(_UnorderedEquality.E)")._as(t2.get$hash(t2)), t2.get$isValidKey(), t1._eval$1("_UnorderedEquality.E"), type$.int);
      for (t1 = J.get$iterator$ax(elements1), $length = 0; t1.moveNext$0();) {
        e = t1.get$current();
        count = counts.$index(0, e);
        counts.$indexSet(0, e, (count == null ? 0 : count) + 1);
        ++$length;
      }
      for (t1 = J.get$iterator$ax(elements2); t1.moveNext$0();) {
        e = t1.get$current();
        count = counts.$index(0, e);
        if (count == null || count === 0)
          return false;
        if (typeof count !== "number")
          return count.$sub();
        counts.$indexSet(0, e, count - 1);
        --$length;
      }
      return $length === 0;
    },
    hash$1(_, elements) {
      var t1, t2, hash;
      A._instanceType(this)._eval$1("_UnorderedEquality.T?")._as(elements);
      for (t1 = J.get$iterator$ax(elements), t2 = this._elementEquality, hash = 0; t1.moveNext$0();)
        hash = hash + t2.hash$1(0, t1.get$current()) & 2147483647;
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.SetEquality.prototype = {};
  A._MapEntry.prototype = {
    get$hashCode(_) {
      var t1 = this.equality;
      return 3 * t1._keyEquality.hash$1(0, this.key) + 7 * t1._valueEquality.hash$1(0, this.value) & 2147483647;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A._MapEntry) {
        t1 = this.equality;
        t1 = t1._keyEquality.equals$2(this.key, other.key) && t1._valueEquality.equals$2(this.value, other.value);
      } else
        t1 = false;
      return t1;
    }
  };
  A.MapEquality.prototype = {
    equals$2(map1, map2) {
      var equalElementCounts, key, entry, count,
        t1 = this.$ti._eval$1("Map<1,2>?");
      t1._as(map1);
      t1._as(map2);
      if (map1 === map2)
        return true;
      if (map1.get$length(map1) !== map2.get$length(map2))
        return false;
      equalElementCounts = A.HashMap_HashMap(null, null, null, type$._MapEntry, type$.int);
      for (t1 = J.get$iterator$ax(map1.get$keys()); t1.moveNext$0();) {
        key = t1.get$current();
        entry = new A._MapEntry(this, key, map1.$index(0, key));
        count = equalElementCounts.$index(0, entry);
        equalElementCounts.$indexSet(0, entry, (count == null ? 0 : count) + 1);
      }
      for (t1 = J.get$iterator$ax(map2.get$keys()); t1.moveNext$0();) {
        key = t1.get$current();
        entry = new A._MapEntry(this, key, map2.$index(0, key));
        count = equalElementCounts.$index(0, entry);
        if (count == null || count === 0)
          return false;
        if (typeof count !== "number")
          return count.$sub();
        equalElementCounts.$indexSet(0, entry, count - 1);
      }
      return true;
    },
    hash$1(_, map) {
      var t2, t3, t4, hash, key, keyHash, t5,
        t1 = this.$ti;
      t1._eval$1("Map<1,2>?")._as(map);
      for (t2 = J.get$iterator$ax(map.get$keys()), t3 = this._keyEquality, t4 = this._valueEquality, t1 = t1._rest[1], hash = 0; t2.moveNext$0();) {
        key = t2.get$current();
        keyHash = t3.hash$1(0, key);
        t5 = map.$index(0, key);
        hash = hash + 3 * keyHash + 7 * t4.hash$1(0, t5 == null ? t1._as(t5) : t5) & 2147483647;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.DeepCollectionEquality.prototype = {
    equals$2(e1, e2) {
      var _this = this,
        t1 = type$.Set_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.SetEquality(_this, type$.SetEquality_dynamic).equals$2(e1, e2);
      t1 = type$.Map_dynamic_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.MapEquality(_this, _this, type$.MapEquality_dynamic_dynamic).equals$2(e1, e2);
      t1 = type$.List_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.ListEquality(_this, type$.ListEquality_dynamic).equals$2(e1, e2);
      t1 = type$.Iterable_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && A.boolConversionCheck(new A.IterableEquality(_this, type$.IterableEquality_dynamic).equals$2(e1, e2));
      return J.$eq$(e1, e2);
    },
    hash$1(_, o) {
      var _this = this;
      if (type$.Set_dynamic._is(o))
        return new A.SetEquality(_this, type$.SetEquality_dynamic).hash$1(0, o);
      if (type$.Map_dynamic_dynamic._is(o))
        return new A.MapEquality(_this, _this, type$.MapEquality_dynamic_dynamic).hash$1(0, o);
      if (type$.List_dynamic._is(o))
        return new A.ListEquality(_this, type$.ListEquality_dynamic).hash$1(0, o);
      if (type$.Iterable_dynamic._is(o))
        return new A.IterableEquality(_this, type$.IterableEquality_dynamic).hash$1(0, o);
      return J.get$hashCode$(o);
    },
    isValidKey$1(o) {
      !type$.Iterable_dynamic._is(o);
      return true;
    },
    $isEquality: 1
  };
  A.App.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.PushPin("tableOfContents", new A._LeftPane(null), A._setArrayType(["hide-on-small-only", "tableOfContents"], type$.JSArray_String), null);
              case 2:
                // after yield
                $async$goto = 3;
                return new A._MobileTopBar(null);
              case 3:
                // after yield
                $async$goto = 4;
                return new A.ContactData(null);
              case 4:
                // after yield
                $async$goto = 5;
                return new A.Skills(null);
              case 5:
                // after yield
                $async$goto = 6;
                return new A.WorkTimeline(null);
              case 6:
                // after yield
                $async$goto = 7;
                return new A.OtherProjects(null);
              case 7:
                // after yield
                $async$goto = 8;
                return new A.Education(null);
              case 8:
                // after yield
                $async$goto = 9;
                return new A.ForeignLanguages(null);
              case 9:
                // after yield
                $async$goto = 10;
                return new A.Hobbies(null);
              case 10:
                // after yield
                $async$goto = 11;
                return new A.Copyrights(null);
              case 11:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A._LeftPane.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_String;
                t2 = A._setArrayType(["col m3 l2"], t1);
                t1 = A._setArrayType(["contactData", "skills", "workTimeline", "otherProjects", "education", "foreignLanguages", "hobbies"], t1);
                A.ProviderContext_watch(context, $.$get$selectedLanguageProvider(), type$.SupportedLanguages);
                $async$goto = 2;
                return new A.DomComponent("div", null, t2, null, null, null, new A.NavigationPanel(t1, null), null, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A._MobileTopBar.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.Builder(new A._MobileTopBar_build_closure(), null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A._MobileTopBar_build_closure.prototype = {
    call$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_String;
                $async$goto = 2;
                return new A.DomComponent("nav", "languageSelector", A._setArrayType(["hide-on-med-and-up", "teal"], t1), null, null, null, new A.DomComponent("div", null, A._setArrayType(["nav-wrapper", "container"], t1), null, null, null, null, A._setArrayType([new A.DomComponent("div", null, A._setArrayType(["left"], t1), null, null, null, new A.Builder(new A._MobileTopBar_build__closure(), null), null, null), new A.DomComponent("div", null, A._setArrayType(["right"], t1), null, null, null, new A.DomComponent("div", null, A._setArrayType(["btn-flat", "white-text"], t1), null, null, null, new A.LangSelector(null), null, null), null, null), new A.DomComponent("div", null, A._setArrayType(["right"], t1), null, null, null, new A.DomComponent("div", null, A._setArrayType(["btn-flat"], t1), null, null, null, new A.PdfCVLinkComponent(null), null, null), null, null)], type$.JSArray_Component), null), null, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A._MobileTopBar_build__closure.prototype = {
    call$1($async$innerContext) {
      return A._makeSyncStarIterable(function() {
        var innerContext = $async$innerContext;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.Text(A.I18nContextExtension_i18n(innerContext, "cvTitle"), false, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.ContentPadding.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_String;
                t2 = A._setArrayType(["container", "section"], t1);
                t3 = A._setArrayType([], t1);
                B.JSArray_methods.addAll$1(t2, t3);
                $async$goto = 2;
                return new A.DomComponent("div", null, t2, null, null, null, new A.DomComponent("div", null, A._setArrayType(["row"], t1), null, null, null, new A.DomComponent("div", null, A._setArrayType(["col", "s12", "m9", "l10", "offset-m3", "offset-l2"], t1), null, null, null, $async$self.child, null, null), null, null), null, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.ContentSection.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = A._setArrayType(["fullHeight", "valign-wrapper"], type$.JSArray_String);
                B.JSArray_methods.addAll$1(t1, $async$self._classes);
                $async$goto = 2;
                return new A.Div("div", $async$self.id, t1, null, null, null, new A.ContentPadding($async$self.child, null), null, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.ContentTitle.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.DomComponent("h5", null, A._setArrayType(["white-text"], type$.JSArray_String), null, null, null, new A.Text($async$self.text, false, null), null, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.Copyrights.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.DomComponent("div", "Copyrights", A._setArrayType(["cyan", "lighten-3"], type$.JSArray_String), null, null, null, new A.ContentPadding(new A.DomComponent("span", null, null, null, null, null, new A.Text("Created by \u0141ukasz Huculak", false, null), null, null), null), null, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.Div.prototype = {};
  A.ListItem.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = A._setArrayType(["collection-item", "avatar"], type$.JSArray_String);
                B.JSArray_methods.addAll$1(t1, $async$self._list_item$_classes);
                $async$goto = 2;
                return new A.DomComponent("li", null, t1, null, null, null, new A.Builder(new A.ListItem_build_closure($async$self), null), null, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.ListItem_build_closure.prototype = {
    call$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.$this;
                $async$goto = 2;
                return t1.icon;
              case 2:
                // after yield
                $async$goto = 3;
                return new A.Text(t1.text, false, null);
              case 3:
                // after yield
                t1 = t1.content;
                $async$goto = t1 != null ? 4 : 5;
                break;
              case 4:
                // then
                $async$goto = 6;
                return t1;
              case 6:
                // after yield
              case 5:
                // join
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.SimpleListItem.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = A._setArrayType(["material-icons", "circle", "darken-2"], type$.JSArray_String);
                t2 = $async$self._list_item$_classes;
                B.JSArray_methods.addAll$1(t1, t2);
                $async$goto = 2;
                return A.ListItem$(t2, $async$self.content, new A.DomComponent("i", null, t1, null, null, null, $async$self.icon, null, null), $async$self.text);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.MarkdownComponent.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return A.div(A._setArrayType([new A.Builder(new A.MarkdownComponent_build_closure($async$self), null)], type$.JSArray_Component), null, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.MarkdownComponent_build_closure.prototype = {
    call$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return A._IterationMarker_yieldStar(A.parseMarkdown(A._setArrayType($async$self.$this.markdown.split("\n"), type$.JSArray_String)));
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.Collapsible.prototype = {
    createState$0() {
      return new A._CollapsibleState(B._StateLifecycle_0);
    }
  };
  A._CollapsibleState.prototype = {
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      A.scheduleMicrotask(new A._CollapsibleState_didChangeDependencies_closure(this));
    },
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t3, t4, t1, t2;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._component;
                t2 = t1.tag;
                t1 = t1.child;
                t3 = A._setArrayType(["collapsible"], type$.JSArray_String);
                $async$self._component.toString;
                t4 = type$.String;
                t4 = A.LinkedHashMap_LinkedHashMap$_literal(["data-collapsible", "accordion"], t4, t4);
                $async$goto = 2;
                return new A.DomComponent(t2, $async$self._component.id, t3, null, t4, null, t1, null, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A._CollapsibleState_didChangeDependencies_closure.prototype = {
    call$0() {
      self.collapsibleInit(this.$this._component.id);
    },
    $signature: 0
  };
  A.PushPin.prototype = {
    createState$0() {
      return new A._PushPinState(B._StateLifecycle_0);
    }
  };
  A._PushPinState.prototype = {
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      A.scheduleMicrotask(new A._PushPinState_didChangeDependencies_closure(this));
    },
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = A._setArrayType([$async$self._component.child], type$.JSArray_Component);
                t2 = $async$self._component;
                $async$goto = 2;
                return A.div(t1, t2.classes, t2.id);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A._PushPinState_didChangeDependencies_closure.prototype = {
    call$0() {
      self.pushpinInit(this.$this._component.id);
    },
    $signature: 0
  };
  A.Scrollspy.prototype = {
    createState$0() {
      return new A._ScrollspyState(B._StateLifecycle_0);
    }
  };
  A._ScrollspyState.prototype = {
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      A.scheduleMicrotask(new A._ScrollspyState_didChangeDependencies_closure(this));
    },
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return A.div(A._setArrayType([$async$self._component.child], type$.JSArray_Component), A._setArrayType(["scrollspy"], type$.JSArray_String), $async$self._component.id);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A._ScrollspyState_didChangeDependencies_closure.prototype = {
    call$0() {
      self.scrollspyInit(this.$this._component.id);
    },
    $signature: 0
  };
  A.LangSelector.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, t4, _i, element, t5, t6, widthClass, currentSelectedLanguage;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                widthClass = "m6";
                currentSelectedLanguage = A.ProviderContext_watch(context, $.$get$selectedLanguageProvider(), type$.SupportedLanguages);
                t1 = type$.JSArray_Component, t2 = type$.String, t3 = type$.void_Function_dynamic, t4 = type$.JSArray_String, _i = 0;
              case 2:
                // for condition
                if (!(_i < 2)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                element = B.List_V1X[_i];
                t5 = currentSelectedLanguage === element ? A._setArrayType(["lang-selected"], t4) : null;
                t5 = A._setArrayType([A.img(t5, "public/images/flag_" + element._name + ".png")], t1);
                t6 = A.LinkedHashMap_LinkedHashMap$_literal(["click", new A.LangSelector_build_closure(context, element)], t2, t3);
                $async$goto = 5;
                return new A.DomComponent("span", null, A._setArrayType([widthClass, "col", "center-align", "white-text", "pointer"], t4), null, null, t6, null, t5, null);
              case 5:
                // after yield
              case 3:
                // for update
                ++_i;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.LangSelector_build_closure.prototype = {
    call$1(_) {
      var t1 = $.$get$selectedLanguageProvider().get$notifier(),
        t2 = A.ProviderScope__scopeOf(this.context, false);
      t2 = A.InheritedElement.prototype.get$component.call(t2);
      t2 = type$.ProviderListenable_StateController_SupportedLanguages._as(t1).read$1(t2.container);
      J.getInterceptor$z(t2).super$StateNotifier$state(t2, A.instanceType(t2)._precomputed1._as(this.element));
    },
    $signature: 9
  };
  A.ContactData0.prototype = {};
  A._$ContactData.prototype = {
    get$address() {
      return A.throwExpression($.$get$_privateConstructorUsedError5());
    },
    get$linkedin() {
      return A.throwExpression($.$get$_privateConstructorUsedError5());
    },
    get$github() {
      return A.throwExpression($.$get$_privateConstructorUsedError5());
    },
    get$bitbucket() {
      return A.throwExpression($.$get$_privateConstructorUsedError5());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError5());
    }
  };
  A._$_ContactData.prototype = {
    toString$0(_) {
      var _this = this;
      return "ContactData(name: " + _this.name + ", address: " + _this.address + ", linkedin: " + _this.linkedin + ", github: " + _this.github + ", bitbucket: " + _this.bitbucket + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeType(_this))
          if (other instanceof A._$_ContactData) {
            t1 = other.name === _this.name;
            if (t1 || t1) {
              t1 = other.address === _this.address;
              if (t1 || t1) {
                t1 = other.linkedin === _this.linkedin;
                if (t1 || t1) {
                  t1 = other.github === _this.github;
                  if (t1 || t1) {
                    t1 = other.bitbucket === _this.bitbucket;
                    t1 = t1 || t1;
                  } else
                    t1 = false;
                } else
                  t1 = false;
              } else
                t1 = false;
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeType(_this), _this.name, _this.address, _this.linkedin, _this.github, _this.bitbucket, B.C_SentinelValue);
    },
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["name", _this.name, "address", _this.address, "linkedin", _this.linkedin, "github", _this.github, "bitbucket", _this.bitbucket], type$.String, type$.dynamic);
    },
    $isContactData0: 1,
    get$address() {
      return this.address;
    },
    get$linkedin() {
      return this.linkedin;
    },
    get$github() {
      return this.github;
    },
    get$bitbucket() {
      return this.bitbucket;
    }
  };
  A._ContactData_Object__$ContactData.prototype = {};
  A.Education0.prototype = {};
  A.CollegeStudy.prototype = {};
  A._$Education.prototype = {
    get$collegeStudies() {
      return A.throwExpression($.$get$_privateConstructorUsedError1());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError1());
    }
  };
  A._$_Education.prototype = {
    get$collegeStudies() {
      var t1 = this._collegeStudies;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_CollegeStudy);
    },
    toString$0(_) {
      return "Education(collegeStudies: " + A.S(this.get$collegeStudies()) + ")";
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeType(this) && other instanceof A._$_Education && B.C_DeepCollectionEquality.equals$2(other._collegeStudies, this._collegeStudies);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), B.C_DeepCollectionEquality.hash$1(0, this._collegeStudies), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["college_studies", this.get$collegeStudies()], type$.String, type$.dynamic);
    },
    $isEducation0: 1
  };
  A._$CollegeStudy.prototype = {
    get$title(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError1());
    },
    get$period() {
      return A.throwExpression($.$get$_privateConstructorUsedError1());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError1());
    }
  };
  A._$_CollegeStudy.prototype = {
    toString$0(_) {
      return "CollegeStudy(title: " + this.title + ", period: " + this.period + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeType(_this))
          if (other instanceof A._$_CollegeStudy) {
            t1 = other.title === _this.title;
            if (t1 || t1) {
              t1 = other.period === _this.period;
              t1 = t1 || t1;
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), this.title, this.period, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["title", this.title, "period", this.period], type$.String, type$.dynamic);
    },
    $isCollegeStudy: 1,
    get$title(receiver) {
      return this.title;
    },
    get$period() {
      return this.period;
    }
  };
  A._$$_EducationFromJson_closure.prototype = {
    call$1(e) {
      type$.Map_String_dynamic._as(e);
      return new A._$_CollegeStudy(A._asString(e.$index(0, "title")), A._asString(e.$index(0, "period")));
    },
    $signature: 124
  };
  A._CollegeStudy_Object__$CollegeStudy.prototype = {};
  A._Education_Object__$Education.prototype = {};
  A.ForeignLanguages0.prototype = {};
  A.Language.prototype = {};
  A._$ForeignLanguages.prototype = {
    get$known() {
      return A.throwExpression($.$get$_privateConstructorUsedError0());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError0());
    }
  };
  A._$_ForeignLanguages.prototype = {
    get$known() {
      var t1 = this._foreign_languages$_known;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Language);
    },
    toString$0(_) {
      return "ForeignLanguages(known: " + A.S(this.get$known()) + ")";
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeType(this) && other instanceof A._$_ForeignLanguages && B.C_DeepCollectionEquality.equals$2(other._foreign_languages$_known, this._foreign_languages$_known);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), B.C_DeepCollectionEquality.hash$1(0, this._foreign_languages$_known), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["known", this.get$known()], type$.String, type$.dynamic);
    },
    $isForeignLanguages0: 1
  };
  A._$Language.prototype = {
    get$name(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError0());
    },
    get$details() {
      return A.throwExpression($.$get$_privateConstructorUsedError0());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError0());
    }
  };
  A._$_Language.prototype = {
    toString$0(_) {
      return "Language(name: " + this.name + ", details: " + this.details + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeType(_this))
          if (other instanceof A._$_Language) {
            t1 = other.name === _this.name;
            if (t1 || t1) {
              t1 = other.details === _this.details;
              t1 = t1 || t1;
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), this.name, this.details, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["name", this.name, "details", this.details], type$.String, type$.dynamic);
    },
    $isLanguage: 1,
    get$name(receiver) {
      return this.name;
    },
    get$details() {
      return this.details;
    }
  };
  A._$$_ForeignLanguagesFromJson_closure.prototype = {
    call$1(e) {
      type$.Map_String_dynamic._as(e);
      return new A._$_Language(A._asString(e.$index(0, "name")), A._asString(e.$index(0, "details")));
    },
    $signature: 125
  };
  A._ForeignLanguages_Object__$ForeignLanguages.prototype = {};
  A._Language_Object__$Language.prototype = {};
  A.Hobbies0.prototype = {};
  A.Hobby.prototype = {};
  A._$Hobbies.prototype = {
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError());
    }
  };
  A._$_Hobbies.prototype = {
    get$hobbies() {
      var t1 = this._hobbies;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Hobby);
    },
    toString$0(_) {
      return "Hobbies(hobbies: " + A.S(this.get$hobbies()) + ")";
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeType(this) && other instanceof A._$_Hobbies && B.C_DeepCollectionEquality.equals$2(other._hobbies, this._hobbies);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), B.C_DeepCollectionEquality.hash$1(0, this._hobbies), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["hobbies", this.get$hobbies()], type$.String, type$.dynamic);
    }
  };
  A._$Hobby.prototype = {
    get$name(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError());
    },
    get$iconCode() {
      return A.throwExpression($.$get$_privateConstructorUsedError());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError());
    }
  };
  A._$_Hobby.prototype = {
    toString$0(_) {
      return "Hobby(name: " + this.name + ", iconCode: " + this.iconCode + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeType(_this))
          if (other instanceof A._$_Hobby) {
            t1 = other.name === _this.name;
            if (t1 || t1) {
              t1 = other.iconCode === _this.iconCode;
              t1 = t1 || t1;
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), this.name, this.iconCode, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["name", this.name, "iconCode", this.iconCode], type$.String, type$.dynamic);
    },
    $isHobby: 1,
    get$name(receiver) {
      return this.name;
    },
    get$iconCode() {
      return this.iconCode;
    }
  };
  A._$$_HobbiesFromJson_closure.prototype = {
    call$1(e) {
      type$.Map_String_dynamic._as(e);
      return new A._$_Hobby(A._asString(e.$index(0, "name")), A._asString(e.$index(0, "iconCode")));
    },
    $signature: 139
  };
  A._Hobbies_Object__$Hobbies.prototype = {};
  A._Hobby_Object__$Hobby.prototype = {};
  A.OtherProjects0.prototype = {};
  A.Project.prototype = {};
  A.DeploymentUrl.prototype = {};
  A._$OtherProjects.prototype = {
    get$projects() {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    }
  };
  A._$_OtherProjects.prototype = {
    get$projects() {
      var t1 = this._projects;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Project);
    },
    toString$0(_) {
      return "OtherProjects(projects: " + A.S(this.get$projects()) + ")";
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeType(this) && other instanceof A._$_OtherProjects && B.C_DeepCollectionEquality.equals$2(other._projects, this._projects);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), B.C_DeepCollectionEquality.hash$1(0, this._projects), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["projects", this.get$projects()], type$.String, type$.dynamic);
    },
    $isOtherProjects0: 1
  };
  A._$Project.prototype = {
    get$title(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    get$description() {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    get$repositoryUrl() {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    get$skills() {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    get$deploymentUrls() {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    get$imageUrl() {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    }
  };
  A._$_Project.prototype = {
    get$skills() {
      var t1 = this._skills;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_String);
    },
    get$deploymentUrls() {
      var t1 = this._deploymentUrls;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_DeploymentUrl);
    },
    toString$0(_) {
      var _this = this;
      return "Project(title: " + _this.title + ", description: " + _this.description + ", repositoryUrl: " + A.S(_this.repositoryUrl) + ", skills: " + A.S(_this.get$skills()) + ", deploymentUrls: " + A.S(_this.get$deploymentUrls()) + ", imageUrl: " + A.S(_this.imageUrl) + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeType(_this))
          if (other instanceof A._$_Project) {
            t1 = other.title === _this.title;
            if (t1 || t1) {
              t1 = other.description === _this.description;
              if (t1 || t1) {
                t1 = other.repositoryUrl == _this.repositoryUrl;
                if (t1 || t1)
                  if (B.C_DeepCollectionEquality.equals$2(other._skills, _this._skills))
                    if (B.C_DeepCollectionEquality.equals$2(other._deploymentUrls, _this._deploymentUrls)) {
                      t1 = other.imageUrl == _this.imageUrl;
                      t1 = t1 || t1;
                    } else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              } else
                t1 = false;
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeType(_this), _this.title, _this.description, _this.repositoryUrl, B.C_DeepCollectionEquality.hash$1(0, _this._skills), B.C_DeepCollectionEquality.hash$1(0, _this._deploymentUrls), _this.imageUrl);
    },
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["title", _this.title, "description", _this.description, "repositoryUrl", _this.repositoryUrl, "skills", _this.get$skills(), "deploymentUrls", _this.get$deploymentUrls(), "imageUrl", _this.imageUrl], type$.String, type$.dynamic);
    },
    $isProject: 1,
    get$title(receiver) {
      return this.title;
    },
    get$description() {
      return this.description;
    },
    get$repositoryUrl() {
      return this.repositoryUrl;
    },
    get$imageUrl() {
      return this.imageUrl;
    }
  };
  A._$DeploymentUrl.prototype = {
    get$type(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    get$url(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    }
  };
  A._$_DeploymentUrl.prototype = {
    toString$0(_) {
      return "DeploymentUrl(type: " + this.type + ", url: " + this.url + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeType(_this))
          if (other instanceof A._$_DeploymentUrl) {
            t1 = other.type === _this.type;
            if (t1 || t1) {
              t1 = other.url === _this.url;
              t1 = t1 || t1;
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), this.type, this.url, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["type", this.type, "url", this.url], type$.String, type$.dynamic);
    },
    $isDeploymentUrl: 1,
    get$type(receiver) {
      return this.type;
    },
    get$url(receiver) {
      return this.url;
    }
  };
  A._$$_OtherProjectsFromJson_closure.prototype = {
    call$1(e) {
      return A._$$_ProjectFromJson(type$.Map_String_dynamic._as(e));
    },
    $signature: 140
  };
  A._$$_ProjectFromJson_closure.prototype = {
    call$1(e) {
      return A._asString(e);
    },
    $signature: 22
  };
  A._$$_ProjectFromJson_closure0.prototype = {
    call$1(e) {
      type$.Map_String_dynamic._as(e);
      return new A._$_DeploymentUrl(A._asString(e.$index(0, "type")), A._asString(e.$index(0, "url")));
    },
    $signature: 38
  };
  A._DeploymentUrl_Object__$DeploymentUrl.prototype = {};
  A._OtherProjects_Object__$OtherProjects.prototype = {};
  A._Project_Object__$Project.prototype = {};
  A.Projects.prototype = {};
  A.Project0.prototype = {};
  A.ProjectDescription.prototype = {};
  A.ProjectUrl.prototype = {};
  A._$Projects.prototype = {
    get$projects() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    }
  };
  A._$_Projects.prototype = {
    get$projects() {
      var t1 = this._projects$_projects;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Project_2);
    },
    toString$0(_) {
      return "Projects(projects: " + A.S(this.get$projects()) + ")";
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeType(this) && other instanceof A._$_Projects && B.C_DeepCollectionEquality.equals$2(other._projects$_projects, this._projects$_projects);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), B.C_DeepCollectionEquality.hash$1(0, this._projects$_projects), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["projects", this.get$projects()], type$.String, type$.dynamic);
    },
    $isProjects: 1
  };
  A._$Project0.prototype = {
    get$code(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$name(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$from() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$skillsUsed() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$company() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$to() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    }
  };
  A._$_Project0.prototype = {
    get$skillsUsed() {
      var t1 = this._skillsUsed;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_String);
    },
    toString$0(_) {
      var _this = this;
      return "Project(code: " + _this.code + ", name: " + _this.name + ", from: " + _this.from + ", skillsUsed: " + A.S(_this.get$skillsUsed()) + ", company: " + A.S(_this.company) + ", to: " + A.S(_this.to) + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeType(_this))
          if (other instanceof A._$_Project0) {
            t1 = other.code === _this.code;
            if (t1 || t1) {
              t1 = other.name === _this.name;
              if (t1 || t1) {
                t1 = other.from === _this.from;
                if (t1 || t1)
                  if (B.C_DeepCollectionEquality.equals$2(other._skillsUsed, _this._skillsUsed)) {
                    t1 = other.company == _this.company;
                    if (t1 || t1) {
                      t1 = other.to == _this.to;
                      t1 = t1 || t1;
                    } else
                      t1 = false;
                  } else
                    t1 = false;
                else
                  t1 = false;
              } else
                t1 = false;
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeType(_this), _this.code, _this.name, _this.from, B.C_DeepCollectionEquality.hash$1(0, _this._skillsUsed), _this.company, _this.to);
    },
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["code", _this.code, "name", _this.name, "from", _this.from, "skillsUsed", _this.get$skillsUsed(), "company", _this.company, "to", _this.to], type$.String, type$.dynamic);
    },
    $isProject0: 1,
    get$code(receiver) {
      return this.code;
    },
    get$name(receiver) {
      return this.name;
    },
    get$from() {
      return this.from;
    },
    get$company() {
      return this.company;
    },
    get$to() {
      return this.to;
    }
  };
  A._$ProjectDescription.prototype = {
    get$title(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$description() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$urls() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$copyWith() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    copyWith$1$title(arg0) {
      return this.get$copyWith().call$1$title(arg0);
    }
  };
  A._$ProjectDescriptionCopyWithImpl.prototype = {
    call$3$description$title$urls(description, title, urls) {
      var t1 = this._projects$_value,
        t2 = B.C_Freezed === title ? t1.title : A._asStringQ(title),
        t3 = B.C_Freezed === description ? t1.description : A._asStringQ(description);
      return this._then.call$1(this.$ti._eval$1("_$ProjectDescriptionCopyWithImpl.1")._as(t1.copyWith$3$description$title$urls(t3, t2, B.C_Freezed === urls ? t1.get$urls() : type$.nullable_List_ProjectUrl._as(urls))));
    },
    call$0() {
      return this.call$3$description$title$urls(B.C_Freezed, B.C_Freezed, B.C_Freezed);
    },
    call$1$title(title) {
      return this.call$3$description$title$urls(B.C_Freezed, title, B.C_Freezed);
    }
  };
  A.__$$_ProjectDescriptionCopyWithImpl.prototype = {
    call$3$description$title$urls(description, title, urls) {
      var _this = this,
        t1 = B.C_Freezed === title ? _this._projects$_value.title : A._asStringQ(title),
        t2 = B.C_Freezed === description ? _this._projects$_value.description : A._asStringQ(description),
        t3 = B.C_Freezed === urls ? _this._projects$_value._urls : type$.nullable_List_ProjectUrl._as(urls);
      return _this._then.call$1(new A._$_ProjectDescription(t1, t2, t3));
    },
    call$0() {
      return this.call$3$description$title$urls(B.C_Freezed, B.C_Freezed, B.C_Freezed);
    },
    call$1$title(title) {
      return this.call$3$description$title$urls(B.C_Freezed, title, B.C_Freezed);
    }
  };
  A._$_ProjectDescription.prototype = {
    get$urls() {
      var value = this._urls;
      if (value == null)
        return null;
      if (value instanceof A.EqualUnmodifiableListView)
        return value;
      return new A.EqualUnmodifiableListView(value, value, type$.EqualUnmodifiableListView_ProjectUrl);
    },
    toString$0(_) {
      return "ProjectDescription(title: " + A.S(this.title) + ", description: " + A.S(this.description) + ", urls: " + A.S(this.get$urls()) + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeType(_this))
          if (other instanceof A._$_ProjectDescription) {
            t1 = other.title == _this.title;
            if (t1 || t1) {
              t1 = other.description == _this.description;
              t1 = (t1 || t1) && B.C_DeepCollectionEquality.equals$2(other._urls, _this._urls);
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeType(_this), _this.title, _this.description, B.C_DeepCollectionEquality.hash$1(0, _this._urls), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    get$copyWith() {
      return new A.__$$_ProjectDescriptionCopyWithImpl(this, B.CONSTANT0, type$.__$$_ProjectDescriptionCopyWithImpl__$_ProjectDescription);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["title", this.title, "description", this.description, "urls", this.get$urls()], type$.String, type$.dynamic);
    },
    $isProjectDescription: 1,
    copyWith$1$title(arg0) {
      return this.get$copyWith().call$1$title(arg0);
    },
    copyWith$3$description$title$urls(arg0, arg1, arg2) {
      return this.get$copyWith().call$3$description$title$urls(arg0, arg1, arg2);
    },
    get$title(receiver) {
      return this.title;
    },
    get$description() {
      return this.description;
    }
  };
  A._$ProjectUrl.prototype = {
    get$title(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$url(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    }
  };
  A._$_ProjectUrl.prototype = {
    toString$0(_) {
      return "ProjectUrl(title: " + this.title + ", url: " + this.url + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeType(_this))
          if (other instanceof A._$_ProjectUrl) {
            t1 = other.title === _this.title;
            if (t1 || t1) {
              t1 = other.url === _this.url;
              t1 = t1 || t1;
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), this.title, this.url, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["title", this.title, "url", this.url], type$.String, type$.dynamic);
    },
    $isProjectUrl: 1,
    get$title(receiver) {
      return this.title;
    },
    get$url(receiver) {
      return this.url;
    }
  };
  A._$$_ProjectsFromJson_closure.prototype = {
    call$1(e) {
      return A._$$_ProjectFromJson0(type$.Map_String_dynamic._as(e));
    },
    $signature: 39
  };
  A._$$_ProjectFromJson_closure1.prototype = {
    call$1(e) {
      return A._asString(e);
    },
    $signature: 22
  };
  A._$$_ProjectDescriptionFromJson_closure.prototype = {
    call$1(e) {
      type$.Map_String_dynamic._as(e);
      return new A._$_ProjectUrl(A._asString(e.$index(0, "title")), A._asString(e.$index(0, "url")));
    },
    $signature: 40
  };
  A._Project_Object__$Project0.prototype = {};
  A._ProjectDescription_Object__$ProjectDescription.prototype = {};
  A._ProjectUrl_Object__$ProjectUrl.prototype = {};
  A._Projects_Object__$Projects.prototype = {};
  A.Skills0.prototype = {};
  A.Skill.prototype = {};
  A._$Skills.prototype = {
    get$skills() {
      return A.throwExpression($.$get$_privateConstructorUsedError4());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError4());
    }
  };
  A._$_Skills.prototype = {
    get$skills() {
      var t1 = this._skills$_skills;
      if (t1 instanceof A.EqualUnmodifiableListView)
        return t1;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Skill);
    },
    toString$0(_) {
      return "Skills(skills: " + A.S(this.get$skills()) + ")";
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = J.get$runtimeType$(other) === A.getRuntimeType(this) && other instanceof A._$_Skills && B.C_DeepCollectionEquality.equals$2(other._skills$_skills, this._skills$_skills);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), B.C_DeepCollectionEquality.hash$1(0, this._skills$_skills), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["skills", this.get$skills()], type$.String, type$.dynamic);
    },
    $isSkills0: 1
  };
  A._$Skill.prototype = {
    get$name(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError4());
    },
    get$primary() {
      return A.throwExpression($.$get$_privateConstructorUsedError4());
    },
    get$icon() {
      return A.throwExpression($.$get$_privateConstructorUsedError4());
    },
    get$level() {
      return A.throwExpression($.$get$_privateConstructorUsedError4());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError4());
    }
  };
  A._$_Skill.prototype = {
    toString$0(_) {
      var _this = this;
      return "Skill(name: " + _this.name + ", primary: " + _this.primary + ", icon: " + A.S(_this.icon) + ", level: " + _this.level + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (J.get$runtimeType$(other) === A.getRuntimeType(_this))
          if (other instanceof A._$_Skill) {
            t1 = other.name === _this.name;
            if (t1 || t1) {
              t1 = other.primary === _this.primary;
              if (t1 || t1) {
                t1 = other.icon == _this.icon;
                if (t1 || t1) {
                  t1 = other.level === _this.level;
                  t1 = t1 || t1;
                } else
                  t1 = false;
              } else
                t1 = false;
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeType(_this), _this.name, _this.primary, _this.icon, _this.level, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["name", _this.name, "primary", _this.primary, "icon", _this.icon, "level", _this.level], type$.String, type$.dynamic);
    },
    $isSkill: 1,
    get$name(receiver) {
      return this.name;
    },
    get$primary() {
      return this.primary;
    },
    get$icon() {
      return this.icon;
    },
    get$level() {
      return this.level;
    }
  };
  A._$$_SkillsFromJson_closure.prototype = {
    call$1(e) {
      var t1, t2;
      type$.Map_String_dynamic._as(e);
      t1 = A._asString(e.$index(0, "name"));
      t2 = A._asBoolQ(e.$index(0, "primary"));
      return new A._$_Skill(t1, t2 === true, A._asStringQ(e.$index(0, "icon")), A._asInt(e.$index(0, "level")));
    },
    $signature: 41
  };
  A._Skill_Object__$Skill.prototype = {};
  A._Skills_Object__$Skills.prototype = {};
  A.NavigationPanel.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_String;
                t2 = type$.JSArray_Component;
                $async$goto = 2;
                return new A.DomComponent("div", null, A._setArrayType(["fullHeight"], t1), null, null, null, new A.DomComponent("div", null, A._setArrayType(["container", "push-down"], t1), null, null, null, null, A._setArrayType([A.div(A._setArrayType([A.h5(A._setArrayType([new A.Text(A.I18nContextExtension_i18n(context, "cvTitle"), false, null)], t2), A._setArrayType(["brand-logo", "white-text"], t1))], t2), null, null), new A.Builder(new A.NavigationPanel_build_closure($async$self), null), A.div(A._setArrayType([A.div(A._setArrayType([new A.PdfCVLinkComponent(null)], t2), A._setArrayType(["center-align"], t1), null)], t2), A._setArrayType(["row"], t1), null), A.div(A._setArrayType([new A.LangSelector(null)], t2), A._setArrayType(["row"], t1), null)], t2), null), null, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.NavigationPanel_build_closure.prototype = {
    call$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.TableOfContents($async$self.$this.anchors, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.TableOfContents.prototype = {
    build$1(context) {
      var _null = null;
      return A._setArrayType([new A.DomComponent("ul", _null, A._setArrayType(["section", "table-of-contents"], type$.JSArray_String), _null, _null, _null, new A.Builder(new A.TableOfContents_build_closure(this), _null), _null, _null)], type$.JSArray_Component);
    }
  };
  A.TableOfContents_build_closure.prototype = {
    call$1(innerContext) {
      var t1 = this.$this.anchors,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("Component(1)")._as(new A.TableOfContents_build__closure(innerContext)), t2._eval$1("MappedListIterable<1,Component>"));
    },
    $signature: 1
  };
  A.TableOfContents_build__closure.prototype = {
    call$1(code) {
      var t1, _null = null;
      A._asString(code);
      t1 = type$.JSArray_Component;
      return A.li(A._setArrayType([A.a(A._setArrayType([new A.Text(A.I18nContextExtension_i18n(this.innerContext, code), false, _null)], t1), A._setArrayType(["white-text"], type$.JSArray_String), "#" + code, _null)], t1), _null, _null);
    },
    $signature: 19
  };
  A.PdfCVLinkComponent.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, path;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                path = A.ProviderContext_watch(context, $.$get$pdfCVFileProvider(), type$.String);
                $async$goto = 2;
                return A.a(A._setArrayType([A.img(A._setArrayType(["pdf-icon", "center-align"], type$.JSArray_String), "https://upload.wikimedia.org/wikipedia/commons/8/87/PDF_file_icon.svg")], type$.JSArray_Component), null, path, B.Target_blank);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.DataAccessParams.prototype = {};
  A.dataAccessProvider_closure.prototype = {
    call$1(ref) {
      var t1 = this.T;
      return this.$call$body$dataAccessProvider_closure(t1._eval$1("FutureProviderRef<0>")._as(ref), t1);
    },
    $call$body$dataAccessProvider_closure(ref, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, t2, contentResponse;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.params;
              t2 = t1.path;
              $async$goto = 3;
              return A._asyncAwait(A.get(A._Uri__Uri(null, "public/data/" + t2 + "/" + ref.watch$1$1($.$get$selectedLanguageProvider(), type$.SupportedLanguages)._name + ".json", null, null)), $async$call$1);
            case 3:
              // returning from await.
              contentResponse = $async$result;
              $async$goto = contentResponse.statusCode === 200 ? 4 : 5;
              break;
            case 4:
              // then
              $async$goto = 6;
              return A._asyncAwait(t1.convert.call$1(new A.Utf8Decoder(false).convert$1(contentResponse.bodyBytes)), $async$call$1);
            case 6:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 5:
              // join
              throw A.wrapException(A.Exception_Exception("Can't load " + t2 + "."));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature() {
      return this.T._eval$1("Future<0>(FutureProviderRef<0>)");
    }
  };
  A.hobbiesProvider_closure.prototype = {
    call$1(input) {
      return A._$$_HobbiesFromJson(type$.Map_String_dynamic._as(B.C_JsonCodec.decode$1(0, A._asString(input)))).get$hobbies();
    },
    $signature: 43
  };
  A.pdfCVFileProvider_closure.prototype = {
    call$1(ref) {
      return "public/generated/cv-" + type$.ProviderRef_String._as(ref).watch$1$1($.$get$selectedLanguageProvider(), type$.SupportedLanguages)._name + ".pdf";
    },
    $signature: 44
  };
  A._skillsDataProvider_closure.prototype = {
    call$1(ref) {
      return this.$call$body$_skillsDataProvider_closure(type$.FutureProviderRef_Skills._as(ref));
    },
    $call$body$_skillsDataProvider_closure(ref) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Skills),
        $async$returnValue, contentResponse;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A.get(A._Uri__Uri(null, "public/data/skills/skills_data.json", null, null)), $async$call$1);
            case 3:
              // returning from await.
              contentResponse = $async$result;
              if (contentResponse.statusCode === 200) {
                $async$returnValue = A._$$_SkillsFromJson(type$.Map_String_dynamic._as(B.C_JsonCodec.decode$1(0, new A.Utf8Decoder(false).convert$1(contentResponse.bodyBytes))));
                // goto return
                $async$goto = 1;
                break;
              }
              throw A.wrapException(A.Exception_Exception("Can't load skills."));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 45
  };
  A.skillsProvider_closure.prototype = {
    call$1(ref) {
      return A.AsyncValueX_whenData(type$.ProviderRef_AsyncValue_List_List_Skill._as(ref).watch$1$1($.$get$_skillsDataProvider(), type$.AsyncValue_Skills), new A.skillsProvider__closure(), type$.Skills, type$.List_List_Skill);
    },
    $signature: 46
  };
  A.skillsProvider__closure.prototype = {
    call$1(skillsData) {
      var t1, t2, t3, t4,
        skills = J.toList$0$ax(type$.Skills._as(skillsData).get$skills());
      B.JSArray_methods.sort$1(skills, new A.skillsProvider___closure());
      t1 = A._arrayInstanceType(skills);
      t2 = t1._eval$1("bool(1)");
      t3 = t2._as(new A.skillsProvider___closure0());
      t1 = t1._eval$1("WhereIterable<1>");
      t2 = t2._as(new A.skillsProvider___closure1());
      t4 = type$.Skill;
      t3 = A.List_List$of(A._Windowed_windowed(new A.WhereIterable(skills, t3, t1), 3, t4), true, type$.List_Skill);
      B.JSArray_methods.addAll$1(t3, A._Windowed_windowed(new A.WhereIterable(skills, t2, t1), 4, t4));
      return t3;
    },
    $signature: 36
  };
  A.skillsProvider___closure.prototype = {
    call$2(a, b) {
      var t1 = type$.Skill;
      t1._as(a);
      t1._as(b);
      return -B.JSInt_methods.compareTo$1(a.get$level(), b.get$level());
    },
    $signature: 48
  };
  A.skillsProvider___closure0.prototype = {
    call$1(skill) {
      return type$.Skill._as(skill).get$primary();
    },
    $signature: 21
  };
  A.skillsProvider___closure1.prototype = {
    call$1(skill) {
      return !type$.Skill._as(skill).get$primary();
    },
    $signature: 21
  };
  A._projectsProvider_closure.prototype = {
    call$1(ref) {
      return this.$call$body$_projectsProvider_closure(type$.FutureProviderRef_Projects._as(ref));
    },
    $call$body$_projectsProvider_closure(ref) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Projects),
        $async$returnValue, contentResponse;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A.get(A._Uri__Uri(null, "public/data/history/projects.json", null, null)), $async$call$1);
            case 3:
              // returning from await.
              contentResponse = $async$result;
              if (contentResponse.statusCode === 200) {
                $async$returnValue = A._$$_ProjectsFromJson(type$.Map_String_dynamic._as(B.C_JsonCodec.decode$1(0, new A.Utf8Decoder(false).convert$1(contentResponse.bodyBytes))));
                // goto return
                $async$goto = 1;
                break;
              }
              throw A.wrapException(A.Exception_Exception("Can't load skills."));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 50
  };
  A.projectsProvider_closure.prototype = {
    call$1(ref) {
      var t1 = type$.List_Project;
      return A.AsyncValueX_whenData(A.AsyncValueX_whenData(type$.ProviderRef_AsyncValue_List_Project._as(ref).watch$1$1($.$get$_projectsProvider(), type$.AsyncValue_Projects), new A.projectsProvider__closure(), type$.Projects, t1), new A.projectsProvider__closure0(), t1, t1);
    },
    $signature: 51
  };
  A.projectsProvider__closure.prototype = {
    call$1(value) {
      return type$.Projects._as(value).get$projects();
    },
    $signature: 52
  };
  A.projectsProvider__closure0.prototype = {
    call$1(list) {
      var t1 = J.toList$0$ax(type$.List_Project._as(list));
      B.JSArray_methods.sort$1(t1, new A.projectsProvider___closure());
      return t1;
    },
    $signature: 53
  };
  A.projectsProvider___closure.prototype = {
    call$2(a, b) {
      var t2,
        t1 = type$.Project;
      t1._as(a);
      t1._as(b);
      t1 = a.get$to();
      if (t1 == null)
        t1 = "9999-12";
      t2 = b.get$to();
      return -B.JSString_methods.compareTo$1(t1, t2 == null ? "9999-12" : t2);
    },
    $signature: 54
  };
  A._projectDescriptionProvider_closure.prototype = {
    call$2(ref, project) {
      return this.$call$body$_projectDescriptionProvider_closure(type$.FutureProviderRef_ProjectDescription._as(ref), type$.Project._as(project));
    },
    $call$body$_projectDescriptionProvider_closure(ref, project) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.ProjectDescription),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], contentResponse, stringContent, json, $content, filePath;
      var $async$call$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              filePath = "public/data/history/" + project.get$code(project) + "/" + ref.watch$1$1($.$get$selectedLanguageProvider(), type$.SupportedLanguages)._name + ".json";
              $async$handler = 3;
              $async$goto = 6;
              return A._asyncAwait(A.get(A._Uri__Uri(null, filePath, null, null)), $async$call$2);
            case 6:
              // returning from await.
              contentResponse = $async$result;
              if (contentResponse.statusCode === 200) {
                stringContent = new A.Utf8Decoder(false).convert$1(contentResponse.bodyBytes);
                json = B.C_JsonCodec.decode$2$reviver(0, stringContent, null);
                $content = A._$$_ProjectDescriptionFromJson(type$.Map_String_dynamic._as(json));
                $async$returnValue = $content;
                $async$next = [1];
                // goto finally
                $async$goto = 4;
                break;
              }
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              $async$returnValue = new A._$_ProjectDescription(project.get$name(project), null, null);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$2, $async$completer);
    },
    $signature: 55
  };
  A.projectDescriptionProvider_closure.prototype = {
    call$2(ref, project) {
      var t1;
      type$.ProviderRef_ProjectDescription._as(ref);
      type$.Project._as(project);
      t1 = type$.ProjectDescription;
      return A.AsyncValueX_maybeWhen(ref.watch$1$1($.$get$_projectDescriptionProvider().call$1(project), type$.AsyncValue_ProjectDescription), new A.projectDescriptionProvider__closure(project), new A.projectDescriptionProvider__closure0(project), t1, t1);
    },
    $signature: 56
  };
  A.projectDescriptionProvider__closure0.prototype = {
    call$0() {
      var t1 = this.project;
      return new A._$_ProjectDescription(t1.get$name(t1), null, null);
    },
    $signature: 57
  };
  A.projectDescriptionProvider__closure.prototype = {
    call$1(data) {
      var t1;
      type$.ProjectDescription._as(data);
      t1 = data.get$title(data);
      if (t1 == null) {
        t1 = this.project;
        t1 = t1.get$name(t1);
      }
      return data.copyWith$1$title(t1);
    },
    $signature: 58
  };
  A.ContactData.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.Scrollspy("contactData", A.ContentSection$(new A.Builder(new A.ContactData_build_closure(A.ProviderContext_watch(context, $.$get$contactDataProvider(), type$.AsyncValue_ContactData)), null), A._setArrayType(["bg-violet"], type$.JSArray_String), null), null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.ContactData_build_closure.prototype = {
    call$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.ContentTitle(A.I18nContextExtension_i18n(context, "contactData"), null);
              case 2:
                // after yield
                $async$goto = 3;
                return A._IterationMarker_yieldStar(A.AsyncValueX_when($async$self.contactData, new A.ContactData_build__closure(), new A.ContactData_build__closure0(), new A.ContactData_build__closure1(), false, true, false, type$.ContactData, type$.Iterable_Component));
              case 3:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.ContactData_build__closure.prototype = {
    call$1(data) {
      return this.$call$body$ContactData_build__closure(type$.ContactData._as(data));
    },
    $call$body$ContactData_build__closure($async$data) {
      return A._makeSyncStarIterable(function() {
        var data = $async$data;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.DomComponent("ul", null, A._setArrayType(["collection"], type$.JSArray_String), null, null, null, new A.Builder(new A.ContactData_build___closure(data), null), null, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 59
  };
  A.ContactData_build___closure.prototype = {
    call$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t3, t4, t5, t6, t7, t8, t9, t1, t2;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = A.I18nContextExtension_i18n(context, "nameAndSurname");
                t2 = type$.JSArray_String;
                $async$goto = 2;
                return A.ListItem$(null, null, A.img(A._setArrayType(["circle", "responsive-img"], t2), "public/images/profile_photo.jpg"), t1);
              case 2:
                // after yield
                t1 = A.I18nContextExtension_i18n(context, "address");
                t3 = $async$self.data;
                t4 = type$.JSArray_Component;
                t5 = A.p(A._setArrayType([new A.Text(t3.get$address(), false, null)], t4), null);
                $async$goto = 3;
                return A.SimpleListItem$(A._setArrayType(["indigo"], t2), t5, new A.Text("place", false, null), t1);
              case 3:
                // after yield
                t1 = A.I18nContextExtension_i18n(context, "social");
                t5 = A._setArrayType(["lime-darken"], t2);
                t6 = A._setArrayType([A.i(A._setArrayType([], t4), A._setArrayType(["small social-linkedin"], t2), null), A.span(A._setArrayType([new A.Text(" LinkedIn", false, null)], t4), A._setArrayType(["no-text-transform hide-on-small-only"], t2), null, null)], t4);
                t7 = t3.get$linkedin();
                t7 = A.a(t6, A._setArrayType(["waves-effect", "waves-lime", "btn-flat"], t2), t7, null);
                t6 = A._setArrayType([A.i(A._setArrayType([], t4), A._setArrayType(["small social-github"], t2), null), A.span(A._setArrayType([new A.Text(" GitHub", false, null)], t4), A._setArrayType(["no-text-transform hide-on-small-only"], t2), null, null)], t4);
                t8 = t3.get$github();
                t8 = A.a(t6, A._setArrayType(["waves-effect", "waves-lime", "btn-flat"], t2), t8, null);
                t6 = A._setArrayType([A.i(A._setArrayType([], t4), A._setArrayType(["small social-bitbucket"], t2), null), A.span(A._setArrayType([new A.Text(" Bitbucket", false, null)], t4), A._setArrayType(["no-text-transform hide-on-small-only"], t2), null, null)], t4);
                t3 = t3.get$bitbucket();
                t9 = type$.MappedListIterable_Component_Component;
                $async$goto = 4;
                return A.SimpleListItem$(t5, A.div(A.List_List$of(new A.MappedListIterable(A._setArrayType([t7, t8, A.a(t6, A._setArrayType(["waves-effect", "waves-lime", "btn-flat"], t2), t3, null)], t4), type$.Component_Function_Component._as(new A.ContactData_build____closure()), t9), true, t9._eval$1("ListIterable.E")), A._setArrayType(["row"], t2), null), new A.Text("public", false, null), t1);
              case 4:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.ContactData_build____closure.prototype = {
    call$1(component) {
      return A.div(A._setArrayType([type$.Component._as(component)], type$.JSArray_Component), A._setArrayType(["col s4"], type$.JSArray_String), null);
    },
    $signature: 60
  };
  A.ContactData_build__closure0.prototype = {
    call$2(error, stackTrace) {
      return A._setArrayType([new A.Text("Error: " + A.S(error), false, null)], type$.JSArray_Component);
    },
    $signature: 61
  };
  A.ContactData_build__closure1.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_Component);
    },
    $signature: 3
  };
  A.Education.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return A.ContentSection$(new A.Builder(new A.Education_build_closure(), null), A._setArrayType(["bg-violet"], type$.JSArray_String), "education");
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.Education_build_closure.prototype = {
    call$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.ContentTitle(A.I18nContextExtension_i18n(context, "education"), null);
              case 2:
                // after yield
                $async$goto = 3;
                return A.ul(A.AsyncValueX_maybeWhen(A.ProviderContext_watch(context, $.$get$educationProvider(), type$.AsyncValue_Education), new A.Education_build__closure(), new A.Education_build__closure0(), type$.Education, type$.List_Component), A._setArrayType(["collection"], type$.JSArray_String));
              case 3:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.Education_build__closure0.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_Component);
    },
    $signature: 3
  };
  A.Education_build__closure.prototype = {
    call$1(data) {
      return J.map$1$1$ax(type$.Education._as(data).get$collegeStudies(), new A.Education_build___closure(), type$._StudiesComponent).toList$1$growable(0, false);
    },
    $signature: 63
  };
  A.Education_build___closure.prototype = {
    call$1(e) {
      return new A._StudiesComponent(type$.CollegeStudy._as(e), null);
    },
    $signature: 64
  };
  A._StudiesComponent.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.study;
                t2 = type$.JSArray_Component;
                t3 = type$.JSArray_String;
                $async$goto = 2;
                return A.li(A._setArrayType([A.p(A._setArrayType([new A.Text(t1.get$title(t1), false, null)], t2), A._setArrayType(["cv-title"], t3)), A.p(A._setArrayType([new A.Text(t1.get$period(), false, null)], t2), A._setArrayType(["text-small"], t3))], t2), A._setArrayType(["collection-item"], t3), null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.Hobbies.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return A.ContentSection$(new A.Builder(new A.Hobbies_build_closure(), null), A._setArrayType(["bg-gravel"], type$.JSArray_String), "hobbies");
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.Hobbies_build_closure.prototype = {
    call$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.ContentTitle(A.I18nContextExtension_i18n(context, "hobbies"), null);
              case 2:
                // after yield
                $async$goto = 3;
                return A.ul(A.AsyncValueX_maybeWhen(A.ProviderContext_watch(context, $.$get$hobbiesProvider(), type$.AsyncValue_List_Hobby), new A.Hobbies_build__closure(), new A.Hobbies_build__closure0(), type$.List_Hobby, type$.List_Component), null);
              case 3:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.Hobbies_build__closure0.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_Component);
    },
    $signature: 3
  };
  A.Hobbies_build__closure.prototype = {
    call$1(hobbies) {
      return J.map$1$1$ax(type$.List_Hobby._as(hobbies), new A.Hobbies_build___closure(), type$.Component).toList$1$growable(0, false);
    },
    $signature: 65
  };
  A.Hobbies_build___closure.prototype = {
    call$1(hobby) {
      type$.Hobby._as(hobby);
      return A.li(A._setArrayType([A.img(null, "public/images/ic_" + hobby.get$iconCode() + ".svg"), new A.Text(hobby.get$name(hobby), false, null)], type$.JSArray_Component), A._setArrayType(["chip"], type$.JSArray_String), null);
    },
    $signature: 66
  };
  A.ForeignLanguages.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return A.ContentSection$(new A.Builder(new A.ForeignLanguages_build_closure(), null), A._setArrayType(["bg-coral"], type$.JSArray_String), "foreignLanguages");
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.ForeignLanguages_build_closure.prototype = {
    call$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.ContentTitle(A.I18nContextExtension_i18n(context, "foreignLanguages"), null);
              case 2:
                // after yield
                $async$goto = 3;
                return A.ul(A.AsyncValueX_maybeWhen(A.ProviderContext_watch(context, $.$get$languagesProvider(), type$.AsyncValue_ForeignLanguages), new A.ForeignLanguages_build__closure(), new A.ForeignLanguages_build__closure0(), type$.ForeignLanguages, type$.List_Component), null);
              case 3:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.ForeignLanguages_build__closure0.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_Component);
    },
    $signature: 3
  };
  A.ForeignLanguages_build__closure.prototype = {
    call$1(data) {
      var t1 = A.ListExtensions_mapIndexed(type$.ForeignLanguages._as(data).get$known(), new A.ForeignLanguages_build___closure(), type$.Language, type$._LanguageItem);
      return A.List_List$of(t1, false, t1.$ti._eval$1("Iterable.E"));
    },
    $signature: 67
  };
  A.ForeignLanguages_build___closure.prototype = {
    call$2(index, e) {
      return new A._LanguageItem(type$.Language._as(e), index, null);
    },
    $signature: 68
  };
  A._LanguageItem.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._known;
                t2 = type$.JSArray_Component;
                t3 = type$.JSArray_String;
                t2 = A._setArrayType([A.div(A._setArrayType([A.span(A._setArrayType([new A.Text(t1.get$name(t1), false, null)], t2), A._setArrayType(["card-title"], t3), null, null), A.p(A._setArrayType([new A.Text(t1.get$details(), false, null)], t2), null)], t2), A._setArrayType(["card-content", "white-text"], t3), null)], t2);
                t3 = A._setArrayType(["card"], t3);
                B.JSArray_methods.addAll$1(t3, $._LanguageItem__colorsPalette[B.JSInt_methods.$mod($async$self._languages$_index, 3)]);
                $async$goto = 2;
                return A.li(t2, t3, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.OtherProjects.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return A.ContentSection$(new A.Builder(new A.OtherProjects_build_closure(), null), A._setArrayType(["bg-spun-pearl"], type$.JSArray_String), "otherProjects");
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.OtherProjects_build_closure.prototype = {
    call$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.ContentTitle(A.I18nContextExtension_i18n(context, "otherProjects"), null);
              case 2:
                // after yield
                $async$goto = 3;
                return A.div(A.AsyncValueX_maybeWhen(A.ProviderContext_watch(context, $.$get$otherProjectsProvider(), type$.AsyncValue_OtherProjects), new A.OtherProjects_build__closure(), new A.OtherProjects_build__closure0(), type$.OtherProjects, type$.List_Component), A._setArrayType(["row"], type$.JSArray_String), null);
              case 3:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.OtherProjects_build__closure0.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_Component);
    },
    $signature: 3
  };
  A.OtherProjects_build__closure.prototype = {
    call$1(data) {
      return J.map$1$1$ax(type$.OtherProjects._as(data).get$projects(), new A.OtherProjects_build___closure(), type$._ProjectCard).map$1$1(0, new A.OtherProjects_build___closure0(), type$.Component).toList$0(0);
    },
    $signature: 69
  };
  A.OtherProjects_build___closure.prototype = {
    call$1(project) {
      return new A._ProjectCard(type$.Project_2._as(project), null);
    },
    $signature: 70
  };
  A.OtherProjects_build___closure0.prototype = {
    call$1(card) {
      var t1 = type$.JSArray_Component,
        t2 = type$.JSArray_String;
      return A.div(A._setArrayType([A.div(A._setArrayType([type$._ProjectCard._as(card)], t1), A._setArrayType(["card"], t2), null)], t1), A._setArrayType(["col", "m12", "l6"], t2), null);
    },
    $signature: 71
  };
  A._ProjectCard.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.project;
                t2 = t1.get$imageUrl();
                t2 = t2 == null ? null : t2.length === 0;
                $async$goto = t2 !== false ? 2 : 4;
                break;
              case 2:
                // then
                $async$goto = 5;
                return new A._SimpleProjectCard(t1, null);
              case 5:
                // after yield
                // goto join
                $async$goto = 3;
                break;
              case 4:
                // else
                $async$goto = 6;
                return new A._RichProjectCard(t1, null);
              case 6:
                // after yield
              case 3:
                // join
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A._RichProjectCard.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t3, t4, t5, t6, t1, t2;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.project;
                t2 = t1.get$imageUrl();
                t2.toString;
                t2 = A.img(null, t2);
                t3 = type$.JSArray_Component;
                t4 = type$.JSArray_String;
                t5 = A._setArrayType([A.i(A._setArrayType([new A.Text("folder", false, null)], t3), A._setArrayType(["material-icons"], t4), null)], t3);
                t6 = t1.get$repositoryUrl();
                if (t6 == null)
                  t6 = "";
                $async$goto = 2;
                return A.div(A._setArrayType([t2, A.a(t5, A._setArrayType(["btn-floating", "btn-large", "halfway-fab", "amber", "accent-2"], t4), t6, B.Target_blank)], t3), A._setArrayType(["card-image"], t4), null);
              case 2:
                // after yield
                $async$goto = 3;
                return A.div(A._setArrayType([A.span(A._setArrayType([new A.Text(t1.get$title(t1), false, null)], t3), A._setArrayType(["card-title"], t4), null, null), new A.Text(t1.get$description(), false, null), new A._SkillsUsed(t1.get$skills(), null), A.div(J.map$1$1$ax(t1.get$deploymentUrls(), new A._RichProjectCard_build_closure(), type$._DeploymentUrl).toList$1$growable(0, false), A._setArrayType(["card-action"], t4), null)], t3), A._setArrayType(["card-content"], t4), null);
              case 3:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A._RichProjectCard_build_closure.prototype = {
    call$1(deploymentUrl) {
      return A._DeploymentUrl$(type$.DeploymentUrl._as(deploymentUrl));
    },
    $signature: 29
  };
  A._SimpleProjectCard.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t8, t9, t1, t2, t3, t4, t5, t6, t7;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.project;
                t2 = type$.JSArray_Component;
                t3 = type$.JSArray_String;
                t4 = A.span(A._setArrayType([new A.Text(t1.get$title(t1), false, null)], t2), A._setArrayType(["card-title"], t3), null, null);
                t5 = t1.get$description();
                t6 = t1.get$skills();
                t7 = A._setArrayType([], t2);
                if (t1.get$repositoryUrl() != null) {
                  t8 = A._setArrayType([new A.Text(A.I18nContextExtension_i18n(context, "repositoryUrl"), false, null)], t2);
                  t9 = t1.get$repositoryUrl();
                  t9.toString;
                  t7.push(A.a(t8, null, t9, B.Target_blank));
                }
                B.JSArray_methods.addAll$1(t7, J.map$1$1$ax(t1.get$deploymentUrls(), new A._SimpleProjectCard_build_closure(), type$._DeploymentUrl).toList$1$growable(0, false));
                $async$goto = 2;
                return A.div(A._setArrayType([t4, new A.Text(t5, false, null), new A._SkillsUsed(t6, null), A.div(t7, A._setArrayType(["card-action"], t3), null)], t2), A._setArrayType(["card-content"], t3), null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A._SimpleProjectCard_build_closure.prototype = {
    call$1(deploymentUrl) {
      return A._DeploymentUrl$(type$.DeploymentUrl._as(deploymentUrl));
    },
    $signature: 29
  };
  A._SkillsUsed.prototype = {
    build$1(context) {
      return A._setArrayType([A.div(J.map$1$1$ax(this.skills, new A._SkillsUsed_build_closure(), type$.Component).toList$1$growable(0, false), A._setArrayType(["section", "techs"], type$.JSArray_String), null)], type$.JSArray_Component);
    }
  };
  A._SkillsUsed_build_closure.prototype = {
    call$1(s) {
      var t1, t2, t3;
      A._asString(s);
      t1 = A._setArrayType([], type$.JSArray_Component);
      t2 = A._setArrayType(["icon-tech-" + s], type$.JSArray_String);
      t3 = type$.String;
      return A.b(t1, A.LinkedHashMap_LinkedHashMap$_literal(["title", s], t3, t3), t2);
    },
    $signature: 19
  };
  A._DeploymentUrl.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, classes, t2, icon, t3;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_String;
                classes = A._setArrayType([], t1);
                t2 = type$.JSArray_Component;
                icon = A._setArrayType([], t2);
                t3 = $async$self.url;
                switch (t3.get$type(t3)) {
                  case "WEBSITE":
                    classes = A._setArrayType(["material-icons"], t1);
                    icon = A._setArrayType([new A.Text("public", false, null)], t2);
                    break;
                  case "APPLE_APPSTORE":
                    classes = A._setArrayType(["fab", "fa-app-store"], t1);
                    break;
                  case "GOOGLE_PLAY":
                    classes = A._setArrayType(["fab", "fa-google-play"], t1);
                    break;
                }
                t2 = A._setArrayType([A.i(icon, classes, new A._TextStyles(null, new A._RemUnit("rem", 1.5), null))], t2);
                t3 = t3.get$url(t3);
                t1 = A._setArrayType(["waves-effect", "accent-2"], t1);
                B.JSArray_methods.addAll$1(t1, $async$self._other_projects$_classes);
                $async$goto = 2;
                return A.a(t2, t1, t3, B.Target_blank);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.Skills.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.Scrollspy("skills", A.ContentSection$(new A.Builder(new A.Skills_build_closure(), null), A._setArrayType(["bg-gravel"], type$.JSArray_String), null), null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.Skills_build_closure.prototype = {
    call$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.ContentTitle(A.I18nContextExtension_i18n(context, "skills"), null);
              case 2:
                // after yield
                $async$goto = 3;
                return A._IterationMarker_yieldStar(A.AsyncValueX_maybeWhen(A.ProviderContext_watch(context, $.$get$skillsProvider(), type$.AsyncValue_List_List_Skill), new A.Skills_build__closure(), new A.Skills_build__closure0(), type$.List_List_Skill, type$.Iterable_Component));
              case 3:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.Skills_build__closure0.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_Component);
    },
    $signature: 3
  };
  A.Skills_build__closure.prototype = {
    call$1(skillsRows) {
      return this.$call$body$Skills_build__closure(type$.List_List_Skill._as(skillsRows));
    },
    $call$body$Skills_build__closure($async$skillsRows) {
      return A._makeSyncStarIterable(function() {
        var skillsRows = $async$skillsRows;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, t4, t5;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = J.get$iterator$ax(skillsRows), t2 = type$.JSArray_String, t3 = type$.Component;
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                t4 = t1.get$current();
                t5 = J.getInterceptor$asx(t4);
                $async$goto = 4;
                return A.div(t5.map$1$1(t4, new A.Skills_build___closure(A._setArrayType(["col", "s" + A.S(12 / t5.get$length(t4))], t2)), t3).toList$1$growable(0, false), A._setArrayType(["row valign-wrapper"], t2), null);
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 73
  };
  A.Skills_build___closure.prototype = {
    call$1(skill) {
      type$.Skill._as(skill);
      return A.div(A._setArrayType([new A.Builder(new A.Skills_build____closure(skill, skill.get$primary()), null)], type$.JSArray_Component), this.colClasses, null);
    },
    $signature: 74
  };
  A.Skills_build____closure.prototype = {
    call$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t2, iconComponent, t3, t1;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.skill;
                $async$goto = t1.get$icon() != null ? 2 : 3;
                break;
              case 2:
                // then
                t2 = type$.JSArray_Component;
                iconComponent = A.i(A._setArrayType([], t2), A._setArrayType(["icon-tech-" + A.S(t1.get$icon())], type$.JSArray_String), null);
                $async$goto = $async$self.primary ? 4 : 6;
                break;
              case 4:
                // then
                t2 = A._setArrayType([iconComponent], t2);
                t3 = A.List_List$of(B.List_6nc, true, type$.String);
                t3.push("h2");
                $async$goto = 7;
                return A.p(t2, t3);
              case 7:
                // after yield
                // goto join
                $async$goto = 5;
                break;
              case 6:
                // else
                $async$goto = 8;
                return A.h3(A._setArrayType([iconComponent], t2), B.List_6nc);
              case 8:
                // after yield
              case 5:
                // join
              case 3:
                // join
                t2 = type$.JSArray_Component;
                $async$goto = $async$self.primary ? 9 : 11;
                break;
              case 9:
                // then
                $async$goto = 12;
                return A.h3(A._setArrayType([new A.Text(t1.get$name(t1), false, null)], t2), B.List_6nc);
              case 12:
                // after yield
                // goto join
                $async$goto = 10;
                break;
              case 11:
                // else
                $async$goto = 13;
                return A.h5(A._setArrayType([new A.Text(t1.get$name(t1), false, null)], t2), B.List_6nc);
              case 13:
                // after yield
              case 10:
                // join
                $async$goto = 14;
                return A.p(A._setArrayType([new A.Text("" + t1.get$level() + "/10", false, null)], t2), B.List_6nc);
              case 14:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.WorkTimeline.prototype = {
    build$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return A.ContentSection$(new A.Builder(new A.WorkTimeline_build_closure(), null), A._setArrayType(["bg-coral"], type$.JSArray_String), "workTimeline");
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.WorkTimeline_build_closure.prototype = {
    call$1($async$context) {
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return new A.ContentTitle(A.I18nContextExtension_i18n(context, "projects"), null);
              case 2:
                // after yield
                $async$goto = 3;
                return new A.Collapsible("collapsibleTimeline", new A.Builder(new A.WorkTimeline_build__closure(), null), "ul", null);
              case 3:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    $signature: 1
  };
  A.WorkTimeline_build__closure.prototype = {
    call$1(context) {
      return A.AsyncValueX_maybeWhen(A.ProviderContext_watch(context, $.$get$projectsProvider(), type$.AsyncValue_List_Project), new A.WorkTimeline_build___closure(), new A.WorkTimeline_build___closure0(), type$.List_Project, type$.Iterable_Component);
    },
    $signature: 1
  };
  A.WorkTimeline_build___closure0.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_Component);
    },
    $signature: 3
  };
  A.WorkTimeline_build___closure.prototype = {
    call$1(data) {
      return J.map$1$1$ax(type$.List_Project._as(data), new A.WorkTimeline_build____closure(), type$.Builder).toList$1$growable(0, false);
    },
    $signature: 75
  };
  A.WorkTimeline_build____closure.prototype = {
    call$1(project) {
      return A.Builder$single(new A.WorkTimeline_build_____closure(type$.Project._as(project)));
    },
    $signature: 76
  };
  A.WorkTimeline_build_____closure.prototype = {
    call$1(context) {
      var t1;
      type$.BuildContext._as(context);
      t1 = this.project;
      return A.li(A._setArrayType([new A._ProjectListItemContent(t1, null)], type$.JSArray_Component), A._setArrayType(["project"], type$.JSArray_String), t1.get$code(t1));
    },
    $signature: 77
  };
  A._ProjectListItemContent.prototype = {
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t3, t4, t5, t6, t7, t1, description, t2;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.project;
                description = A.ProviderContext_watch(context, $.$get$projectDescriptionProvider().call$1(t1), type$.ProjectDescription);
                t2 = description.get$title(description);
                if (t2 == null)
                  t2 = t1.get$name(t1);
                t3 = type$.JSArray_Component;
                t2 = A._setArrayType([A.h5(A._setArrayType([new A.Text(t2, false, null)], t3), null)], t3);
                if (t1.get$company() != null) {
                  t4 = t1.get$company();
                  t4.toString;
                  t2.push(A.span(A._setArrayType([new A.Text(t4, false, null)], t3), null, null, B._TextStyles_ITt));
                }
                t4 = type$.JSArray_String;
                t5 = type$.Component;
                $async$goto = 2;
                return A.div(A._setArrayType([A.div(t2, A._setArrayType(["col", "s8", "l9"], t4), null), A.div(A._setArrayType([A.span(J.map$1$1$ax(t1.get$skillsUsed(), new A._ProjectListItemContent_build_closure(), t5).toList$1$growable(0, false), A._setArrayType(["techs", "right-align"], t4), null, null)], t3), A._setArrayType(["col", "s4", "l3", "valign-wrapper"], t4), null)], t3), A._setArrayType(["collapsible-header"], t4), null);
              case 2:
                // after yield
                t2 = t1.get$from();
                t1 = t1.get$to();
                if (t1 == null)
                  t1 = A.I18nContextExtension_i18n(context, "now");
                t1 = A._setArrayType([new A.Text(t2 + " - " + t1, false, null)], t3);
                t2 = A._setArrayType(["white-text"], t4);
                t6 = A._setArrayType([], t3);
                if (description.get$description() != null) {
                  t7 = description.get$description();
                  t7.toString;
                  t6.push(new A.MarkdownComponent(t7, null));
                }
                t7 = description.get$urls();
                if (t7 == null)
                  t7 = A._setArrayType([], type$.JSArray_ProjectUrl);
                t6.push(A.p(J.map$1$1$ax(t7, new A._ProjectListItemContent_build_closure0(), t5).fold$1$2(0, A._setArrayType([], t3), new A._ProjectListItemContent_build_closure1(), type$.List_Component), null));
                $async$goto = 3;
                return A.div(A._setArrayType([A.div(A._setArrayType([new A.DomComponent("h6", null, t2, B._TextStyles_wbZ, null, null, null, t1, null), A.div(t6, A._setArrayType(["white-text"], t4), null)], t3), null, null)], t3), A._setArrayType(["collapsible-body"], t4), null);
              case 3:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A._ProjectListItemContent_build_closure.prototype = {
    call$1(code) {
      var t1, t2, t3;
      A._asString(code);
      t1 = A._setArrayType([], type$.JSArray_Component);
      t2 = A._setArrayType(["icon-tech-" + code.toLowerCase()], type$.JSArray_String);
      t3 = type$.String;
      return A.b(t1, A.LinkedHashMap_LinkedHashMap$_literal(["title", code], t3, t3), t2);
    },
    $signature: 19
  };
  A._ProjectListItemContent_build_closure0.prototype = {
    call$1(url) {
      var t1, _null = null;
      type$.ProjectUrl._as(url);
      t1 = type$.JSArray_Component;
      return A.a(A._setArrayType([A.span(A._setArrayType([new A.Text(url.get$title(url), false, _null)], t1), A._setArrayType(["grey-text", "text-lighten-3"], type$.JSArray_String), _null, _null)], t1), _null, url.get$url(url), B.Target_blank);
    },
    $signature: 78
  };
  A._ProjectListItemContent_build_closure1.prototype = {
    call$2(previousValue, element) {
      var t1;
      type$.List_Component._as(previousValue);
      t1 = type$.Component;
      t1._as(element);
      t1 = A.List_List$of(previousValue, true, t1);
      t1.push(element);
      t1.push(new A.Text(" ", false, null));
      return t1;
    },
    $signature: 79
  };
  A.SupportedLanguages.prototype = {
    _enumToString$0() {
      return "SupportedLanguages." + this._name;
    }
  };
  A.selectedLanguageProvider_closure.prototype = {
    call$1(_) {
      type$.StateProviderRef_SupportedLanguages._as(_);
      return B.SupportedLanguages_0;
    },
    $signature: 80
  };
  A._currentTranslationProvider_closure.prototype = {
    call$1(ref) {
      return this.$call$body$_currentTranslationProvider_closure(type$.FutureProviderRef_Map_String_String._as(ref));
    },
    $call$body$_currentTranslationProvider_closure(ref) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_String),
        $async$returnValue, t1, translationContentResponse;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A.get(A._Uri__Uri(null, "public/data/translations." + ref.watch$1$1($.$get$selectedLanguageProvider(), type$.SupportedLanguages)._name + ".json", null, null)), $async$call$1);
            case 3:
              // returning from await.
              translationContentResponse = $async$result;
              if (translationContentResponse.statusCode === 200) {
                t1 = type$.String;
                $async$returnValue = type$.Map_dynamic_dynamic._as(B.C_JsonCodec.decode$2$reviver(0, new A.Utf8Decoder(false).convert$1(translationContentResponse.bodyBytes), null)).cast$2$0(0, t1, t1);
                // goto return
                $async$goto = 1;
                break;
              }
              throw A.wrapException(A.Exception_Exception("Can't load translations."));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 81
  };
  A.i18nProvider_closure.prototype = {
    call$2(ref, code) {
      type$.ProviderRef_AsyncValue_String._as(ref);
      A._asString(code);
      return A.AsyncValueX_whenData(ref.watch$1$1($.$get$_currentTranslationProvider(), type$.AsyncValue_Map_String_String), new A.i18nProvider__closure(code), type$.Map_String_String, type$.String);
    },
    $signature: 82
  };
  A.i18nProvider__closure.prototype = {
    call$1(translations) {
      var t1 = type$.Map_String_String._as(translations).$index(0, this.code);
      t1.toString;
      return t1;
    },
    $signature: 83
  };
  A.I18nContextExtension_i18n_closure0.prototype = {
    call$0() {
      return "";
    },
    $signature: 84
  };
  A.I18nContextExtension_i18n_closure.prototype = {
    call$1(text) {
      return A._asString(text);
    },
    $signature: 15
  };
  A.EqualUnmodifiableListView.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return this.$ti._is(other) && A.getRuntimeType(other) === A.getRuntimeType(this) && J.$eq$(other._freezed_annotation$_source, this._freezed_annotation$_source);
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), this._freezed_annotation$_source, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.Freezed.prototype = {
    toJson$0() {
      return null.call$0();
    }
  };
  A.get_closure.prototype = {
    call$1(client) {
      return client._sendUnstreamed$3("GET", this.url, type$.nullable_Map_String_String._as(this.headers));
    },
    $signature: 85
  };
  A.BaseClient.prototype = {
    _sendUnstreamed$3(method, url, headers) {
      return this._sendUnstreamed$body$BaseClient(method, url, type$.nullable_Map_String_String._as(headers));
    },
    _sendUnstreamed$body$BaseClient(method, url, headers) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, request, $async$temp1;
      var $async$_sendUnstreamed$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              request = A.Request$(method, url);
              $async$temp1 = A;
              $async$goto = 3;
              return A._asyncAwait($async$self.send$1(0, request), $async$_sendUnstreamed$3);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.Response_fromStream($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_sendUnstreamed$3, $async$completer);
    },
    $isClient: 1
  };
  A.BaseRequest.prototype = {
    finalize$0() {
      if (this._finalized)
        throw A.wrapException(A.StateError$("Can't finalize a finalized Request."));
      this._finalized = true;
      return B.ByteStream__EmptyStream;
    },
    toString$0(_) {
      return this.method + " " + this.url.toString$0(0);
    }
  };
  A.BaseRequest_closure.prototype = {
    call$2(key1, key2) {
      return A._asString(key1).toLowerCase() === A._asString(key2).toLowerCase();
    },
    $signature: 86
  };
  A.BaseRequest_closure0.prototype = {
    call$1(key) {
      return B.JSString_methods.get$hashCode(A._asString(key).toLowerCase());
    },
    $signature: 87
  };
  A.BaseResponse.prototype = {
    BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request(statusCode, contentLength, headers, isRedirect, persistentConnection, reasonPhrase, request) {
      var t1 = this.statusCode;
      if (t1 < 100)
        throw A.wrapException(A.ArgumentError$("Invalid status code " + t1 + ".", null));
    }
  };
  A.BrowserClient.prototype = {
    send$1(_, request) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.StreamedResponse),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, xhr, completer, bytes, t1, t2, t3, t4, t5;
      var $async$send$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              request.super$BaseRequest$finalize();
              $async$goto = 3;
              return A._asyncAwait(new A.ByteStream(A.Stream_Stream$value(request._bodyBytes, type$.List_int)).toBytes$0(), $async$send$1);
            case 3:
              // returning from await.
              bytes = $async$result;
              t1 = new XMLHttpRequest();
              t1.toString;
              xhr = t1;
              t1 = $async$self._xhrs;
              t1.add$1(0, xhr);
              t2 = xhr;
              t3 = J.getInterceptor$x(t2);
              t3.open$3$async(t2, request.method, request.url.toString$0(0), true);
              t2.responseType = "arraybuffer";
              t3.set$withCredentials(t2, false);
              request.headers.forEach$1(0, J.get$setRequestHeader$x(xhr));
              completer = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_StreamedResponse), type$._AsyncCompleter_StreamedResponse);
              t2 = type$.nullable_EventTarget;
              t3 = type$._EventStream_ProgressEvent;
              t4 = new A._EventStream(t2._as(xhr), "load", false, t3);
              t5 = type$.void;
              t4.get$first(t4).then$1$1(new A.BrowserClient_send_closure(xhr, completer, request), t5);
              t3 = new A._EventStream(t2._as(xhr), "error", false, t3);
              t3.get$first(t3).then$1$1(new A.BrowserClient_send_closure0(completer, request), t5);
              J.send$1$x(xhr, bytes);
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(completer.future, $async$send$1);
            case 7:
              // returning from await.
              t2 = $async$result;
              $async$returnValue = t2;
              $async$next = [1];
              // goto finally
              $async$goto = 5;
              break;
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // uncaught
              $async$next = [2];
            case 5:
              // finally
              $async$handler = 2;
              t1.remove$1(0, xhr);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$send$1, $async$completer);
    },
    close$0(_) {
      var t1, t2, t3;
      for (t1 = this._xhrs, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        (t3 == null ? t2._as(t3) : t3).abort();
      }
    }
  };
  A.BrowserClient_send_closure.prototype = {
    call$1(_) {
      var t1, body, t2, t3, t4, t5, t6;
      type$.ProgressEvent._as(_);
      t1 = this.xhr;
      body = A.NativeUint8List_NativeUint8List$view(type$.ByteBuffer._as(A._convertNativeToDart_XHR_Response(t1.response)), 0, null);
      t2 = A.Stream_Stream$value(body, type$.List_int);
      t3 = t1.status;
      t3.toString;
      t4 = body.length;
      t5 = this.request;
      t6 = B.HttpRequest_methods.get$responseHeaders(t1);
      t1 = t1.statusText;
      t2 = new A.StreamedResponse(A.toByteStream(new A.ByteStream(t2)), t5, t3, t1, t4, t6, false, true);
      t2.BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request(t3, t4, t6, false, true, t1, t5);
      this.completer.complete$1(0, t2);
    },
    $signature: 24
  };
  A.BrowserClient_send_closure0.prototype = {
    call$1(_) {
      type$.ProgressEvent._as(_);
      this.completer.completeError$2(new A.ClientException("XMLHttpRequest error."), A.StackTrace_current());
    },
    $signature: 24
  };
  A.ByteStream.prototype = {
    toBytes$0() {
      var t1 = new A._Future($.Zone__current, type$._Future_Uint8List),
        completer = new A._AsyncCompleter(t1, type$._AsyncCompleter_Uint8List),
        sink = new A._ByteCallbackSink(new A.ByteStream_toBytes_closure(completer), new Uint8Array(1024));
      this.listen$4$cancelOnError$onDone$onError(type$.void_Function_List_int._as(sink.get$add(sink)), true, sink.get$close(sink), completer.get$completeError());
      return t1;
    }
  };
  A.ByteStream_toBytes_closure.prototype = {
    call$1(bytes) {
      return this.completer.complete$1(0, new Uint8Array(A._ensureNativeList(type$.List_int._as(bytes))));
    },
    $signature: 89
  };
  A.ClientException.prototype = {
    toString$0(_) {
      return this.message;
    },
    $isException: 1
  };
  A.Request.prototype = {};
  A.Response.prototype = {};
  A.StreamedResponse.prototype = {};
  A.AppBinding.prototype = {
    _loadRawState$0() {
      var t1 = self.jaspr,
        stateData = A.decodeConfig(t1 == null ? null : J.get$sync$x(t1));
      if (stateData != null)
        this._rawState.addAll$1(0, stateData);
    },
    scheduleFrame$1(frameCallback) {
      var t1, t2;
      type$.void_Function._as(frameCallback);
      t1 = window;
      t1.toString;
      t2 = type$.void_Function_num._as(new A.AppBinding_scheduleFrame_closure(frameCallback));
      B.Window_methods._ensureRequestAnimationFrame$0(t1);
      t2 = A._wrapZone(t2, type$.num);
      t2.toString;
      B.Window_methods._requestAnimationFrame$1(t1, t2);
    }
  };
  A.AppBinding_scheduleFrame_closure.prototype = {
    call$1(highResTime) {
      A._asNum(highResTime);
      this.frameCallback.call$0();
    },
    $signature: 90
  };
  A._AppBinding_BindingBase_SchedulerBinding.prototype = {
    initInstances$0() {
      this.super$BindingBase$initInstances();
      $.SchedulerBinding__instance = this;
    }
  };
  A._AppBinding_BindingBase_SchedulerBinding_ComponentsBinding.prototype = {
    initInstances$0() {
      this.super$_AppBinding_BindingBase_SchedulerBinding$initInstances();
      $.ComponentsBinding__instance = this;
    }
  };
  A._AppBinding_BindingBase_SchedulerBinding_ComponentsBinding_SyncBinding.prototype = {
    initInstances$0() {
      this.super$_AppBinding_BindingBase_SchedulerBinding_ComponentsBinding$initInstances();
      $.SyncBinding__instance = this;
    }
  };
  A.DomNodeData.prototype = {
    clearEvents$0() {
      var t1 = this.events;
      if (t1 != null)
        t1.forEach$1(0, new A.DomNodeData_clearEvents_closure());
      this.set$events(null);
    },
    set$node(node) {
      this.node = type$.nullable_Node._as(node);
    },
    set$toHydrate(toHydrate) {
      this.toHydrate = type$.List_Node._as(toHydrate);
    },
    set$events(events) {
      this.events = type$.nullable_Map_String__EventBinding._as(events);
    }
  };
  A.DomNodeData_clearEvents_closure.prototype = {
    call$2(type, binding) {
      A._asString(type);
      type$._EventBinding._as(binding).clear$0(0);
    },
    $signature: 91
  };
  A._EventBinding.prototype = {
    _EventBinding$3(element, type, fn) {
      var t1 = new A.ElementEvents(element).$index(0, this.type),
        t2 = t1.$ti,
        t3 = t2._eval$1("~(1)?")._as(new A._EventBinding_closure(this));
      type$.nullable_void_Function._as(null);
      this.subscription = A._EventStreamSubscription$(t1._target, t1._eventType, t3, false, t2._precomputed1);
    },
    clear$0(_) {
      var t1 = this.subscription;
      if (t1 != null)
        t1.cancel$0();
      this.subscription = null;
    },
    set$fn(fn) {
      this.fn = type$.void_Function_Event._as(fn);
    }
  };
  A._EventBinding_closure.prototype = {
    call$1($event) {
      this.$this.fn.call$1($event);
    },
    $signature: 16
  };
  A.BrowserDomRenderer.prototype = {
    renderNode$7(element, tag, id, classes, styles, attributes, events) {
      var t1, data, attributesToRemove, elem, toHydrate, t2, t3, nodes, old, _i, child, t4, t5, t6, t7, t8, prevEventTypes, _null = null;
      type$.nullable_List_String._as(classes);
      t1 = type$.nullable_Map_String_String;
      t1._as(styles);
      t1._as(attributes);
      type$.nullable_Map_of_String_and_void_Function_dynamic._as(events);
      data = A.DomNodeDataExt_get_data(element);
      attributesToRemove = A._Cell$named("attributesToRemove");
      elem = A._Cell$named("elem");
      $label0$0: {
        t1 = data.node;
        if (t1 == null) {
          t1 = element._parentNode;
          t1.toString;
          toHydrate = A.DomNodeDataExt_get_data(t1).toHydrate;
          if (B.JSArray_methods.get$isNotEmpty(toHydrate))
            for (t1 = B.JSArray_methods.get$iterator(toHydrate), t2 = type$.Element; t1.moveNext$0();) {
              t3 = t1.get$current();
              if (t2._is(t3) && t3.tagName.toLowerCase() === tag) {
                elem.__late_helper$_value = data.node = t3;
                t1 = new A._ElementAttributeMap(t3).get$keys();
                attributesToRemove.__late_helper$_value = A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1);
                B.JSArray_methods.remove$1(toHydrate, t3);
                nodes = new A._ChildNodeListLazy(t3);
                data.set$toHydrate(nodes.toList$0(nodes));
                break $label0$0;
              }
            }
          t1 = document.createElement(tag);
          elem.__late_helper$_value = data.node = t1;
          attributesToRemove.__late_helper$_value = A.LinkedHashSet_LinkedHashSet$_empty(type$.String);
        } else {
          t2 = type$.Element;
          if (!t2._is(t1) || t1.tagName.toLowerCase() !== tag) {
            t1 = document.createElement(tag);
            elem.__late_helper$_value = t1;
            old = data.node;
            old.toString;
            J.replaceWith$1$x(old, elem._readLocal$0());
            data.set$node(elem._readLocal$0());
            t1 = old.childNodes;
            t1.toString;
            t1 = B.NodeList_methods.get$isEmpty(t1);
            if (!t1) {
              t1 = old.childNodes;
              t1.toString;
              t1 = A.List_List$of(t1, true, type$.Node);
              for (t2 = t1.length, t3 = elem.__late_helper$_name, _i = 0; _i < t2; ++_i) {
                child = t1[_i];
                t4 = elem.__late_helper$_value;
                if (t4 === elem)
                  A.throwExpression(A.LateError$localNI(t3));
                J.append$1$x(t4, child);
              }
            }
            attributesToRemove.__late_helper$_value = A.LinkedHashSet_LinkedHashSet$_empty(type$.String);
          } else {
            elem.__late_helper$_value = t2._as(t1);
            t1 = new A._ElementAttributeMap(elem._readLocal$0()).get$keys();
            attributesToRemove.__late_helper$_value = A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1);
          }
        }
      }
      A._extension_1_clearOrSetAttribute(elem._readLocal$0(), "id", id);
      t1 = elem._readLocal$0();
      A._extension_1_clearOrSetAttribute(t1, "class", classes == null || classes.length === 0 ? _null : (classes && B.JSArray_methods).join$1(classes, " "));
      t1 = elem._readLocal$0();
      A._extension_1_clearOrSetAttribute(t1, "style", styles == null || styles.__js_helper$_length === 0 ? _null : styles.get$entries(styles).map$1$1(0, new A.BrowserDomRenderer_renderNode_closure(), type$.String).join$1(0, "; "));
      t1 = attributes == null;
      if (!t1 && attributes.__js_helper$_length !== 0)
        for (t2 = attributes.get$entries(attributes), t2 = t2.get$iterator(t2), t3 = type$.InputElement, t4 = elem.__late_helper$_name; t2.moveNext$0();) {
          t5 = t2.get$current();
          t6 = t5.key;
          if (J.$eq$(t6, "value")) {
            t7 = elem.__late_helper$_value;
            if (t7 === elem)
              A.throwExpression(A.LateError$localNI(t4));
            if (t3._is(t7)) {
              t7 = t7.value;
              t8 = t5.value;
              t8 = t7 == null ? t8 != null : t7 !== t8;
              t7 = t8;
            } else
              t7 = false;
          } else
            t7 = false;
          if (t7) {
            t6 = elem.__late_helper$_value;
            if (t6 === elem)
              A.throwExpression(A.LateError$localNI(t4));
            J.set$value$x(t6, t5.value);
            continue;
          }
          t7 = elem.__late_helper$_value;
          if (t7 === elem)
            A.throwExpression(A.LateError$localNI(t4));
          A._extension_1_clearOrSetAttribute(t7, t6, t5.value);
        }
      t2 = attributesToRemove._readLocal$0();
      t3 = ["id", "class", "style"];
      t1 = t1 ? _null : new A.LinkedHashMapKeyIterable(attributes, A._instanceType(attributes)._eval$1("LinkedHashMapKeyIterable<1>"));
      if (t1 != null)
        B.JSArray_methods.addAll$1(t3, t1);
      t2.removeAll$1(t3);
      if (J.get$isNotEmpty$asx(attributesToRemove._readLocal$0()))
        for (t1 = J.get$iterator$ax(attributesToRemove._readLocal$0()), t2 = elem.__late_helper$_name; t1.moveNext$0();) {
          t3 = t1.get$current();
          t4 = elem.__late_helper$_value;
          if (t4 === elem)
            A.throwExpression(A.LateError$localNI(t2));
          J._removeAttribute$1$x(t4, t3);
        }
      if (events != null && events.__js_helper$_length !== 0) {
        t1 = data.events;
        if (t1 == null)
          prevEventTypes = _null;
        else {
          t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>");
          prevEventTypes = A.LinkedHashSet_LinkedHashSet(t2._eval$1("Iterable.E"));
          prevEventTypes.addAll$1(0, new A.LinkedHashMapKeyIterable(t1, t2));
        }
        if (data.events == null)
          data.set$events(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$._EventBinding));
        t1 = data.events;
        t1.toString;
        events.forEach$1(0, new A.BrowserDomRenderer_renderNode_closure0(prevEventTypes, t1, elem));
        if (prevEventTypes != null)
          prevEventTypes.forEach$1(0, new A.BrowserDomRenderer_renderNode_closure1(t1));
      } else
        data.clearEvents$0();
    },
    renderTextNode$3(element, text, rawHtml) {
      var t1, toHydrate, t2, t3,
        data = A.DomNodeDataExt_get_data(element);
      $label0$0: {
        t1 = data.node;
        if (t1 == null) {
          t1 = element._parentNode;
          t1.toString;
          toHydrate = A.DomNodeDataExt_get_data(t1).toHydrate;
          if (B.JSArray_methods.get$isNotEmpty(toHydrate))
            for (t1 = B.JSArray_methods.get$iterator(toHydrate), t2 = type$.Text; t1.moveNext$0();) {
              t3 = t1.get$current();
              if (t2._is(t3)) {
                data.node = t3;
                if (t3.textContent !== text)
                  J.set$text$x(t3, text);
                B.JSArray_methods.remove$1(toHydrate, t3);
                break $label0$0;
              }
            }
          t1 = document.createTextNode(text);
          t1.toString;
          data.node = t1;
        } else if (!type$.Text._is(t1)) {
          t2 = document.createTextNode(text);
          t2.toString;
          J.replaceWith$1$x(t1, t2);
          data.node = t2;
        } else if (t1.textContent !== text)
          J.set$text$x(t1, text);
      }
    },
    attachNode$3($parent, child, after) {
      var t1, nodes, t2, t3, t4, parentNode, childNode, afterNode, _this = this;
      if ($parent == null) {
        t1 = _this.container;
        nodes = new A._ChildNodeListLazy(t1);
        t2 = _this.from;
        t3 = t2 == null;
        nodes = nodes.skip$1(nodes, t3 ? 0 : t2);
        t4 = _this.to;
        if (t4 != null)
          nodes = nodes.take$1(0, t4 - (t3 ? 0 : t2));
        t2 = A.DomNodeDataExt_get_data(child);
        t2.node = t1;
        t2.set$toHydrate(nodes.toList$0(0));
        return;
      }
      parentNode = A.DomNodeDataExt_get_data($parent).node;
      childNode = A.DomNodeDataExt_get_data(child).node;
      if (childNode == null)
        return;
      afterNode = after == null ? null : A.DomNodeDataExt_get_data(after).node;
      if (afterNode == null)
        if (parentNode === _this.container) {
          t1 = _this.from;
          t1 = t1 != null && t1 > 0;
        } else
          t1 = false;
      else
        t1 = false;
      if (t1) {
        t1 = _this.container.childNodes;
        t1.toString;
        t2 = _this.from;
        t2.toString;
        --t2;
        if (!(t2 >= 0 && t2 < t1.length))
          return A.ioore(t1, t2);
        afterNode = t1[t2];
      }
      t1 = childNode.previousSibling;
      if (t1 == null ? afterNode == null : t1 === afterNode) {
        t1 = childNode.parentNode;
        t1 = t1 == null ? parentNode == null : t1 === parentNode;
      } else
        t1 = false;
      if (t1)
        return;
      if (afterNode == null) {
        t1 = parentNode.childNodes;
        if (t1.length === 0)
          parentNode.appendChild(childNode).toString;
        else
          J.insertBefore$2$x(parentNode, childNode, B.NodeList_methods.get$first(t1));
      } else {
        parentNode.toString;
        J.insertBefore$2$x(parentNode, childNode, afterNode.nextSibling);
      }
    },
    finalizeNode$1(element) {
      var t1, t2, t3;
      for (t1 = B.JSArray_methods.get$iterator(A.DomNodeDataExt_get_data(element).toHydrate); t1.moveNext$0();) {
        t2 = t1.get$current();
        t3 = t2.parentNode;
        if (t3 != null)
          t3.removeChild(t2).toString;
      }
      B.JSArray_methods.clear$0(A.DomNodeDataExt_get_data(element).toHydrate);
    }
  };
  A.BrowserDomRenderer_renderNode_closure.prototype = {
    call$1(e) {
      type$.MapEntry_String_String._as(e);
      return A.S(e.key) + ": " + A.S(e.value);
    },
    $signature: 92
  };
  A.BrowserDomRenderer_renderNode_closure0.prototype = {
    call$2(type, fn) {
      var t1, currentBinding;
      A._asString(type);
      type$.void_Function_dynamic._as(fn);
      t1 = this.prevEventTypes;
      if (t1 != null)
        t1.remove$1(0, type);
      t1 = this.dataEvents;
      currentBinding = t1.$index(0, type);
      if (currentBinding != null)
        currentBinding.set$fn(fn);
      else
        t1.$indexSet(0, type, A._EventBinding$(this.elem._readLocal$0(), type, fn));
    },
    $signature: 141
  };
  A.BrowserDomRenderer_renderNode_closure1.prototype = {
    call$1(type) {
      var t1 = this.dataEvents.remove$1(0, A._asString(type));
      if (t1 != null)
        J.clear$0$ax(t1);
    },
    $signature: 94
  };
  A._JasprConfig.prototype = {};
  A._IslandConfig.prototype = {};
  A._AppConfig.prototype = {};
  A.Builder.prototype = {
    build$1(context) {
      return this.builder.call$1(context);
    }
  };
  A._WrappedComponentBuilder.prototype = {
    call$1(context) {
      return this.$call$body$_WrappedComponentBuilder(type$.BuildContext._as(context));
    },
    $call$body$_WrappedComponentBuilder($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return $async$self._builder.call$1(context);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    }
  };
  A.BindingBase.prototype = {
    initInstances$0() {
    }
  };
  A.SchedulerPhase.prototype = {
    _enumToString$0() {
      return "SchedulerPhase." + this._name;
    }
  };
  A.SchedulerBinding.prototype = {
    scheduleBuild$1(buildCallback) {
      this.scheduleFrame$1(new A.SchedulerBinding_scheduleBuild_closure(this, type$.void_Function._as(buildCallback)));
    },
    _flushPostFrameCallbacks$0() {
      var _i,
        t1 = this.SchedulerBinding__postFrameCallbacks,
        localPostFrameCallbacks = A.List_List$of(t1, true, type$.void_Function);
      B.JSArray_methods.clear$0(t1);
      for (t1 = localPostFrameCallbacks.length, _i = 0; _i < t1; ++_i)
        localPostFrameCallbacks[_i].call$0();
    }
  };
  A.SchedulerBinding_scheduleBuild_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = type$.void_Function._as(this.buildCallback);
      t1.SchedulerBinding__schedulerPhase = B.SchedulerPhase_1;
      t2.call$0();
      t1.SchedulerBinding__schedulerPhase = B.SchedulerPhase_2;
      t1._flushPostFrameCallbacks$0();
      t1.SchedulerBinding__schedulerPhase = B.SchedulerPhase_0;
      return null;
    },
    $signature: 0
  };
  A.SyncBinding.prototype = {};
  A.StateCodec.prototype = {
    get$encoder() {
      return B.C_StateEncoder;
    }
  };
  A.StateDecoder.prototype = {
    convert$1(input) {
      var t1 = type$.BinaryCodec._eval$1("Codec.T")._as(B.C_Base64Decoder.convert$1(A._asString(input)));
      return B.C_BinaryCodec.get$decoder().convert$1(t1);
    }
  };
  A.StateEncoder.prototype = {
    convert$1(input) {
      var t1;
      type$.BinaryCodec._eval$1("Codec.S")._as(input);
      t1 = type$.Base64Codec._eval$1("Codec.S")._as(B.C_BinaryCodec.get$encoder().convert$1(input));
      return B.Base64Codec_Base64Encoder_true.get$encoder().convert$1(t1);
    }
  };
  A.BuildOwner.prototype = {
    scheduleBuildFor$1(element) {
      var _this = this;
      if (element._inDirtyList) {
        _this._dirtyElementsNeedsResorting = true;
        return;
      }
      if (!_this._scheduledBuild) {
        $.SchedulerBinding__instance.scheduleBuild$1(_this.get$performBuild());
        _this._scheduledBuild = true;
      }
      B.JSArray_methods.add$1(_this._dirtyElements, element);
      element._inDirtyList = true;
    },
    lockState$1(callback) {
      return this.lockState$body$BuildOwner(type$.void_Function._as(callback));
    },
    lockState$body$BuildOwner(callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$next = [], res;
      var $async$lockState$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 2;
              res = callback.call$0();
              $async$goto = type$.Future_dynamic._is(res) ? 5 : 6;
              break;
            case 5:
              // then
              $async$goto = 7;
              return A._asyncAwait(res, $async$lockState$1);
            case 7:
              // returning from await.
            case 6:
              // join
              $async$next.push(4);
              // goto finally
              $async$goto = 3;
              break;
            case 2:
              // uncaught
              $async$next = [1];
            case 3:
              // finally
              $async$handler = 1;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 4:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$lockState$1, $async$completer);
    },
    performRebuildOn$2(child, whenComplete) {
      var asyncFirstBuild, t1, buildCompleter, t2;
      type$.void_Function._as(whenComplete);
      if (!this._isFirstBuild) {
        child.performRebuild$0();
        whenComplete.call$0();
        return;
      }
      asyncFirstBuild = child._asyncFirstBuild;
      t1 = new A._Future($.Zone__current, type$._Future_dynamic);
      buildCompleter = new A._SyncCompleter(t1, type$._SyncCompleter_dynamic);
      t1.whenComplete$1(new A.BuildOwner_performRebuildOn_closure(child, buildCompleter, whenComplete));
      child._asyncFirstBuild = t1;
      t2 = child._parent;
      if (t2 != null)
        B.JSArray_methods.add$1(t2._asyncFirstBuildChildren, t1);
      if (asyncFirstBuild != null)
        asyncFirstBuild.whenComplete$1(new A.BuildOwner_performRebuildOn_closure0(this, child, buildCompleter));
      else
        this._rebuildAndWait$2(child, buildCompleter);
    },
    _rebuildAndWait$2(child, buildCompleter) {
      var asyncChildren;
      child.performRebuild$0();
      asyncChildren = child._asyncFirstBuildChildren;
      child.set$_asyncFirstBuildChildren(A._setArrayType([], type$.JSArray_Future_dynamic));
      if (asyncChildren.length !== 0)
        A.Future_wait(asyncChildren, type$.dynamic).whenComplete$1(new A.BuildOwner__rebuildAndWait_closure(buildCompleter));
      else
        buildCompleter.complete$0(0);
    },
    performBuild$0() {
      var dirtyCount, index, element, e, element0, t1, t2, t3, t4, t5, exception, _i, _this = this;
      try {
        t1 = _this._dirtyElements;
        B.JSArray_methods.sort$1(t1, A.framework_Element__sort$closure());
        _this._dirtyElementsNeedsResorting = false;
        dirtyCount = t1.length;
        index = 0;
        t2 = A._arrayInstanceType(t1);
        t3 = t2._eval$1("int(1,1)?");
        t2 = t2._precomputed1;
        while (true) {
          t4 = index;
          t5 = dirtyCount;
          if (typeof t4 !== "number")
            return t4.$lt();
          if (typeof t5 !== "number")
            return A.iae(t5);
          if (!(t4 < t5))
            break;
          element = B.JSArray_methods.$index(t1, index);
          try {
            element.rebuild$0();
            element.toString;
          } catch (exception) {
            e = A.unwrapException(exception);
            t1 = A.S(e);
            A.printString("Error on rebuilding component: " + t1);
            throw exception;
          }
          t4 = index;
          if (typeof t4 !== "number")
            return t4.$add();
          index = t4 + 1;
          t4 = dirtyCount;
          t5 = t1.length;
          if (typeof t4 !== "number")
            return t4.$lt();
          if (!(t4 < t5)) {
            t4 = _this._dirtyElementsNeedsResorting;
            t4.toString;
          } else
            t4 = true;
          if (t4) {
            t3._as(A.framework_Element__sort$closure());
            if (!!t1.immutable$list)
              A.throwExpression(A.UnsupportedError$("sort"));
            t4 = t5 - 1;
            if (t4 - 0 <= 32)
              A.Sort__insertionSort(t1, 0, t4, A.framework_Element__sort$closure(), t2);
            else
              A.Sort__dualPivotQuicksort(t1, 0, t4, A.framework_Element__sort$closure(), t2);
            t4 = _this._dirtyElementsNeedsResorting = false;
            dirtyCount = t1.length;
            while (true) {
              t5 = index;
              if (typeof t5 !== "number")
                return t5.$gt();
              if (t5 > 0) {
                t5 = index;
                if (typeof t5 !== "number")
                  return t5.$sub();
                t5 = B.JSArray_methods.$index(t1, t5 - 1)._dirty;
              } else
                t5 = t4;
              if (!t5)
                break;
              t5 = index;
              if (typeof t5 !== "number")
                return t5.$sub();
              index = t5 - 1;
            }
          }
        }
      } finally {
        for (t1 = _this._dirtyElements, t2 = t1.length, _i = 0; _i < t2; ++_i) {
          element0 = t1[_i];
          element0._inDirtyList = false;
        }
        B.JSArray_methods.clear$0(t1);
        _this._dirtyElementsNeedsResorting = null;
        _this.lockState$1(_this._inactiveElements.get$_unmountAll());
        _this._scheduledBuild = false;
      }
    }
  };
  A.BuildOwner_performRebuildOn_closure.prototype = {
    call$0() {
      var t1 = this.child;
      t1._asyncFirstBuild = null;
      t1 = t1._parent;
      if (t1 != null)
        B.JSArray_methods.remove$1(t1._asyncFirstBuildChildren, this.buildCompleter.future);
      this.whenComplete.call$0();
    },
    $signature: 11
  };
  A.BuildOwner_performRebuildOn_closure0.prototype = {
    call$0() {
      return this.$this._rebuildAndWait$2(this.child, this.buildCompleter);
    },
    $signature: 0
  };
  A.BuildOwner__rebuildAndWait_closure.prototype = {
    call$0() {
      return this.buildCompleter.complete$0(0);
    },
    $signature: 0
  };
  A.ComponentsBinding.prototype = {
    attachRootComponent$2$attachTo(app, attachTo) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, buildOwner;
      var $async$attachRootComponent$2$attachTo = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.ComponentsBinding__rootElements.$index(0, attachTo);
              buildOwner = t1 == null ? null : t1._owner;
              if (buildOwner == null)
                buildOwner = new A.BuildOwner(A._setArrayType([], type$.JSArray_Element), new A._InactiveElements(A.HashSet_HashSet(type$.Element_2)));
              $async$goto = 2;
              return A._asyncAwait(buildOwner.lockState$1(new A.ComponentsBinding_attachRootComponent_closure($async$self, buildOwner, attachTo, app)), $async$attachRootComponent$2$attachTo);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$attachRootComponent$2$attachTo, $async$completer);
    }
  };
  A.ComponentsBinding_attachRootComponent_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t2, t3, t4, t5, element, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.buildOwner;
              t1._isFirstBuild = true;
              t2 = $async$self.attachTo;
              t3 = $.$get$_queryReg().firstMatch$1(t2)._match;
              t4 = t3.length;
              if (1 >= t4) {
                $async$returnValue = A.ioore(t3, 1);
                // goto return
                $async$goto = 1;
                break;
              }
              t5 = t3[1];
              t5.toString;
              if (2 >= t4) {
                $async$returnValue = A.ioore(t3, 2);
                // goto return
                $async$goto = 1;
                break;
              }
              t4 = t3[2];
              t4 = A.Primitives_parseInt(t4 == null ? "" : t4, null);
              if (3 >= t3.length) {
                $async$returnValue = A.ioore(t3, 3);
                // goto return
                $async$goto = 1;
                break;
              }
              t3 = t3[3];
              t3 = A.Primitives_parseInt(t3 == null ? "" : t3, null);
              t5 = document.querySelector(t5);
              t5.toString;
              element = A._RootElement$(new A._Root($async$self.app, null));
              element._owner = t1;
              element._renderer = new A.BrowserDomRenderer(t5, t4, t3);
              element.super$Element$mount(null, null);
              element._firstBuild$0();
              t3 = element._asyncFirstBuild;
              $async$goto = t3 != null ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait(t3, $async$call$0);
            case 5:
              // returning from await.
            case 4:
              // join
              $async$self.$this.ComponentsBinding__rootElements.$indexSet(0, t2, element);
              t1._isFirstBuild = false;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 95
  };
  A._Root.prototype = {
    createElement$0(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new A._RootElement(null, t1, this, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    }
  };
  A._RootElement.prototype = {
    get$component() {
      return type$._Root._as(A.Element.prototype.get$component.call(this));
    },
    _firstBuild$0() {
      this._attach$0();
      this.super$__RootElement_SingleChildElement_RenderElement$_firstBuild(null);
    },
    renderNode$1(renderer) {
    },
    build$0() {
      return type$._Root._as(A.Element.prototype.get$component.call(this)).child;
    }
  };
  A.DomComponent.prototype = {
    createElement$0(_) {
      var t1 = A.HashSet_HashSet(type$.Element_2),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.DomElement(null, t1, t2, this, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    }
  };
  A.DomElement.prototype = {
    get$component() {
      return type$.DomComponent._as(A.Element.prototype.get$component.call(this));
    },
    build$0() {
      var t1 = type$.DomComponent._as(A.Element.prototype.get$component.call(this)),
        t2 = type$.JSArray_Component,
        t3 = A._setArrayType([], t2),
        t4 = t1._child;
      if (t4 != null)
        t3.push(t4);
      t1 = t1._children;
      B.JSArray_methods.addAll$1(t3, t1 == null ? A._setArrayType([], t2) : t1);
      return t3;
    },
    update$1(newComponent) {
      this.super$_DomElement_MultiChildElement_RenderElement$update(type$.DomComponent._as(newComponent));
      this._dirty = true;
      this.rebuild$0();
    },
    renderNode$1(renderer) {
      var t6, t7, _this = this,
        t1 = type$.DomComponent,
        t2 = t1._as(A.Element.prototype.get$component.call(_this)),
        t3 = t1._as(A.Element.prototype.get$component.call(_this)),
        t4 = t1._as(A.Element.prototype.get$component.call(_this)),
        t5 = t1._as(A.Element.prototype.get$component.call(_this)).styles;
      if (t5 == null)
        t5 = null;
      else {
        t6 = type$.String;
        t6 = A.LinkedHashMap_LinkedHashMap$_empty(t6, t6);
        if (t5.fontStyle != null)
          t6.$indexSet(0, "font-style", "italic");
        t7 = t5.fontSize;
        if (t7 != null)
          t6.$indexSet(0, "font-size", A.S(t7._value) + t7._unit);
        t5 = t5.fontWeight;
        if (t5 != null)
          t6.$indexSet(0, "font-weight", t5.value);
        t5 = t6;
      }
      renderer.renderNode$7(_this, t2.tag, t3.id, t4.classes, t5, t1._as(A.Element.prototype.get$component.call(_this)).attributes, t1._as(A.Element.prototype.get$component.call(_this)).events);
    }
  };
  A.Text.prototype = {
    createElement$0(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new A.TextElement(null, t1, this, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    }
  };
  A.NoChildElement.prototype = {
    mount$2($parent, prevSibling) {
      this.super$Element$mount($parent, prevSibling);
      this._firstBuild$0();
    },
    _firstBuild$1(onBuilt) {
      type$.nullable_void_Function._as(onBuilt);
      this.super$Element$_firstBuild(onBuilt);
      this.rebuild$1(onBuilt);
    },
    performRebuild$0() {
      this._dirty = false;
    },
    visitChildren$1(visitor) {
      type$.void_Function_Element._as(visitor);
    }
  };
  A.TextElement.prototype = {
    get$component() {
      return type$.Text_2._as(A.Element.prototype.get$component.call(this));
    },
    renderNode$1(renderer) {
      var t1 = type$.Text_2,
        t2 = t1._as(A.Element.prototype.get$component.call(this));
      t1._as(A.Element.prototype.get$component.call(this));
      renderer.renderTextNode$3(this, t2.text, false);
    }
  };
  A.Component.prototype = {};
  A._ElementLifecycle.prototype = {
    _enumToString$0() {
      return "_ElementLifecycle." + this._name;
    }
  };
  A.Element.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return this === other;
    },
    get$hashCode(_) {
      return this._cachedHash;
    },
    get$component() {
      var t1 = this._component;
      t1.toString;
      return t1;
    },
    updateLastChild$1(child) {
      var t1, _this = this;
      _this._lastChild = child;
      _this._lastNode = child == null ? null : child.get$_lastNode();
      t1 = _this._parent;
      if (J.$eq$(t1 == null ? null : t1._lastChild, _this)) {
        t1 = _this._parent;
        t1 = t1 == null ? null : t1.get$_lastNode();
        t1 = !J.$eq$(t1, _this.get$_lastNode());
      } else
        t1 = false;
      if (t1)
        _this._parent.updateLastChild$1(_this);
    },
    updateChild$3(child, newComponent, prevSibling) {
      var t1, newChild, _this = this;
      if (newComponent == null) {
        if (child != null) {
          if (J.$eq$(_this._lastChild, child))
            _this.updateLastChild$1(prevSibling);
          _this.deactivateChild$1(child);
        }
        return null;
      }
      if (child != null)
        if (child._component === newComponent) {
          t1 = J.$eq$(child._prevSibling, prevSibling);
          if (!t1)
            child.updatePrevSibling$1(prevSibling);
          newChild = child;
        } else {
          t1 = child.get$component();
          t1 = A.getRuntimeType(t1) === A.getRuntimeType(newComponent) && true;
          if (t1) {
            t1 = J.$eq$(child._prevSibling, prevSibling);
            if (!t1)
              child.updatePrevSibling$1(prevSibling);
            child.update$1(newComponent);
            newChild = child;
          } else {
            _this.deactivateChild$1(child);
            newChild = _this.inflateComponent$2(newComponent, prevSibling);
          }
        }
      else
        newChild = _this.inflateComponent$2(newComponent, prevSibling);
      if (J.$eq$(_this._lastChild, prevSibling))
        _this.updateLastChild$1(newChild);
      return newChild;
    },
    mount$2($parent, prevSibling) {
      var t1, t2, _this = this;
      _this._parent = $parent;
      _this._prevSibling = prevSibling;
      if (prevSibling == null)
        if (type$.RenderElement._is($parent))
          t1 = null;
        else
          t1 = $parent == null ? null : $parent._prevAncestorSibling;
      else
        t1 = prevSibling;
      _this._prevAncestorSibling = t1;
      if (type$.RenderElement._is($parent))
        t1 = $parent;
      else
        t1 = $parent == null ? null : $parent._parentNode;
      _this._parentNode = t1;
      _this._lifecycleState = B._ElementLifecycle_1;
      t1 = $parent != null;
      if (t1) {
        t2 = $parent._depth;
        t2.toString;
        ++t2;
      } else
        t2 = 1;
      _this._depth = t2;
      if (t1) {
        t1 = $parent._owner;
        t1.toString;
        _this._owner = t1;
        _this._renderer = _this._inheritRendererFromParent$0();
      }
      _this.get$component();
      _this._updateInheritance$0();
      _this._updateObservers$0();
    },
    _firstBuild$1(onBuilt) {
      type$.nullable_void_Function._as(onBuilt);
    },
    update$1(newComponent) {
      this._component = newComponent;
    },
    updatePrevSibling$1(prevSibling) {
      this._prevSibling = prevSibling;
      this._updateAncestorSiblingRecursively$1(false);
      this._parentChanged = false;
    },
    _didChangeAncestorSibling$0() {
    },
    _updateAncestorSiblingRecursively$1(didReorderParent) {
      var t1, _this = this,
        newAncestorSibling = _this._prevSibling;
      if (newAncestorSibling == null) {
        t1 = _this._parent;
        if (type$.RenderElement._is(t1))
          newAncestorSibling = null;
        else {
          t1 = t1 == null ? null : t1._prevAncestorSibling;
          newAncestorSibling = t1;
        }
      }
      if (didReorderParent || !J.$eq$(newAncestorSibling, _this._prevAncestorSibling)) {
        _this._prevAncestorSibling = newAncestorSibling;
        _this._didChangeAncestorSibling$0();
        if (!type$.RenderElement._is(_this))
          _this.visitChildren$1(new A.Element__updateAncestorSiblingRecursively_closure());
      }
    },
    inflateComponent$2(newComponent, nextChild) {
      var newChild = newComponent.createElement$0(0);
      newChild.mount$2(this, nextChild);
      return newChild;
    },
    deactivateChild$1(child) {
      var t1;
      child._prevAncestorSibling = child._prevSibling = child._parent = null;
      t1 = this._owner._inactiveElements;
      if (child._lifecycleState === B._ElementLifecycle_1) {
        child.deactivate$0();
        child.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
      }
      t1._elements.add$1(0, child);
    },
    _inheritRendererFromParent$0() {
      var t1 = this._parent._renderer;
      t1.toString;
      return t1;
    },
    deactivate$0() {
      var t2, t3, _this = this,
        t1 = _this._dependencies;
      if (t1 != null && t1._collection$_length !== 0)
        for (t2 = A._instanceType(t1), t1 = new A._HashSetIterator(t1, t1._computeElements$0(), t2._eval$1("_HashSetIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
          t3 = t1._collection$_current;
          (t3 == null ? t2._as(t3) : t3).deactivateDependent$1(_this);
        }
      _this.set$_inheritedElements(null);
      _this._lifecycleState = B._ElementLifecycle_2;
    },
    unmount$0() {
      var _this = this;
      _this.get$component();
      _this._component = _this._parentNode = null;
      _this.set$_dependencies(null);
      _this._lifecycleState = B._ElementLifecycle_3;
    },
    getElementForInheritedComponentOfExactType$1$0($T) {
      var t1;
      A.checkTypeBound($T, type$.InheritedComponent, "T", "getElementForInheritedComponentOfExactType");
      t1 = this._inheritedElements;
      return t1 == null ? null : t1.$index(0, A.createRuntimeType($T));
    },
    _updateInheritance$0() {
      var t1 = this._parent;
      this.set$_inheritedElements(t1 == null ? null : t1._inheritedElements);
    },
    _updateObservers$0() {
      var t1 = this._parent;
      this.set$_observerElements(t1 == null ? null : t1._observerElements);
    },
    didChangeDependencies$0() {
      this.markNeedsBuild$0();
    },
    markNeedsBuild$0() {
      var _this = this;
      if (_this._lifecycleState !== B._ElementLifecycle_1)
        return;
      if (_this._dirty)
        return;
      _this._dirty = true;
      _this._owner.scheduleBuildFor$1(_this);
    },
    rebuild$1(onRebuilt) {
      var _this = this, _box_0 = {};
      type$.nullable_void_Function._as(onRebuilt);
      if (_this._lifecycleState !== B._ElementLifecycle_1 || !_this._dirty)
        return;
      _box_0.debugPreviousBuildTarget = null;
      _this._owner.performRebuildOn$2(_this, new A.Element_rebuild_closure(_box_0, _this, onRebuilt));
    },
    rebuild$0() {
      return this.rebuild$1(null);
    },
    set$_observerElements(_observerElements) {
      this._observerElements = type$.nullable_List_ObserverElement._as(_observerElements);
    },
    set$_inheritedElements(_inheritedElements) {
      this._inheritedElements = type$.nullable_Map_Type_InheritedElement._as(_inheritedElements);
    },
    set$_dependencies(_dependencies) {
      this._dependencies = type$.nullable_Set_InheritedElement._as(_dependencies);
    },
    set$_asyncFirstBuildChildren(_asyncFirstBuildChildren) {
      this._asyncFirstBuildChildren = type$.List_Future_dynamic._as(_asyncFirstBuildChildren);
    },
    $isBuildContext: 1,
    get$_lastNode() {
      return this._lastNode;
    }
  };
  A.Element__updateAncestorSiblingRecursively_closure.prototype = {
    call$1(e) {
      return e._updateAncestorSiblingRecursively$1(true);
    },
    $signature: 14
  };
  A.Element_rebuild_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1._dependencies;
      if (t2 != null && t2._collection$_length !== 0)
        for (t3 = A._instanceType(t2), t2 = new A._HashSetIterator(t2, t2._computeElements$0(), t3._eval$1("_HashSetIterator<1>")), t3 = t3._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          (t4 == null ? t3._as(t4) : t4).didRebuildDependent$1(t1);
        }
      t1 = this.onRebuilt;
      if (t1 != null)
        t1.call$0();
    },
    $signature: 0
  };
  A._InactiveElements.prototype = {
    _unmount$2(element, detachNode) {
      var t1, node;
      element.visitChildren$1(new A._InactiveElements__unmount_closure(this, element, detachNode));
      t1 = type$.RenderElement;
      if (t1._is(element) && detachNode) {
        element._renderer.toString;
        element._parentNode.toString;
        node = A.DomNodeDataExt_get_data(t1._as(element)).node;
        if (node != null)
          J.remove$0$ax(node);
      }
      element.unmount$0();
    },
    _unmountAll$0() {
      var t2, t3,
        t1 = this._elements,
        elements = A.List_List$of(t1, true, A._instanceType(t1)._precomputed1);
      B.JSArray_methods.sort$1(elements, A.framework_Element__sort$closure());
      t1.clear$0(0);
      for (t1 = A._arrayInstanceType(elements)._eval$1("ReversedListIterable<1>"), t2 = new A.ReversedListIterable(elements, t1), t2 = new A.ListIterator(t2, t2.get$length(t2), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"); t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        this._unmount$2(t3 == null ? t1._as(t3) : t3, true);
      }
    }
  };
  A._InactiveElements__unmount_closure.prototype = {
    call$1(child) {
      var t1 = this.detachNode && !type$.RenderElement._is(this.element);
      this.$this._unmount$2(child, t1);
    },
    $signature: 14
  };
  A.InheritedComponent.prototype = {
    createElement$0(_) {
      return A.InheritedElement$(this);
    }
  };
  A.InheritedElement.prototype = {
    get$component() {
      return type$.InheritedComponent._as(A.Element.prototype.get$component.call(this));
    },
    _updateInheritance$0() {
      var t2, _this = this, _null = null,
        t1 = _this._parent,
        incomingElements = t1 == null ? _null : t1._inheritedElements;
      t1 = type$.Type;
      t2 = type$.InheritedElement;
      if (incomingElements != null)
        _this.set$_inheritedElements(A.HashMap_HashMap$from(incomingElements, t1, t2));
      else
        _this.set$_inheritedElements(A.HashMap_HashMap(_null, _null, _null, t1, t2));
      t1 = _this._inheritedElements;
      t1.toString;
      t1.$indexSet(0, A.getRuntimeType(_this.get$component()), _this);
    },
    getDependencies$1(dependent) {
      return this._dependents.$index(0, dependent);
    },
    setDependencies$2(dependent, value) {
      this._dependents.$indexSet(0, dependent, value);
    },
    update$1(newComponent) {
      var oldComponent, _this = this;
      type$.InheritedComponent._as(newComponent);
      oldComponent = _this.get$component();
      _this.super$Element$update(newComponent);
      if (_this.get$component().container !== oldComponent.container)
        _this.notifyClients$1(oldComponent);
      _this._dirty = true;
      _this.rebuild$0();
    },
    notifyClients$1(oldComponent) {
      var t1, t2, t3;
      for (t1 = this._dependents, t2 = A._instanceType(t1), t1 = new A._HashMapKeyIterator(t1, t1._computeKeys$0(), t2._eval$1("_HashMapKeyIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        (t3 == null ? t2._as(t3) : t3).didChangeDependencies$0();
      }
    },
    didRebuildDependent$1(dependent) {
    },
    deactivateDependent$1(dependent) {
      this._dependents.remove$1(0, dependent);
    },
    build$0() {
      return this.get$component().child;
    }
  };
  A.MultiChildElement.prototype = {
    mount$2($parent, prevSibling) {
      this.super$Element$mount($parent, prevSibling);
      this._firstBuild$0();
    },
    _firstBuild$1(onBuilt) {
      type$.nullable_void_Function._as(onBuilt);
      this.super$Element$_firstBuild(onBuilt);
      this.rebuild$1(onBuilt);
    },
    _firstBuild$0() {
      return this._firstBuild$1(null);
    },
    performRebuild$0() {
      var e, st, exception, t1, t2, _this = this, _null = null, built = null;
      try {
        built = J.toList$0$ax(_this.build$0());
      } catch (exception) {
        e = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        _this._debugDoingBuild = false;
        built = A._setArrayType([new A.DomComponent("div", _null, _null, _null, _null, _null, new A.Text("Error on building component: " + A.S(e), false, _null), _null, _null)], type$.JSArray_Component);
        A.print("Error: " + A.S(e) + " " + A.S(st));
      } finally {
        _this._dirty = false;
      }
      t1 = _this._children;
      if (t1 == null)
        t1 = A._setArrayType([], type$.JSArray_Element);
      t2 = _this._forgottenChildren;
      _this.set$_children(0, _this.updateChildren$3$forgottenChildren(t1, built, t2));
      t2.clear$0(0);
    },
    updateChildren$3$forgottenChildren(oldChildren, newComponents, forgottenChildren) {
      var replaceWithNullIfForgotten, newChildrenBottom, t1, oldChildrenBottom, t2, t3, newChildren, prevChild, newChildrenTop, oldChildrenTop, oldChild, newComponent, rti, t4, haveOldChildren, oldKeyedChildren, t5, _this = this, _null = null;
      type$.List_Element._as(oldChildren);
      type$.List_Component._as(newComponents);
      type$.nullable_Set_Element._as(forgottenChildren);
      replaceWithNullIfForgotten = new A.MultiChildElement_updateChildren_replaceWithNullIfForgotten(forgottenChildren);
      newChildrenBottom = newComponents.length - 1;
      t1 = J.getInterceptor$asx(oldChildren);
      oldChildrenBottom = t1.get$length(oldChildren) - 1;
      t2 = t1.get$length(oldChildren);
      t3 = newComponents.length;
      newChildren = t2 === t3 ? oldChildren : A.List_List$filled(t3, _null, true, type$.nullable_Element);
      t2 = J.getInterceptor$ax(newChildren);
      prevChild = _null;
      newChildrenTop = 0;
      oldChildrenTop = 0;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(t1.$index(oldChildren, oldChildrenTop));
        if (!(newChildrenTop < newComponents.length))
          return A.ioore(newComponents, newChildrenTop);
        newComponent = newComponents[newChildrenTop];
        if (oldChild != null) {
          t3 = oldChild.get$component();
          rti = t3 instanceof A.Closure ? A.closureFunctionType(t3) : _null;
          t3 = A.createRuntimeType(rti == null ? A.instanceType(t3) : rti);
          rti = newComponent instanceof A.Closure ? A.closureFunctionType(newComponent) : _null;
          t4 = !(t3 === A.createRuntimeType(rti == null ? A.instanceType(newComponent) : rti) && true);
          t3 = t4;
        } else
          t3 = true;
        if (t3)
          break;
        t3 = _this.updateChild$3(oldChild, newComponent, prevChild);
        t3.toString;
        t2.$indexSet(newChildren, newChildrenTop, t3);
        ++newChildrenTop;
        ++oldChildrenTop;
        prevChild = t3;
      }
      while (true) {
        haveOldChildren = oldChildrenTop <= oldChildrenBottom;
        if (!(haveOldChildren && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(t1.$index(oldChildren, oldChildrenBottom));
        if (!(newChildrenBottom >= 0 && newChildrenBottom < newComponents.length))
          return A.ioore(newComponents, newChildrenBottom);
        newComponent = newComponents[newChildrenBottom];
        if (oldChild != null) {
          t3 = oldChild.get$component();
          rti = t3 instanceof A.Closure ? A.closureFunctionType(t3) : _null;
          t3 = A.createRuntimeType(rti == null ? A.instanceType(t3) : rti);
          rti = newComponent instanceof A.Closure ? A.closureFunctionType(newComponent) : _null;
          t4 = !(t3 === A.createRuntimeType(rti == null ? A.instanceType(newComponent) : rti) && true);
          t3 = t4;
        } else
          t3 = true;
        if (t3)
          break;
        --oldChildrenBottom;
        --newChildrenBottom;
      }
      if (haveOldChildren) {
        oldKeyedChildren = A.LinkedHashMap_LinkedHashMap$_empty(type$.Key, type$.Element_2);
        for (; oldChildrenTop <= oldChildrenBottom;) {
          oldChild = replaceWithNullIfForgotten.call$1(t1.$index(oldChildren, oldChildrenTop));
          if (oldChild != null) {
            oldChild.get$component();
            oldChild._prevAncestorSibling = oldChild._prevSibling = oldChild._parent = null;
            t3 = _this._owner._inactiveElements;
            if (oldChild._lifecycleState === B._ElementLifecycle_1) {
              oldChild.deactivate$0();
              oldChild.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
            }
            t3._elements.add$1(0, oldChild);
          }
          ++oldChildrenTop;
        }
        haveOldChildren = true;
      } else
        oldKeyedChildren = _null;
      for (; newChildrenTop <= newChildrenBottom; prevChild = t3) {
        if (!(newChildrenTop < newComponents.length))
          return A.ioore(newComponents, newChildrenTop);
        newComponent = newComponents[newChildrenTop];
        haveOldChildren;
        t3 = _this.updateChild$3(_null, newComponent, prevChild);
        t3.toString;
        t2.$indexSet(newChildren, newChildrenTop, t3);
        ++newChildrenTop;
      }
      newChildrenBottom = newComponents.length - 1;
      oldChildrenBottom = t1.get$length(oldChildren) - 1;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = t1.$index(oldChildren, oldChildrenTop);
        if (!(newChildrenTop < newComponents.length))
          return A.ioore(newComponents, newChildrenTop);
        t3 = _this.updateChild$3(oldChild, newComponents[newChildrenTop], prevChild);
        t3.toString;
        t2.$indexSet(newChildren, newChildrenTop, t3);
        ++newChildrenTop;
        ++oldChildrenTop;
        prevChild = t3;
      }
      if (haveOldChildren && oldKeyedChildren.__js_helper$_length !== 0)
        for (t1 = oldKeyedChildren.get$values(oldKeyedChildren), t3 = A._instanceType(t1), t3 = t3._eval$1("@<1>")._bind$1(t3._rest[1]), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t3._eval$1("MappedIterator<1,2>")), t3 = t3._rest[1]; t1.moveNext$0();) {
          t4 = t1.__internal$_current;
          if (t4 == null)
            t4 = t3._as(t4);
          if (!forgottenChildren.contains$1(0, t4)) {
            t4._prevAncestorSibling = t4._prevSibling = t4._parent = null;
            t5 = _this._owner._inactiveElements;
            if (t4._lifecycleState === B._ElementLifecycle_1) {
              t4.deactivate$0();
              t4.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
            }
            t5._elements.add$1(0, t4);
          }
        }
      return t2.cast$1$0(newChildren, type$.Element_2);
    },
    visitChildren$1(visitor) {
      var t1, t2, t3, child;
      type$.void_Function_Element._as(visitor);
      t1 = this._children;
      t1 = J.get$iterator$ax(t1 == null ? [] : t1);
      t2 = this._forgottenChildren;
      t3 = type$.Element_2;
      for (; t1.moveNext$0();) {
        child = t1.get$current();
        if (!t2.contains$1(0, child))
          visitor.call$1(t3._as(child));
      }
    },
    set$_children(_, _children) {
      this._children = type$.nullable_List_Element._as(_children);
    }
  };
  A.MultiChildElement_updateChildren_replaceWithNullIfForgotten.prototype = {
    call$1(child) {
      var t1 = this.forgottenChildren.contains$1(0, child);
      return t1 ? null : child;
    },
    $signature: 97
  };
  A.RenderElement.prototype = {
    get$_lastNode() {
      return this;
    },
    _attach$0() {
      var t1, after, _this = this,
        prevElem = _this._prevAncestorSibling;
      while (true) {
        t1 = prevElem == null;
        if (!(!t1 && prevElem.get$_lastNode() == null))
          break;
        prevElem = prevElem._prevAncestorSibling;
      }
      after = t1 ? null : prevElem.get$_lastNode();
      _this._renderer.attachNode$3(_this._parentNode, _this, after);
    },
    $isBuildContext: 1,
    $isElement: 1
  };
  A._DomElement_MultiChildElement_RenderElement__firstBuild_closure.prototype = {
    call$0() {
      this.$this._attach$0();
    },
    $signature: 0
  };
  A._TextElement_NoChildElement_RenderElement__firstBuild_closure.prototype = {
    call$0() {
      this.$this._attach$0();
    },
    $signature: 0
  };
  A.__RootElement_SingleChildElement_RenderElement__firstBuild_closure.prototype = {
    call$0() {
      this.$this._attach$0();
    },
    $signature: 0
  };
  A.Renderer.prototype = {};
  A.SingleChildElement.prototype = {
    mount$2($parent, prevSibling) {
      this.super$Element$mount($parent, prevSibling);
      this._firstBuild$0();
    },
    _firstBuild$1(onBuilt) {
      type$.nullable_void_Function._as(onBuilt);
      this.super$Element$_firstBuild(onBuilt);
      this.rebuild$1(onBuilt);
    },
    _firstBuild$0() {
      return this._firstBuild$1(null);
    },
    performRebuild$0() {
      var e, st, exception, _this = this, _null = null, built = null;
      try {
        built = _this.build$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        _this._debugDoingBuild = false;
        built = new A.DomComponent("div", _null, _null, _null, _null, _null, new A.Text("Error on building component: " + A.S(e), false, _null), _null, _null);
        A.print("Error: " + A.S(e) + " " + A.S(st));
      } finally {
        _this._dirty = false;
      }
      _this._child = _this.updateChild$3(_this._child, built, _null);
    },
    visitChildren$1(visitor) {
      var t1;
      type$.void_Function_Element._as(visitor);
      t1 = this._child;
      if (t1 != null)
        visitor.call$1(t1);
    }
  };
  A.SyncStateMixin.prototype = {};
  A.StatefulComponent.prototype = {
    createElement$0(_) {
      return A.StatefulElement$(this);
    }
  };
  A._StateLifecycle.prototype = {
    _enumToString$0() {
      return "_StateLifecycle." + this._name;
    }
  };
  A.State.prototype = {
    initState$0() {
    },
    didUpdateComponent$1(oldComponent) {
      A._instanceType(this)._eval$1("State.T")._as(oldComponent);
    },
    dispose$0() {
    },
    didChangeDependencies$0() {
    },
    set$_component(_component) {
      this._component = A._instanceType(this)._eval$1("State.T?")._as(_component);
    }
  };
  A.StatefulElement.prototype = {
    build$0() {
      return this._framework$_state.build$1(this);
    },
    _firstBuild$0() {
      var _this = this;
      if (_this._owner._isFirstBuild)
        _this._framework$_state.toString;
      _this._initState$0();
      _this.super$MultiChildElement$_firstBuild(null);
    },
    _initState$0() {
      var result, _this = this;
      try {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = true;
        result = _this._framework$_state.initState$0();
      } finally {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = false;
      }
      _this._framework$_state.didChangeDependencies$0();
    },
    performRebuild$0() {
      var _this = this;
      if (_this._didChangeDependencies) {
        _this._framework$_state.didChangeDependencies$0();
        _this._didChangeDependencies = false;
      }
      _this.super$MultiChildElement$performRebuild();
    },
    update$1(newComponent) {
      var oldComponent, t1, t2, _this = this;
      type$.StatefulComponent._as(newComponent);
      _this.super$Element$update(newComponent);
      t1 = _this._framework$_state;
      t2 = t1._component;
      t2.toString;
      oldComponent = t2;
      _this._dirty = true;
      t1.set$_component(newComponent);
      try {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = true;
        _this._framework$_state.didUpdateComponent$1(oldComponent);
      } finally {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = false;
      }
      _this.rebuild$0();
    },
    deactivate$0() {
      this._framework$_state.toString;
      this.super$Element$deactivate();
    },
    unmount$0() {
      var _this = this;
      _this.super$Element$unmount();
      _this._framework$_state.dispose$0();
      _this._framework$_state._framework$_element = null;
      _this.set$_framework$_state(null);
    },
    didChangeDependencies$0() {
      this.super$Element$didChangeDependencies();
      this._didChangeDependencies = true;
    },
    set$_framework$_state(_state) {
      this._framework$_state = type$.nullable_State_StatefulComponent._as(_state);
    }
  };
  A.StatelessComponent.prototype = {
    createElement$0(_) {
      var t1 = A.HashSet_HashSet(type$.Element_2),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.StatelessElement(t1, t2, this, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    }
  };
  A.StatelessElement.prototype = {
    get$component() {
      return type$.StatelessComponent._as(A.Element.prototype.get$component.call(this));
    },
    build$0() {
      return type$.StatelessComponent._as(A.Element.prototype.get$component.call(this)).build$1(this);
    },
    _firstBuild$0() {
      if (this._owner._isFirstBuild)
        type$.StatelessComponent._as(A.Element.prototype.get$component.call(this));
      this.super$MultiChildElement$_firstBuild(null);
    },
    update$1(newComponent) {
      this.super$Element$update(type$.StatelessComponent._as(newComponent));
      this._dirty = true;
      this.rebuild$0();
    }
  };
  A._DomElement_MultiChildElement_RenderElement.prototype = {
    _firstBuild$0() {
      var _this = this,
        t1 = _this._renderer;
      t1.toString;
      _this.renderNode$1(t1);
      _this.super$MultiChildElement$_firstBuild(new A._DomElement_MultiChildElement_RenderElement__firstBuild_closure(_this, null));
    },
    update$1(newComponent) {
      var t1;
      this.super$Element$update(newComponent);
      t1 = this._renderer;
      t1.toString;
      this.renderNode$1(t1);
    },
    _didChangeAncestorSibling$0() {
      this.super$Element$_didChangeAncestorSibling();
      this._attach$0();
    },
    performRebuild$0() {
      this.super$MultiChildElement$performRebuild();
      this._renderer.finalizeNode$1(this);
    },
    unmount$0() {
      this.super$Element$unmount();
    }
  };
  A._TextElement_NoChildElement_RenderElement.prototype = {
    _firstBuild$0() {
      var _this = this,
        t1 = _this._renderer;
      t1.toString;
      _this.renderNode$1(t1);
      _this.super$NoChildElement$_firstBuild(new A._TextElement_NoChildElement_RenderElement__firstBuild_closure(_this, null));
    },
    update$1(newComponent) {
      var t1;
      this.super$Element$update(newComponent);
      t1 = this._renderer;
      t1.toString;
      this.renderNode$1(t1);
    },
    _didChangeAncestorSibling$0() {
      this.super$Element$_didChangeAncestorSibling();
      this._attach$0();
    },
    performRebuild$0() {
      this.super$NoChildElement$performRebuild();
      this._renderer.finalizeNode$1(this);
    },
    unmount$0() {
      this.super$Element$unmount();
    }
  };
  A.__RootElement_SingleChildElement_RenderElement.prototype = {
    _firstBuild$1(onBuilt) {
      var t1, _this = this;
      type$.nullable_void_Function._as(onBuilt);
      t1 = _this._renderer;
      t1.toString;
      _this.renderNode$1(t1);
      _this.super$SingleChildElement$_firstBuild(new A.__RootElement_SingleChildElement_RenderElement__firstBuild_closure(_this, onBuilt));
    },
    _firstBuild$0() {
      return this._firstBuild$1(null);
    },
    update$1(newComponent) {
      var t1;
      this.super$Element$update(newComponent);
      t1 = this._renderer;
      t1.toString;
      this.renderNode$1(t1);
    },
    _didChangeAncestorSibling$0() {
      this.super$Element$_didChangeAncestorSibling();
      this._attach$0();
    },
    performRebuild$0() {
      this.super$SingleChildElement$performRebuild();
      this._renderer.finalizeNode$1(this);
    },
    unmount$0() {
      this.super$Element$unmount();
    }
  };
  A.Target.prototype = {
    _enumToString$0() {
      return "Target." + this._name;
    }
  };
  A.FontStyle.prototype = {};
  A.FontWeight.prototype = {
    _enumToString$0() {
      return "FontWeight." + this._name;
    }
  };
  A._Unit.prototype = {$isUnit: 1};
  A._RemUnit.prototype = {};
  A._TextStyles.prototype = {$isStyles: 1};
  A.ProviderScope.prototype = {
    createState$0() {
      return new A.ProviderScopeState("provider_scope", B._StateLifecycle_0);
    }
  };
  A.ProviderScopeState.prototype = {
    initState$0() {
      var t1, _this = this,
        $parent = _this._getParent$0();
      _this._component.toString;
      t1 = A.ProviderContainer$(null, B.List_empty, $parent);
      _this.__ProviderScopeState_container_F !== $ && A.throwLateFieldAI("container");
      _this.__ProviderScopeState_container_F = t1;
      _this.super$_ProviderScopeState_State_SyncStateMixin$initState();
    },
    _getParent$0() {
      var t1, scope;
      this._component.toString;
      t1 = this._framework$_element.getElementForInheritedComponentOfExactType$1$0(type$.UncontrolledProviderScope);
      scope = t1 == null ? null : t1.get$component();
      return scope == null ? null : scope.container;
    },
    didUpdateComponent$1(oldComponent) {
      this.super$State$didUpdateComponent(type$.ProviderScope._as(oldComponent));
      this._framework0$_dirty = true;
      this._component.toString;
    },
    build$1($async$context) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$build$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                if ($async$self._framework0$_dirty) {
                  $async$self._framework0$_dirty = false;
                  t1 = $async$self.__ProviderScopeState_container_F;
                  t1 === $ && A.throwLateFieldNI("container");
                  $async$self._component.toString;
                  t1.updateOverrides$1(B.List_empty);
                }
                t1 = $async$self.__ProviderScopeState_container_F;
                t1 === $ && A.throwLateFieldNI("container");
                $async$goto = 2;
                return new A.UncontrolledProviderScope(t1, $async$self._component.child, null);
              case 2:
                // after yield
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Component);
    },
    dispose$0() {
      var t1 = this.__ProviderScopeState_container_F;
      t1 === $ && A.throwLateFieldNI("container");
      t1.dispose$0();
      this.super$_ProviderScopeState_State_SyncStateMixin$dispose();
    },
    $isSyncState: 1
  };
  A.UncontrolledProviderScope.prototype = {
    createElement$0(_) {
      var t1 = A.HashMap_HashMap(null, null, null, type$.Element_2, type$.nullable_Object),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A._UncontrolledProviderScopeElement(t1, t2, this, B._ElementLifecycle_0, A._setArrayType([], type$.JSArray_Future_dynamic));
    }
  };
  A._UncontrolledProviderScopeElement.prototype = {
    get$component() {
      return A.InheritedElement.prototype.get$component.call(this);
    },
    mount$2($parent, prevSibling) {
      if ($.vsyncOverride == null)
        $.vsyncOverride = this.get$_jasprVsync();
      this.super$SingleChildElement$mount($parent, prevSibling);
    },
    _jasprVsync$1(task) {
      this.set$_task(type$.void_Function._as(task));
      A.Future_Future$microtask(new A._UncontrolledProviderScopeElement__jasprVsync_closure(this), type$.Null);
    },
    didRebuildDependent$1(dependent) {
      var t1 = type$.nullable_ProviderDependencies._as(this.super$InheritedElement$getDependencies(dependent));
      if (t1 != null)
        t1.didRebuild$0();
      this.super$InheritedElement$didRebuildDependent(dependent);
    },
    deactivateDependent$1(dependent) {
      var t1 = type$.nullable_ProviderDependencies._as(this.super$InheritedElement$getDependencies(dependent));
      if (t1 != null)
        t1.deactivate$0();
      this.super$InheritedElement$deactivateDependent(dependent);
    },
    unmount$0() {
      this._mounted = false;
      if (J.$eq$($.vsyncOverride, this.get$_jasprVsync()))
        $.vsyncOverride = null;
      this.super$Element$unmount();
    },
    build$0() {
      var t1 = this._task;
      if (t1 != null)
        t1.call$0();
      this.set$_task(null);
      return this.super$InheritedElement$build();
    },
    set$_task(_task) {
      this._task = type$.nullable_void_Function._as(_task);
    }
  };
  A._UncontrolledProviderScopeElement__jasprVsync_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this, t2 = type$.Null;
            case 2:
              // for condition
              if (!t1._owner._isFirstBuild) {
                // goto after for
                $async$goto = 3;
                break;
              }
              $async$goto = 4;
              return A._asyncAwait(A.Future_Future$microtask(new A._UncontrolledProviderScopeElement__jasprVsync__closure(), t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              if (t1._mounted)
                t1.markNeedsBuild$0();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 20
  };
  A._UncontrolledProviderScopeElement__jasprVsync__closure.prototype = {
    call$0() {
    },
    $signature: 11
  };
  A.ProviderDependencies.prototype = {
    didRebuild$0() {
      var t3, _i, _this = this,
        t1 = _this.oldWatchers,
        t2 = type$.ProviderSubscription_dynamic;
      t1 = A.List_List$of(t1.get$values(t1), true, t2);
      t3 = _this.oldListeners;
      B.JSArray_methods.addAll$1(t1, t3.get$values(t3));
      for (t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        J.close$0$z(t1[_i]);
      _this.set$oldWatchers(_this.watchers);
      t1 = type$.ProviderListenable_dynamic;
      _this.set$watchers(A.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
      _this.set$oldListeners(_this.listeners);
      _this.set$listeners(A.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
    },
    deactivate$0() {
      var t3, _i, _this = this,
        t1 = _this.watchers,
        t2 = type$.ProviderSubscription_dynamic;
      t1 = A.List_List$of(t1.get$values(t1), true, t2);
      t3 = _this.oldWatchers;
      B.JSArray_methods.addAll$1(t1, t3.get$values(t3));
      t3 = _this.listeners;
      B.JSArray_methods.addAll$1(t1, t3.get$values(t3));
      t3 = _this.oldListeners;
      B.JSArray_methods.addAll$1(t1, t3.get$values(t3));
      for (t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        J.close$0$z(t1[_i]);
      t1 = type$.ProviderListenable_dynamic;
      _this.set$oldWatchers(A.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
      _this.set$watchers(A.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
      _this.set$oldListeners(A.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
      _this.set$listeners(A.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
    },
    watch$1$1(target, $T) {
      var t1, container, t2, subscription, _this = this;
      $T._eval$1("ProviderListenable<0>")._as(target);
      t1 = A.ProviderScope__scopeOf(_this.dependent, true);
      container = A.InheritedElement.prototype.get$component.call(t1).container;
      t1 = _this.listenedContainer;
      if (t1 != null && t1 !== container)
        _this.deactivate$0();
      _this.listenedContainer = container;
      if (!_this.watchers.containsKey$1(target))
        if (_this.oldWatchers.containsKey$1(target)) {
          t1 = _this.watchers;
          t2 = _this.oldWatchers.remove$1(0, target);
          t2.toString;
          t1.$indexSet(0, target, t2);
        } else {
          subscription = $T._eval$1("ProviderListenable<0>")._as(target).addListener$5$fireImmediately$onDependencyMayHaveChanged$onError(container, $T._eval$1("~(0?,0)")._as(new A.ProviderDependencies_watch_closure(_this, target, $T)), false, null, type$.nullable_void_Function_Object_StackTrace._as(null));
          _this.watchers.$indexSet(0, target, subscription);
        }
      return $T._as(_this.watchers.$index(0, target).read$0());
    },
    set$watchers(watchers) {
      this.watchers = type$.Map_of_ProviderListenable_dynamic_and_ProviderSubscription_dynamic._as(watchers);
    },
    set$listeners(listeners) {
      this.listeners = type$.Map_of_ProviderListenable_dynamic_and_ProviderSubscription_dynamic._as(listeners);
    },
    set$oldWatchers(oldWatchers) {
      this.oldWatchers = type$.Map_of_ProviderListenable_dynamic_and_ProviderSubscription_dynamic._as(oldWatchers);
    },
    set$oldListeners(oldListeners) {
      this.oldListeners = type$.Map_of_ProviderListenable_dynamic_and_ProviderSubscription_dynamic._as(oldListeners);
    }
  };
  A.ProviderDependencies_watch_closure.prototype = {
    call$2(_, v) {
      var t2,
        t1 = this.T;
      t1._eval$1("0?")._as(_);
      t1._as(v);
      t1 = this.$this;
      t2 = this.target;
      if (t1.watchers.$index(0, t2) == null && t1.oldWatchers.$index(0, t2) == null)
        return;
      t1.dependent.markNeedsBuild$0();
    },
    $signature() {
      return this.T._eval$1("~(0?,0)");
    }
  };
  A._ProviderScopeState_State_SyncStateMixin.prototype = {
    initState$0() {
      var t1, t2, t3, data, _this = this;
      _this.super$State$initState();
      t1 = $.SyncBinding__instance;
      t1.toString;
      $.ComponentsBinding__instance.toString;
      t2 = _this.SyncScopeMixin_syncId;
      t1.SyncBinding__globalSyncRegistry.$indexSet(0, t2, _this);
      t3 = _this.__ProviderScopeState_container_F;
      t3 === $ && A.throwLateFieldNI("container");
      if (t3.depth === 0) {
        data = t1._rawState.$index(0, t2);
        _this.updateState$1(data);
      }
    },
    dispose$0() {
      var t1 = $.SyncBinding__instance.SyncBinding__globalSyncRegistry,
        t2 = this.SyncScopeMixin_syncId;
      if (t1.$index(0, t2) === this)
        t1.remove$1(0, t2);
      this.super$State$dispose();
    }
  };
  A._ProviderScopeState_State_SyncStateMixin_SyncScopeMixin.prototype = {};
  A._syncStateProvider_closure.prototype = {
    call$1(ref) {
      type$.StateProviderRef_Map_String_dynamic._as(ref);
      return A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
    },
    $signature: 99
  };
  A.SyncScopeMixin.prototype = {
    updateState$1(value) {
      var t1, t2, t3;
      type$.nullable_Map_dynamic_dynamic._as(value);
      t1 = this.__ProviderScopeState_container_F;
      t1 === $ && A.throwLateFieldNI("container");
      t1 = type$.ProviderListenable_StateController_Map_String_dynamic._as($.$get$_syncStateProvider().get$notifier()).read$1(t1);
      t2 = A.instanceType(t1);
      t3 = J.getInterceptor$z(t1);
      t3.super$StateNotifier$state(t1, t2._precomputed1._as(t2._eval$1("1(1)")._as(new A.SyncScopeMixin_updateState_closure(value)).call$1(A.StateNotifier.prototype.get$state.call(t3, t1))));
    }
  };
  A.SyncScopeMixin_updateState_closure.prototype = {
    call$1(s) {
      var t3,
        t1 = A.LinkedHashMap_LinkedHashMap$of(type$.Map_String_dynamic._as(s), type$.String, type$.dynamic),
        t2 = this.value;
      if (t2 != null)
        for (t2 = t2.get$entries(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
          t3 = t2.get$current();
          t1.$indexSet(0, A._asString(t3.key), t3.value);
        }
      return t1;
    },
    $signature: 100
  };
  A.Context.prototype = {
    absolute$15(_, part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15) {
      var t1;
      A._validateArgList("absolute", A._setArrayType([part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15], type$.JSArray_nullable_String));
      t1 = this.style;
      t1 = t1.rootLength$1(part1) > 0 && !t1.isRootRelative$1(part1);
      if (t1)
        return part1;
      t1 = this._context$_current;
      return this.join$16(0, t1 == null ? A.current() : t1, part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15);
    },
    absolute$1($receiver, part1) {
      return this.absolute$15($receiver, part1, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    },
    join$16(_, part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15, part16) {
      var parts = A._setArrayType([part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15, part16], type$.JSArray_nullable_String);
      A._validateArgList("join", parts);
      return this.joinAll$1(new A.WhereTypeIterable(parts, type$.WhereTypeIterable_String));
    },
    join$2($receiver, part1, part2) {
      return this.join$16($receiver, part1, part2, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    },
    joinAll$1(parts) {
      var t1, t2, t3, needsSeparator, isAbsoluteAndNotRootRelative, t4, t5, parsed, path, t6;
      type$.Iterable_String._as(parts);
      for (t1 = parts.$ti, t2 = t1._eval$1("bool(Iterable.E)")._as(new A.Context_joinAll_closure()), t3 = parts.get$iterator(parts), t1 = new A.WhereIterator(t3, t2, t1._eval$1("WhereIterator<Iterable.E>")), t2 = this.style, needsSeparator = false, isAbsoluteAndNotRootRelative = false, t4 = ""; t1.moveNext$0();) {
        t5 = t3.get$current();
        if (t2.isRootRelative$1(t5) && isAbsoluteAndNotRootRelative) {
          parsed = A.ParsedPath_ParsedPath$parse(t5, t2);
          path = t4.charCodeAt(0) == 0 ? t4 : t4;
          t4 = B.JSString_methods.substring$2(path, 0, t2.rootLength$2$withDrive(path, true));
          parsed.root = t4;
          if (t2.needsSeparator$1(t4))
            B.JSArray_methods.$indexSet(parsed.separators, 0, t2.get$separator());
          t4 = "" + parsed.toString$0(0);
        } else if (t2.rootLength$1(t5) > 0) {
          isAbsoluteAndNotRootRelative = !t2.isRootRelative$1(t5);
          t4 = "" + t5;
        } else {
          t6 = t5.length;
          if (t6 !== 0) {
            if (0 >= t6)
              return A.ioore(t5, 0);
            t6 = t2.containsSeparator$1(t5[0]);
          } else
            t6 = false;
          if (!t6)
            if (needsSeparator)
              t4 += t2.get$separator();
          t4 += t5;
        }
        needsSeparator = t2.needsSeparator$1(t5);
      }
      return t4.charCodeAt(0) == 0 ? t4 : t4;
    },
    split$1(_, path) {
      var parsed = A.ParsedPath_ParsedPath$parse(path, this.style),
        t1 = parsed.parts,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("WhereIterable<1>");
      parsed.set$parts(A.List_List$of(new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Context_split_closure()), t3), true, t3._eval$1("Iterable.E")));
      t1 = parsed.root;
      if (t1 != null)
        B.JSArray_methods.insert$2(parsed.parts, 0, t1);
      return parsed.parts;
    },
    normalize$1(path) {
      var parsed;
      if (!this._needsNormalization$1(path))
        return path;
      parsed = A.ParsedPath_ParsedPath$parse(path, this.style);
      parsed.normalize$0();
      return parsed.toString$0(0);
    },
    _needsNormalization$1(path) {
      var i, start, previous, t2, t3, previousPrevious, codeUnit, t4,
        t1 = this.style,
        root = t1.rootLength$1(path);
      if (root !== 0) {
        if (t1 === $.$get$Style_windows())
          for (i = 0; i < root; ++i)
            if (B.JSString_methods._codeUnitAt$1(path, i) === 47)
              return true;
        start = root;
        previous = 47;
      } else {
        start = 0;
        previous = null;
      }
      for (t2 = new A.CodeUnits(path).__internal$_string, t3 = t2.length, i = start, previousPrevious = null; i < t3; ++i, previousPrevious = previous, previous = codeUnit) {
        codeUnit = B.JSString_methods.codeUnitAt$1(t2, i);
        if (t1.isSeparator$1(codeUnit)) {
          if (t1 === $.$get$Style_windows() && codeUnit === 47)
            return true;
          if (previous != null && t1.isSeparator$1(previous))
            return true;
          if (previous === 46)
            t4 = previousPrevious == null || previousPrevious === 46 || t1.isSeparator$1(previousPrevious);
          else
            t4 = false;
          if (t4)
            return true;
        }
      }
      if (previous == null)
        return true;
      if (t1.isSeparator$1(previous))
        return true;
      if (previous === 46)
        t1 = previousPrevious == null || t1.isSeparator$1(previousPrevious) || previousPrevious === 46;
      else
        t1 = false;
      if (t1)
        return true;
      return false;
    },
    relative$1(path) {
      var from, fromParsed, pathParsed, t3, t4, t5, _this = this,
        _s26_ = 'Unable to find a path to "',
        t1 = _this.style,
        t2 = t1.rootLength$1(path);
      if (t2 <= 0)
        return _this.normalize$1(path);
      t2 = _this._context$_current;
      from = t2 == null ? A.current() : t2;
      if (t1.rootLength$1(from) <= 0 && t1.rootLength$1(path) > 0)
        return _this.normalize$1(path);
      if (t1.rootLength$1(path) <= 0 || t1.isRootRelative$1(path))
        path = _this.absolute$1(0, path);
      if (t1.rootLength$1(path) <= 0 && t1.rootLength$1(from) > 0)
        throw A.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      fromParsed = A.ParsedPath_ParsedPath$parse(from, t1);
      fromParsed.normalize$0();
      pathParsed = A.ParsedPath_ParsedPath$parse(path, t1);
      pathParsed.normalize$0();
      t2 = fromParsed.parts;
      t3 = t2.length;
      if (t3 !== 0) {
        if (0 >= t3)
          return A.ioore(t2, 0);
        t2 = J.$eq$(t2[0], ".");
      } else
        t2 = false;
      if (t2)
        return pathParsed.toString$0(0);
      t2 = fromParsed.root;
      t3 = pathParsed.root;
      if (t2 != t3)
        t2 = t2 == null || t3 == null || !t1.pathsEqual$2(t2, t3);
      else
        t2 = false;
      if (t2)
        return pathParsed.toString$0(0);
      while (true) {
        t2 = fromParsed.parts;
        t3 = t2.length;
        if (t3 !== 0) {
          t4 = pathParsed.parts;
          t5 = t4.length;
          if (t5 !== 0) {
            if (0 >= t3)
              return A.ioore(t2, 0);
            t2 = t2[0];
            if (0 >= t5)
              return A.ioore(t4, 0);
            t4 = t1.pathsEqual$2(t2, t4[0]);
            t2 = t4;
          } else
            t2 = false;
        } else
          t2 = false;
        if (!t2)
          break;
        B.JSArray_methods.removeAt$1(fromParsed.parts, 0);
        B.JSArray_methods.removeAt$1(fromParsed.separators, 1);
        B.JSArray_methods.removeAt$1(pathParsed.parts, 0);
        B.JSArray_methods.removeAt$1(pathParsed.separators, 1);
      }
      t2 = fromParsed.parts;
      t3 = t2.length;
      if (t3 !== 0) {
        if (0 >= t3)
          return A.ioore(t2, 0);
        t2 = J.$eq$(t2[0], "..");
      } else
        t2 = false;
      if (t2)
        throw A.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      t2 = type$.String;
      B.JSArray_methods.insertAll$2(pathParsed.parts, 0, A.List_List$filled(fromParsed.parts.length, "..", false, t2));
      B.JSArray_methods.$indexSet(pathParsed.separators, 0, "");
      B.JSArray_methods.insertAll$2(pathParsed.separators, 1, A.List_List$filled(fromParsed.parts.length, t1.get$separator(), false, t2));
      t1 = pathParsed.parts;
      t2 = t1.length;
      if (t2 === 0)
        return ".";
      if (t2 > 1 && J.$eq$(B.JSArray_methods.get$last(t1), ".")) {
        B.JSArray_methods.removeLast$0(pathParsed.parts);
        t1 = pathParsed.separators;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        B.JSArray_methods.add$1(t1, "");
      }
      pathParsed.root = "";
      pathParsed.removeTrailingSeparators$0();
      return pathParsed.toString$0(0);
    },
    toUri$1(path) {
      var t2,
        t1 = this.style;
      if (t1.rootLength$1(path) <= 0)
        return t1.relativePathToUri$1(path);
      else {
        t2 = this._context$_current;
        return t1.absolutePathToUri$1(this.join$2(0, t2 == null ? A.current() : t2, path));
      }
    },
    prettyUri$1(uri) {
      var path, rel, _this = this,
        typedUri = A._parseUri(uri);
      if (typedUri.get$scheme() === "file" && _this.style === $.$get$Style_url())
        return typedUri.toString$0(0);
      else if (typedUri.get$scheme() !== "file" && typedUri.get$scheme() !== "" && _this.style !== $.$get$Style_url())
        return typedUri.toString$0(0);
      path = _this.normalize$1(_this.style.pathFromUri$1(A._parseUri(typedUri)));
      rel = _this.relative$1(path);
      return _this.split$1(0, rel).length > _this.split$1(0, path).length ? path : rel;
    }
  };
  A.Context_joinAll_closure.prototype = {
    call$1(part) {
      return A._asString(part) !== "";
    },
    $signature: 2
  };
  A.Context_split_closure.prototype = {
    call$1(part) {
      return A._asString(part).length !== 0;
    },
    $signature: 2
  };
  A._validateArgList_closure.prototype = {
    call$1(arg) {
      A._asStringQ(arg);
      return arg == null ? "null" : '"' + arg + '"';
    },
    $signature: 102
  };
  A.InternalStyle.prototype = {
    getRoot$1(path) {
      var t1,
        $length = this.rootLength$1(path);
      if ($length > 0)
        return B.JSString_methods.substring$2(path, 0, $length);
      if (this.isRootRelative$1(path)) {
        if (0 >= path.length)
          return A.ioore(path, 0);
        t1 = path[0];
      } else
        t1 = null;
      return t1;
    },
    relativePathToUri$1(path) {
      var segments, _null = null,
        t1 = path.length;
      if (t1 === 0)
        return A._Uri__Uri(_null, _null, _null, _null);
      segments = A.Context_Context(this).split$1(0, path);
      if (this.isSeparator$1(B.JSString_methods.codeUnitAt$1(path, t1 - 1)))
        B.JSArray_methods.add$1(segments, "");
      return A._Uri__Uri(_null, _null, segments, _null);
    },
    pathsEqual$2(path1, path2) {
      return path1 === path2;
    }
  };
  A.ParsedPath.prototype = {
    get$hasTrailingSeparator() {
      var t1 = this.parts;
      if (t1.length !== 0)
        t1 = J.$eq$(B.JSArray_methods.get$last(t1), "") || !J.$eq$(B.JSArray_methods.get$last(this.separators), "");
      else
        t1 = false;
      return t1;
    },
    removeTrailingSeparators$0() {
      var t1, t2, _this = this;
      while (true) {
        t1 = _this.parts;
        if (!(t1.length !== 0 && J.$eq$(B.JSArray_methods.get$last(t1), "")))
          break;
        B.JSArray_methods.removeLast$0(_this.parts);
        t1 = _this.separators;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      }
      t1 = _this.separators;
      t2 = t1.length;
      if (t2 !== 0)
        B.JSArray_methods.$indexSet(t1, t2 - 1, "");
    },
    normalize$0() {
      var t1, t2, leadingDoubles, _i, part, t3, _this = this,
        newParts = A._setArrayType([], type$.JSArray_String);
      for (t1 = _this.parts, t2 = t1.length, leadingDoubles = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        part = t1[_i];
        t3 = J.getInterceptor$(part);
        if (!(t3.$eq(part, ".") || t3.$eq(part, "")))
          if (t3.$eq(part, "..")) {
            t3 = newParts.length;
            if (t3 !== 0) {
              if (0 >= t3)
                return A.ioore(newParts, -1);
              newParts.pop();
            } else
              ++leadingDoubles;
          } else
            B.JSArray_methods.add$1(newParts, part);
      }
      if (_this.root == null)
        B.JSArray_methods.insertAll$2(newParts, 0, A.List_List$filled(leadingDoubles, "..", false, type$.String));
      if (newParts.length === 0 && _this.root == null)
        B.JSArray_methods.add$1(newParts, ".");
      _this.set$parts(newParts);
      t1 = _this.style;
      _this.set$separators(A.List_List$filled(newParts.length + 1, t1.get$separator(), true, type$.String));
      t2 = _this.root;
      if (t2 == null || newParts.length === 0 || !t1.needsSeparator$1(t2))
        B.JSArray_methods.$indexSet(_this.separators, 0, "");
      t2 = _this.root;
      if (t2 != null && t1 === $.$get$Style_windows()) {
        t2.toString;
        _this.root = A.stringReplaceAllUnchecked(t2, "/", "\\");
      }
      _this.removeTrailingSeparators$0();
    },
    toString$0(_) {
      var i, t2, t3, _this = this,
        t1 = _this.root;
      t1 = t1 != null ? "" + t1 : "";
      for (i = 0; i < _this.parts.length; ++i, t1 = t3) {
        t2 = _this.separators;
        if (!(i < t2.length))
          return A.ioore(t2, i);
        t2 = A.S(t2[i]);
        t3 = _this.parts;
        if (!(i < t3.length))
          return A.ioore(t3, i);
        t3 = t1 + t2 + A.S(t3[i]);
      }
      t1 += A.S(B.JSArray_methods.get$last(_this.separators));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    set$parts(parts) {
      this.parts = type$.List_String._as(parts);
    },
    set$separators(separators) {
      this.separators = type$.List_String._as(separators);
    }
  };
  A.PathException.prototype = {
    toString$0(_) {
      return "PathException: " + this.message;
    },
    $isException: 1
  };
  A.Style.prototype = {
    toString$0(_) {
      return this.get$name(this);
    }
  };
  A.PosixStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      return t1 !== 0 && B.JSString_methods.codeUnitAt$1(path, t1 - 1) !== 47;
    },
    rootLength$2$withDrive(path, withDrive) {
      if (path.length !== 0 && B.JSString_methods._codeUnitAt$1(path, 0) === 47)
        return 1;
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return false;
    },
    pathFromUri$1(uri) {
      var t1;
      if (uri.get$scheme() === "" || uri.get$scheme() === "file") {
        t1 = uri.get$path(uri);
        return A._Uri__uriDecode(t1, 0, t1.length, B.C_Utf8Codec, false);
      }
      throw A.wrapException(A.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
    },
    absolutePathToUri$1(path) {
      var parsed = A.ParsedPath_ParsedPath$parse(path, this),
        t1 = parsed.parts;
      if (t1.length === 0)
        B.JSArray_methods.addAll$1(t1, A._setArrayType(["", ""], type$.JSArray_String));
      else if (parsed.get$hasTrailingSeparator())
        B.JSArray_methods.add$1(parsed.parts, "");
      return A._Uri__Uri(null, null, parsed.parts, "file");
    },
    get$name() {
      return "posix";
    },
    get$separator() {
      return "/";
    }
  };
  A.UrlStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      if (t1 === 0)
        return false;
      if (B.JSString_methods.codeUnitAt$1(path, t1 - 1) !== 47)
        return true;
      return B.JSString_methods.endsWith$1(path, "://") && this.rootLength$1(path) === t1;
    },
    rootLength$2$withDrive(path, withDrive) {
      var i, codeUnit, index, t2,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      if (B.JSString_methods._codeUnitAt$1(path, 0) === 47)
        return 1;
      for (i = 0; i < t1; ++i) {
        codeUnit = B.JSString_methods._codeUnitAt$1(path, i);
        if (codeUnit === 47)
          return 0;
        if (codeUnit === 58) {
          if (i === 0)
            return 0;
          index = B.JSString_methods.indexOf$2(path, "/", B.JSString_methods.startsWith$2(path, "//", i + 1) ? i + 3 : i);
          if (index <= 0)
            return t1;
          if (!withDrive || t1 < index + 3)
            return index;
          if (!B.JSString_methods.startsWith$1(path, "file://"))
            return index;
          if (!A.isDriveLetter(path, index + 1))
            return index;
          t2 = index + 3;
          return t1 === t2 ? t2 : index + 4;
        }
      }
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return path.length !== 0 && B.JSString_methods._codeUnitAt$1(path, 0) === 47;
    },
    pathFromUri$1(uri) {
      return uri.toString$0(0);
    },
    relativePathToUri$1(path) {
      return A.Uri_parse(path);
    },
    absolutePathToUri$1(path) {
      return A.Uri_parse(path);
    },
    get$name() {
      return "url";
    },
    get$separator() {
      return "/";
    }
  };
  A.WindowsStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47 || codeUnit === 92;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      if (t1 === 0)
        return false;
      t1 = B.JSString_methods.codeUnitAt$1(path, t1 - 1);
      return !(t1 === 47 || t1 === 92);
    },
    rootLength$2$withDrive(path, withDrive) {
      var t2, index,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      t2 = B.JSString_methods._codeUnitAt$1(path, 0);
      if (t2 === 47)
        return 1;
      if (t2 === 92) {
        if (t1 < 2 || B.JSString_methods._codeUnitAt$1(path, 1) !== 92)
          return 1;
        index = B.JSString_methods.indexOf$2(path, "\\", 2);
        if (index > 0) {
          index = B.JSString_methods.indexOf$2(path, "\\", index + 1);
          if (index > 0)
            return index;
        }
        return t1;
      }
      if (t1 < 3)
        return 0;
      if (!A.isAlphabetic(t2))
        return 0;
      if (B.JSString_methods._codeUnitAt$1(path, 1) !== 58)
        return 0;
      t1 = B.JSString_methods._codeUnitAt$1(path, 2);
      if (!(t1 === 47 || t1 === 92))
        return 0;
      return 3;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return this.rootLength$1(path) === 1;
    },
    pathFromUri$1(uri) {
      var path, t1;
      if (uri.get$scheme() !== "" && uri.get$scheme() !== "file")
        throw A.wrapException(A.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
      path = uri.get$path(uri);
      if (uri.get$host(uri) === "") {
        if (path.length >= 3 && B.JSString_methods.startsWith$1(path, "/") && A.isDriveLetter(path, 1))
          path = B.JSString_methods.replaceFirst$2(path, "/", "");
      } else
        path = "\\\\" + uri.get$host(uri) + path;
      t1 = A.stringReplaceAllUnchecked(path, "/", "\\");
      return A._Uri__uriDecode(t1, 0, t1.length, B.C_Utf8Codec, false);
    },
    absolutePathToUri$1(path) {
      var rootParts, t2,
        parsed = A.ParsedPath_ParsedPath$parse(path, this),
        t1 = parsed.root;
      t1.toString;
      if (B.JSString_methods.startsWith$1(t1, "\\\\")) {
        rootParts = new A.WhereIterable(A._setArrayType(t1.split("\\"), type$.JSArray_String), type$.bool_Function_String._as(new A.WindowsStyle_absolutePathToUri_closure()), type$.WhereIterable_String);
        B.JSArray_methods.insert$2(parsed.parts, 0, rootParts.get$last(rootParts));
        if (parsed.get$hasTrailingSeparator())
          B.JSArray_methods.add$1(parsed.parts, "");
        return A._Uri__Uri(rootParts.get$first(rootParts), null, parsed.parts, "file");
      } else {
        if (parsed.parts.length === 0 || parsed.get$hasTrailingSeparator())
          B.JSArray_methods.add$1(parsed.parts, "");
        t1 = parsed.parts;
        t2 = parsed.root;
        t2.toString;
        t2 = A.stringReplaceAllUnchecked(t2, "/", "");
        B.JSArray_methods.insert$2(t1, 0, A.stringReplaceAllUnchecked(t2, "\\", ""));
        return A._Uri__Uri(null, null, parsed.parts, "file");
      }
    },
    codeUnitsEqual$2(codeUnit1, codeUnit2) {
      var upperCase1;
      if (codeUnit1 === codeUnit2)
        return true;
      if (codeUnit1 === 47)
        return codeUnit2 === 92;
      if (codeUnit1 === 92)
        return codeUnit2 === 47;
      if ((codeUnit1 ^ codeUnit2) !== 32)
        return false;
      upperCase1 = codeUnit1 | 32;
      return upperCase1 >= 97 && upperCase1 <= 122;
    },
    pathsEqual$2(path1, path2) {
      var t1, i;
      if (path1 === path2)
        return true;
      t1 = path1.length;
      if (t1 !== path2.length)
        return false;
      for (i = 0; i < t1; ++i)
        if (!this.codeUnitsEqual$2(B.JSString_methods._codeUnitAt$1(path1, i), B.JSString_methods._codeUnitAt$1(path2, i)))
          return false;
      return true;
    },
    get$name() {
      return "windows";
    },
    get$separator() {
      return "\\";
    }
  };
  A.WindowsStyle_absolutePathToUri_closure.prototype = {
    call$1(part) {
      return A._asString(part) !== "";
    },
    $signature: 2
  };
  A.FutureHandlerProviderElementMixin.prototype = {
    updateShouldNotify$2(previous, next) {
      var t1 = this.$ti,
        t2 = t1._eval$1("AsyncValue<1>");
      return A.FutureHandlerProviderElementMixin_handleUpdateShouldNotify(t2._as(previous), t2._as(next), t1._precomputed1);
    },
    onError$2$seamless(_, value, seamless) {
      var completer, t2, t3, _this = this,
        t1 = _this.$ti;
      t1._eval$1("AsyncError0<1>")._as(value);
      if (_this._framework1$_mounted)
        A.AsyncTransition_asyncTransition(_this, value, seamless, t1._precomputed1);
      completer = _this.FutureHandlerProviderElementMixin__futureCompleter;
      if (completer != null) {
        A.FutureExtensions_ignore(completer.future, t1._precomputed1);
        completer.completeError$2(value.error, value.stackTrace);
        _this.set$_futureCompleter(null);
      } else if (_this._framework1$_mounted) {
        t2 = t1._precomputed1;
        t3 = A.Future_Future$error(value.error, value.stackTrace, t2);
        A.FutureExtensions_ignore(t3, t2);
        _this.FutureHandlerProviderElementMixin_futureNotifier.set$result(0, new A.ResultData(t3, t1._eval$1("ResultData<Future<1>>")));
      }
    },
    handleFuture$2$didChangeDependency(create, didChangeDependency) {
      this._handleAsync$2$didChangeDependency(new A.FutureHandlerProviderElementMixin_handleFuture_closure(this, this.$ti._eval$1("1/()")._as(create)), didChangeDependency);
    },
    _handleAsync$2$didChangeDependency(listen, didChangeDependency) {
      var sub, error, stackTrace, t2, t3, t4, sub0, exception, _this = this,
        t1 = _this.$ti;
      t1._eval$1("~()?({data!~(1),done!~(),error!~(Object,StackTrace),last!~(Future<1>,~())})")._as(listen);
      t2 = t1._precomputed1;
      t3 = !didChangeDependency;
      A.AsyncTransition_asyncTransition(_this, t1._eval$1("AsyncLoading<1>")._as(A.AsyncLoading$(t2)), t3, t2);
      if (_this.FutureHandlerProviderElementMixin__futureCompleter == null) {
        t4 = new A._Future($.Zone__current, t1._eval$1("_Future<1>"));
        _this.set$_futureCompleter(new A._AsyncCompleter(t4, t1._eval$1("_AsyncCompleter<1>")));
        _this.FutureHandlerProviderElementMixin_futureNotifier.set$result(0, new A.ResultData(t4, t1._eval$1("ResultData<Future<1>>")));
      }
      try {
        sub0 = listen.call$4$data$done$error$last(new A.FutureHandlerProviderElementMixin__handleAsync_closure(_this, didChangeDependency), new A.FutureHandlerProviderElementMixin__handleAsync_closure0(_this), new A.FutureHandlerProviderElementMixin__handleAsync_closure1(_this, didChangeDependency), new A.FutureHandlerProviderElementMixin__handleAsync_closure2(_this));
        _this.set$_cancelSubscription(sub0);
        sub = sub0;
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        _this.onError$2$seamless(0, A.AsyncError$0(error, stackTrace, t2), t3);
      }
    },
    set$_futureCompleter(_futureCompleter) {
      this.FutureHandlerProviderElementMixin__futureCompleter = this.$ti._eval$1("Completer<1>?")._as(_futureCompleter);
    },
    set$_lastFuture(_lastFuture) {
      this.FutureHandlerProviderElementMixin__lastFuture = this.$ti._eval$1("Future<1>?")._as(_lastFuture);
    },
    set$_lastFutureSub(_lastFutureSub) {
      this.FutureHandlerProviderElementMixin__lastFutureSub = type$.nullable_void_Function._as(_lastFutureSub);
    },
    set$_cancelSubscription(_cancelSubscription) {
      this.FutureHandlerProviderElementMixin__cancelSubscription = type$.nullable_void_Function._as(_cancelSubscription);
    }
  };
  A.FutureHandlerProviderElementMixin_handleFuture_closure.prototype = {
    call$4$data$done$error$last(data, done, error, last) {
      var futureOr, t1 = {},
        t2 = this.$this,
        t3 = t2.$ti;
      t3._eval$1("~(1)")._as(data);
      type$.void_Function._as(done);
      type$.void_Function_Object_StackTrace._as(error);
      t3._eval$1("~(Future<1>,~())")._as(last);
      futureOr = this.create.call$0();
      if (!t3._eval$1("Future<1>")._is(futureOr)) {
        data.call$1(futureOr);
        done.call$0();
        return null;
      }
      t1.running = true;
      t3 = new A.FutureHandlerProviderElementMixin_handleFuture_closure_cancel(t1);
      futureOr.then$1$2$onError(new A.FutureHandlerProviderElementMixin_handleFuture__closure(t1, t2, data, done), new A.FutureHandlerProviderElementMixin_handleFuture__closure0(t1, error, done), type$.Null);
      last.call$2(futureOr, t3);
      return t3;
    },
    $signature() {
      return this.$this.$ti._eval$1("~()?({data!~(1),done!~(),error!~(Object,StackTrace),last!~(Future<1>,~())})");
    }
  };
  A.FutureHandlerProviderElementMixin_handleFuture_closure_cancel.prototype = {
    call$0() {
      this._box_0.running = false;
    },
    $signature: 0
  };
  A.FutureHandlerProviderElementMixin_handleFuture__closure.prototype = {
    call$1(value) {
      var _this = this;
      _this.$this.$ti._precomputed1._as(value);
      if (!_this._box_0.running)
        return;
      _this.data.call$1(value);
      _this.done.call$0();
    },
    $signature() {
      return this.$this.$ti._eval$1("Null(1)");
    }
  };
  A.FutureHandlerProviderElementMixin_handleFuture__closure0.prototype = {
    call$2(err, stackTrace) {
      type$.Object._as(err);
      type$.StackTrace._as(stackTrace);
      if (!this._box_0.running)
        return;
      this.error.call$2(err, stackTrace);
      this.done.call$0();
    },
    $signature: 31
  };
  A.FutureHandlerProviderElementMixin__handleAsync_closure.prototype = {
    call$1(value) {
      var t4, completer,
        t1 = this.$this,
        t2 = t1.$ti,
        t3 = t2._precomputed1;
      t3._as(value);
      t4 = t2._eval$1("AsyncData<1>");
      t4 = t4._as(new A.AsyncData(value, false, null, null, t4));
      if (t1._framework1$_mounted)
        A.AsyncTransition_asyncTransition(t1, t4, !this.didChangeDependency, t3);
      completer = t1.FutureHandlerProviderElementMixin__futureCompleter;
      if (completer != null) {
        completer.complete$1(0, value);
        t1.set$_futureCompleter(null);
      } else if (t1._framework1$_mounted)
        t1.FutureHandlerProviderElementMixin_futureNotifier.set$result(0, new A.ResultData(A.Future_Future$value(value, t3), t2._eval$1("ResultData<Future<1>>")));
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1)");
    }
  };
  A.FutureHandlerProviderElementMixin__handleAsync_closure1.prototype = {
    call$2(error, stack) {
      var t1 = this.$this;
      t1.onError$2$seamless(0, A.AsyncError$0(type$.Object._as(error), type$.StackTrace._as(stack), t1.$ti._precomputed1), !this.didChangeDependency);
    },
    $signature: 4
  };
  A.FutureHandlerProviderElementMixin__handleAsync_closure2.prototype = {
    call$2(last, sub) {
      var t1 = this.$this;
      t1.$ti._eval$1("Future<1>")._as(last);
      type$.void_Function._as(sub);
      t1.set$_lastFuture(last);
      t1.set$_lastFutureSub(sub);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(Future<1>,~())");
    }
  };
  A.FutureHandlerProviderElementMixin__handleAsync_closure0.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.FutureHandlerProviderElementMixin__lastFutureSub;
      if (t2 != null)
        t2.call$0();
      t1.set$_lastFutureSub(null);
      t1.set$_lastFuture(null);
    },
    $signature: 0
  };
  A.ProviderFamilyBuilder.prototype = {
    call$2$1(create, State, Arg) {
      return new A.ProviderFamily(A.instantiate1(A.provider_Provider___new_tearOff$closure(), State), State._eval$1("@<0>")._bind$1(Arg)._eval$1("1(ProviderRef<1>,2)")._as(create), null, null, State._eval$1("@<0>")._bind$1(Arg)._eval$1("ProviderFamily<1,2>"));
    },
    call$1(create) {
      return this.call$2$1(create, type$.dynamic, type$.dynamic);
    }
  };
  A.FutureProviderFamilyBuilder.prototype = {
    call$2$1(create, State, Arg) {
      return new A.FutureProviderFamily(A.instantiate1(A.future_provider_FutureProvider___new_tearOff$closure(), State), State._eval$1("@<0>")._bind$1(Arg)._eval$1("1/(FutureProviderRef<1>,2)")._as(create), null, null, State._eval$1("@<0>")._bind$1(Arg)._eval$1("FutureProviderFamily<1,2>"));
    },
    call$1(create) {
      return this.call$2$1(create, type$.dynamic, type$.dynamic);
    }
  };
  A.AsyncValue.prototype = {
    toString$0(_) {
      var $content, _this = this,
        t1 = type$.JSArray_String,
        t2 = A._setArrayType([], t1);
      if (_this.get$isLoading() && !(_this instanceof A.AsyncLoading))
        t2.push("isLoading: " + _this.get$isLoading());
      if (_this.get$hasValue())
        t2.push("value: " + A.S(_this.get$value(_this)));
      if (_this.get$error(_this) != null)
        B.JSArray_methods.addAll$1(t2, A._setArrayType(["error: " + A.S(_this.get$error(_this)), "stackTrace: " + A.S(_this.get$stackTrace())], t1));
      $content = B.JSArray_methods.join$1(t2, ", ");
      return A.getRuntimeType(_this).toString$0(0) + "(" + $content + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (A.getRuntimeType(_this) === J.get$runtimeType$(other)) {
        t1 = A._instanceType(_this);
        if (t1._eval$1("AsyncValue<1>")._is(other))
          if (other.get$isLoading() === _this.get$isLoading())
            if (other.get$hasValue() === _this.get$hasValue())
              if (J.$eq$(other.get$error(other), _this.get$error(_this)))
                if (other.get$stackTrace() == _this.get$stackTrace()) {
                  t1 = t1._precomputed1;
                  t1 = J.$eq$(A.AsyncValueX_get_valueOrNull(other, t1), A.AsyncValueX_get_valueOrNull(_this, t1));
                } else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      var t5, t6, _this = this,
        t1 = A.getRuntimeType(_this),
        t2 = _this.get$isLoading(),
        t3 = _this.get$hasValue(),
        t4 = A.AsyncValueX_get_valueOrNull(_this, A._instanceType(_this)._precomputed1);
      if (t4 == null)
        t4 = 0;
      t5 = _this.get$error(_this);
      if (t5 == null)
        t5 = 0;
      t6 = _this.get$stackTrace();
      return A.Object_hash(t1, t2, t3, t4, t5, t6 == null ? 0 : t6, B.C_SentinelValue);
    }
  };
  A.AsyncData.prototype = {
    get$hasValue() {
      return true;
    },
    map$1$3$data$error$loading(_, data, error, loading, $R) {
      var t1 = this.$ti._bind$1($R);
      t1._eval$1("1(AsyncData<2>)")._as(data);
      t1._eval$1("1(AsyncError0<2>)")._as(error);
      t1._eval$1("1(AsyncLoading<2>)")._as(loading);
      return data.call$1(this);
    },
    copyWithPrevious$2$isRefresh(previous, isRefresh) {
      this.$ti._eval$1("AsyncValue<1>")._as(previous);
      return this;
    },
    get$value(receiver) {
      return this.value;
    },
    get$isLoading() {
      return this.isLoading;
    },
    get$error(receiver) {
      return this.error;
    },
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A.AsyncLoading.prototype = {
    get$isLoading() {
      return true;
    },
    map$1$3$data$error$loading(_, data, error, loading, $R) {
      var t1 = this.$ti._bind$1($R);
      t1._eval$1("1(AsyncData<2>)")._as(data);
      t1._eval$1("1(AsyncError0<2>)")._as(error);
      return t1._eval$1("1(AsyncLoading<2>)")._as(loading).call$1(this);
    },
    copyWithPrevious$2$isRefresh(previous, isRefresh) {
      var _this = this,
        t1 = _this.$ti._eval$1("AsyncValue<1>");
      t1._as(previous);
      if (isRefresh)
        return previous.map$1$3$data$error$loading(0, new A.AsyncLoading_copyWithPrevious_closure(_this), new A.AsyncLoading_copyWithPrevious_closure0(_this), new A.AsyncLoading_copyWithPrevious_closure1(_this), t1);
      else
        return previous.map$1$3$data$error$loading(0, new A.AsyncLoading_copyWithPrevious_closure2(_this), new A.AsyncLoading_copyWithPrevious_closure3(_this), new A.AsyncLoading_copyWithPrevious_closure4(_this), t1);
    },
    get$hasValue() {
      return this.hasValue;
    },
    get$value(receiver) {
      return this.value;
    },
    get$error(receiver) {
      return this.error;
    },
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A.AsyncLoading_copyWithPrevious_closure.prototype = {
    call$1(d) {
      var t1 = this.$this.$ti._eval$1("AsyncData<1>");
      t1._as(d);
      return new A.AsyncData(d.value, true, d.error, d.stackTrace, t1);
    },
    $signature() {
      return this.$this.$ti._eval$1("AsyncData<1>(AsyncData<1>)");
    }
  };
  A.AsyncLoading_copyWithPrevious_closure0.prototype = {
    call$1(e) {
      var t1 = this.$this.$ti,
        t2 = t1._eval$1("AsyncError0<1>");
      t2._as(e);
      return new A.AsyncError0(true, e.hasValue, A.AsyncValueX_get_valueOrNull(e, t1._precomputed1), e.error, e.stackTrace, t2);
    },
    $signature() {
      return this.$this.$ti._eval$1("AsyncError0<1>(AsyncError0<1>)");
    }
  };
  A.AsyncLoading_copyWithPrevious_closure1.prototype = {
    call$1(_) {
      var t1 = this.$this;
      t1.$ti._as(_);
      return t1;
    },
    $signature() {
      return this.$this.$ti._eval$1("AsyncLoading<1>(AsyncLoading<1>)");
    }
  };
  A.AsyncLoading_copyWithPrevious_closure2.prototype = {
    call$1(d) {
      var t1 = this.$this.$ti;
      t1._eval$1("AsyncData<1>")._as(d);
      return new A.AsyncLoading(true, A.AsyncValueX_get_valueOrNull(d, t1._precomputed1), d.error, d.stackTrace, t1);
    },
    $signature() {
      return this.$this.$ti._eval$1("AsyncLoading<1>(AsyncData<1>)");
    }
  };
  A.AsyncLoading_copyWithPrevious_closure3.prototype = {
    call$1(e) {
      var t1 = this.$this.$ti;
      t1._eval$1("AsyncError0<1>")._as(e);
      return new A.AsyncLoading(e.hasValue, A.AsyncValueX_get_valueOrNull(e, t1._precomputed1), e.error, e.stackTrace, t1);
    },
    $signature() {
      return this.$this.$ti._eval$1("AsyncLoading<1>(AsyncError0<1>)");
    }
  };
  A.AsyncLoading_copyWithPrevious_closure4.prototype = {
    call$1(e) {
      return this.$this.$ti._as(e);
    },
    $signature() {
      return this.$this.$ti._eval$1("AsyncLoading<1>(AsyncLoading<1>)");
    }
  };
  A.AsyncError0.prototype = {
    get$value(_) {
      var _this = this;
      if (!_this.hasValue)
        A.throwErrorWithCombinedStackTrace(_this.error, _this.stackTrace);
      return _this._common$_value;
    },
    map$1$3$data$error$loading(_, data, error, loading, $R) {
      var t1 = this.$ti._bind$1($R);
      t1._eval$1("1(AsyncData<2>)")._as(data);
      t1._eval$1("1(AsyncError0<2>)")._as(error);
      t1._eval$1("1(AsyncLoading<2>)")._as(loading);
      return error.call$1(this);
    },
    copyWithPrevious$2$isRefresh(previous, isRefresh) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("AsyncValue<1>")._as(previous);
      t2 = A.AsyncValueX_get_valueOrNull(previous, t1._precomputed1);
      return new A.AsyncError0(_this.isLoading, previous.get$hasValue(), t2, _this.error, _this.stackTrace, t1);
    },
    get$isLoading() {
      return this.isLoading;
    },
    get$hasValue() {
      return this.hasValue;
    },
    get$error(receiver) {
      return this.error;
    },
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A.AsyncValueX_whenData_closure.prototype = {
    call$1(d) {
      var err, stack, t1, exception, _this = this;
      _this.T._eval$1("AsyncData<0>")._as(d);
      try {
        t1 = _this.cb.call$1(d.value);
        return new A.AsyncData(t1, d.isLoading, d.error, d.stackTrace, _this.R._eval$1("AsyncData<0>"));
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        return new A.AsyncError0(d.isLoading, false, null, err, stack, _this.R._eval$1("AsyncError0<0>"));
      }
    },
    $signature() {
      return this.R._eval$1("@<0>")._bind$1(this.T)._eval$1("AsyncValue<1>(AsyncData<2>)");
    }
  };
  A.AsyncValueX_whenData_closure0.prototype = {
    call$1(e) {
      this.T._eval$1("AsyncError0<0>")._as(e);
      return new A.AsyncError0(e.isLoading, false, null, e.error, e.stackTrace, this.R._eval$1("AsyncError0<0>"));
    },
    $signature() {
      return this.R._eval$1("@<0>")._bind$1(this.T)._eval$1("AsyncError0<1>(AsyncError0<2>)");
    }
  };
  A.AsyncValueX_whenData_closure1.prototype = {
    call$1(l) {
      this.T._eval$1("AsyncLoading<0>")._as(l);
      return A.AsyncLoading$(this.R);
    },
    $signature() {
      return this.R._eval$1("@<0>")._bind$1(this.T)._eval$1("AsyncLoading<1>(AsyncLoading<2>)");
    }
  };
  A.AsyncValueX_maybeWhen_closure.prototype = {
    call$2(err, stack) {
      return this.orElse.call$0();
    },
    $signature() {
      return this.R._eval$1("0(Object,StackTrace)");
    }
  };
  A.AsyncValueX_maybeWhen_closure0.prototype = {
    call$0() {
      return this.orElse.call$0();
    },
    $signature() {
      return this.R._eval$1("0()");
    }
  };
  A.AlwaysAliveProviderListenable.prototype = {};
  A.AlwaysAliveProviderBase.prototype = {};
  A.AlwaysAliveAsyncSelector.prototype = {};
  A._StateReader.prototype = {
    _create$0() {
      var element, element0, _this = this,
        t1 = _this.origin;
      if (t1.$eq(0, $._circularDependencyLock))
        throw A.wrapException(new A.CircularDependencyError());
      if ($._circularDependencyLock == null)
        $._circularDependencyLock = t1;
      try {
        element0 = _this.override.createElement$0(0);
        element0.set$_provider(_this.override);
        element0.__ProviderElementBase__origin_A = t1;
        element0.__ProviderElementBase__container_A = _this.container;
        element0.mount$0();
        element = element0;
        element._framework1$_state.map$1$2$data$error(0, new A._StateReader__create_closure(_this), new A._StateReader__create_closure0(_this), type$.void);
        return element;
      } finally {
        if (J.$eq$($._circularDependencyLock, t1))
          $._circularDependencyLock = null;
      }
    }
  };
  A._StateReader__create_closure.prototype = {
    call$1(data) {
      var observer, t1, t2, t3, t4, t5, t6, t7, t8, _i;
      for (t1 = this.$this, t2 = t1.container, t3 = t2._observers, t4 = t3.length, t1 = t1.origin, t5 = data.state, t6 = type$.ProviderBase_dynamic, t7 = type$.nullable_Object, t8 = type$.ProviderContainer, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
        observer = t3[_i];
        A.runTernaryGuarded(observer.get$didAddProvider(), t1, t5, t2, t6, t7, t8);
      }
    },
    $signature: 103
  };
  A._StateReader__create_closure0.prototype = {
    call$1(error) {
      var observer, observer0, t1, t2, t3, t4, t5, t6, t7, _i, t8, t9, t10;
      for (t1 = this.$this, t2 = t1.container, t3 = t2._observers, t4 = t3.length, t1 = t1.origin, t5 = type$.ProviderBase_dynamic, t6 = type$.Null, t7 = type$.ProviderContainer, _i = 0; t8 = t3.length, _i < t8; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
        observer = t3[_i];
        A.runTernaryGuarded(observer.get$didAddProvider(), t1, null, t2, t5, t6, t7);
      }
      for (t4 = error.error, t6 = error.stackTrace, t9 = type$.Object, t10 = type$.StackTrace, _i = 0; _i < t3.length; t3.length === t8 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
        observer0 = t3[_i];
        A.runQuaternaryGuarded(observer0.get$providerDidFail(), t1, t4, t6, t2, t5, t9, t10, t7);
      }
    },
    $signature: 104
  };
  A.ProviderContainer.prototype = {
    ProviderContainer$3$observers$overrides$parent(observers, overrides, $parent) {
      var t1, t2, _i, override, _this = this;
      if ($parent != null) {
        B.JSArray_methods.add$1($parent._framework1$_children, _this);
        _this._overrideForFamily.addAll$1(0, $parent._overrideForFamily);
      }
      for (t1 = _this._overrideForProvider, t2 = _this._stateReaders, _i = 0; false; ++_i) {
        override = overrides[_i];
        t1.$indexSet(0, override, override);
        t2.$indexSet(0, override, new A._StateReader(override, override, _this, false));
      }
    },
    get$_scheduler() {
      var t1, result, _this = this,
        value = _this.__ProviderContainer__scheduler_FI;
      if (value === $) {
        t1 = _this._framework1$_parent;
        result = t1 == null ? null : t1.get$_scheduler();
        if (result == null)
          result = new A._ProviderScheduler(A._setArrayType([], type$.JSArray_AutoDisposeProviderElementMixin_dynamic), A._setArrayType([], type$.JSArray_ProviderElementBase_dynamic));
        _this.__ProviderContainer__scheduler_FI !== $ && A.throwLateFieldADI("_scheduler");
        value = _this.__ProviderContainer__scheduler_FI = result;
      }
      return value;
    },
    _listenElement$1$3$listener$onError(element, listener, onError, State) {
      var sub;
      State._eval$1("ProviderElementBase<0>")._as(element);
      sub = new A._ExternalProviderSubscription(State._eval$1("~(0?,0)")._as(listener), element, type$.void_Function_Object_StackTrace._as(onError), State._eval$1("_ExternalProviderSubscription<0>"));
      B.JSArray_methods.add$1(element._externalDependents, sub);
      return sub;
    },
    updateOverrides$1(overrides) {
      var t1, t2, t3, t4, t5, _i, override, t6, element;
      type$.List_Override._as(overrides);
      if (this._disposed)
        throw A.wrapException(A.StateError$("Called updateOverrides on a ProviderContainer that was already disposed"));
      for (t1 = this._stateReaders, t2 = type$.void_Function_ProviderBase_dynamic, t3 = type$.ProviderBase_dynamic, t4 = type$.void, t5 = this._overrideForProvider, _i = 0; false; ++_i) {
        override = overrides[_i];
        t6 = t1.$index(0, override);
        t6.toString;
        t5.$indexSet(0, override, override);
        t6.override = override;
        element = t6._framework1$_element;
        if (element == null)
          continue;
        A.runUnaryGuarded(t2._as(element.get$update()), override, t3, t4);
      }
    },
    readProviderElement$1$1(provider, State) {
      var reader, t1;
      State._eval$1("ProviderBase<0>")._as(provider);
      if (this._disposed)
        throw A.wrapException(A.StateError$("Tried to read a provider from a ProviderContainer that was already disposed"));
      reader = this._getStateReader$1(provider);
      t1 = reader._framework1$_element;
      if (t1 == null)
        t1 = reader._framework1$_element = reader._create$0();
      return State._eval$1("ProviderElementBase<0>")._as(t1);
    },
    _getStateReader$1(provider) {
      var t2,
        t1 = this._stateReaders,
        currentReader = t1.$index(0, provider);
      if (currentReader != null)
        return currentReader;
      t2 = new A.ProviderContainer__getStateReader_getReader(this, provider).call$0();
      t1.$indexSet(0, provider, t2);
      return t2;
    },
    dispose$0() {
      var t1, t2, t3, _this = this;
      if (_this._disposed)
        return;
      t1 = _this._framework1$_parent;
      if (t1 != null)
        B.JSArray_methods.remove$1(t1._framework1$_children, _this);
      _this._disposed = true;
      for (t1 = _this.getAllProviderElementsInOrder$0(), t1 = A.List_List$of(t1, true, t1.$ti._eval$1("Iterable.E")), t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"), t1 = new A.ReversedListIterable(t1, t2), t1 = new A.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        (t3 == null ? t2._as(t3) : t3).dispose$0();
      }
      if (_this._root == null) {
        t1 = _this.get$_scheduler();
        t2 = t1._pendingTaskCompleter;
        if (t2 != null)
          t2.complete$0(0);
        t1._pendingTaskCompleter = null;
      }
    },
    getAllProviderElementsInOrder$0() {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, queue, t3, t4, t5, t6, _box_0, t7, element, result, visitedNodes, t1, t2;
        return function $async$getAllProviderElementsInOrder$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                visitedNodes = A.HashSet_HashSet(type$.ProviderElementBase_dynamic);
                t1 = type$._DoubleLinkedQueueSentinel_ProviderElementBase_dynamic;
                t2 = new A._DoubleLinkedQueueSentinel(t1);
                t2.set$_previousLink(t2);
                t2.set$_nextLink(t2);
                queue = new A.DoubleLinkedQueue(t2, type$.DoubleLinkedQueue_ProviderElementBase_dynamic);
                for (t3 = $async$self._stateReaders, t3 = t3.get$values(t3), t4 = A._instanceType(t3), t4 = t4._eval$1("@<1>")._bind$1(t4._rest[1]), t3 = new A.MappedIterator(J.get$iterator$ax(t3.__internal$_iterable), t3._f, t4._eval$1("MappedIterator<1,2>")), t4 = t4._rest[1], t5 = t1._precomputed1, t6 = t1._eval$1("DoubleLinkedQueue<1>?"), t1 = t1._eval$1("_DoubleLinkedQueueElement<1>"); t3.moveNext$0();) {
                  _box_0 = {};
                  t7 = t3.__internal$_current;
                  if (t7 == null)
                    t7 = t4._as(t7);
                  if (t7.container !== $async$self)
                    continue;
                  element = t7._framework1$_element;
                  if (element == null)
                    continue;
                  _box_0.hasAncestorsInContainer = false;
                  element.visitAncestors$1(new A.ProviderContainer_getAllProviderElementsInOrder_closure(_box_0, $async$self));
                  if (!_box_0.hasAncestorsInContainer) {
                    t5._as(element);
                    new A._DoubleLinkedQueueElement(t6._as(queue), element, t1)._link$2(t2._previousLink, t2);
                    ++queue._elementCount;
                  }
                }
              case 2:
                // for condition
                if (!!queue.get$isEmpty(queue)) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                result = t2._nextLink._remove$0();
                --queue._elementCount;
                if (!visitedNodes.add$1(0, result)) {
                  // goto for condition
                  $async$goto = 2;
                  break;
                }
                $async$goto = 4;
                return result;
              case 4:
                // after yield
                result.visitChildren$2$elementVisitor$notifierVisitor(new A.ProviderContainer_getAllProviderElementsInOrder_closure0($async$self, visitedNodes, queue), new A.ProviderContainer_getAllProviderElementsInOrder_closure1());
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.ProviderElementBase_dynamic);
    },
    $isNode0: 1
  };
  A.ProviderContainer__getStateReader_getReader.prototype = {
    call$0() {
      var familyOverrideRef, t4, t5, root, t6, dependencies, value, result, containerForDependencyOverride, deepestOverrideContainer, reader, _null = null,
        t1 = this.provider,
        t2 = t1.from,
        t3 = t2 == null;
      if (!t3) {
        familyOverrideRef = this.$this._overrideForFamily.$index(0, t2);
        if (familyOverrideRef != null) {
          t2 = familyOverrideRef.container;
          t3 = t2._stateReaders;
          if (t3.containsKey$1(t1)) {
            t1 = t3.$index(0, t1);
            t1.toString;
            return t1;
          }
          t4 = familyOverrideRef.override;
          t5 = A._instanceType(t4);
          t5._eval$1("ProviderBase<_FamilyMixin.0>")._as(t1);
          new A.ProviderContainer__getStateReader_getReader_setupOverride(familyOverrideRef).call$2$origin$override(t1, t4.call$1(t5._eval$1("_FamilyMixin.1")._as(t1.argument)));
          t3 = t3.$index(0, t1);
          return t3 == null ? new A._StateReader(t1, t1, t2, true) : t3;
        }
      }
      t4 = this.$this;
      root = t4._root;
      t5 = root == null;
      t6 = !t5;
      if (t6) {
        if (t3)
          dependencies = _null;
        else {
          value = t2.__FamilyBase_allTransitiveDependencies_FI;
          if (value === $) {
            t3 = t2.dependencies;
            result = t3 == null ? _null : A._allTransitiveDependencies(t3);
            t2.__FamilyBase_allTransitiveDependencies_FI !== $ && A.throwLateFieldADI("allTransitiveDependencies");
            t2.set$__FamilyBase_allTransitiveDependencies_FI(result);
            value = result;
          }
          dependencies = value;
        }
        if (dependencies == null)
          if (t1.get$dependencies() == null)
            dependencies = _null;
          else {
            t2 = t1.get$dependencies();
            t2.toString;
            t2 = A._allTransitiveDependencies(t2);
            dependencies = t2;
          }
        if (dependencies == null)
          containerForDependencyOverride = _null;
        else {
          t2 = A._arrayInstanceType(dependencies);
          t3 = t2._eval$1("MappedListIterable<1,ProviderContainer?>");
          t3 = new A.MappedListIterable(dependencies, t2._eval$1("ProviderContainer?(1)")._as(new A.ProviderContainer__getStateReader_getReader_closure(t4)), t3).super$Iterable$where(0, t3._eval$1("bool(ListIterable.E)")._as(new A.ProviderContainer__getStateReader_getReader_closure0()));
          containerForDependencyOverride = A.List_List$of(t3, true, t3.$ti._eval$1("Iterable.E"));
        }
        if (containerForDependencyOverride != null && containerForDependencyOverride.length !== 0) {
          deepestOverrideContainer = (containerForDependencyOverride && B.JSArray_methods).fold$1$2(containerForDependencyOverride, root, new A.ProviderContainer__getStateReader_getReader_closure1(), type$.ProviderContainer);
          return deepestOverrideContainer._stateReaders.putIfAbsent$2(t1, new A.ProviderContainer__getStateReader_getReader_closure2(t1, deepestOverrideContainer));
        }
      }
      t2 = t5 ? _null : root._stateReaders.containsKey$1(t1);
      if (t2 === true) {
        t1 = root._stateReaders.$index(0, t1);
        t1.toString;
        return t1;
      }
      reader = new A._StateReader(t1, t1, t5 ? t4 : root, true);
      if (t6)
        root._stateReaders.$indexSet(0, t1, reader);
      return reader;
    },
    $signature: 28
  };
  A.ProviderContainer__getStateReader_getReader_setupOverride.prototype = {
    call$2$origin$override(origin, override) {
      var t1 = this.familyOverrideRef.container,
        t2 = t1._stateReaders;
      if (t2.$index(0, origin) == null)
        t2.$indexSet(0, origin, new A._StateReader(origin, override, t1, true));
    },
    $signature: 106
  };
  A.ProviderContainer__getStateReader_getReader_closure.prototype = {
    call$1(dep) {
      var t1, reader, familyOverride;
      type$.ProviderOrFamily._as(dep);
      t1 = this.$this;
      reader = t1._stateReaders.$index(0, dep);
      if (reader != null)
        return reader.container;
      familyOverride = t1._overrideForFamily.$index(0, dep);
      return familyOverride == null ? null : familyOverride.container;
    },
    $signature: 107
  };
  A.ProviderContainer__getStateReader_getReader_closure0.prototype = {
    call$1(container) {
      return type$.nullable_ProviderContainer._as(container) != null;
    },
    $signature: 108
  };
  A.ProviderContainer__getStateReader_getReader_closure1.prototype = {
    call$2(previous, container) {
      type$.ProviderContainer._as(previous);
      type$.nullable_ProviderContainer._as(container);
      if (container.depth > previous.depth)
        return container;
      return previous;
    },
    $signature: 109
  };
  A.ProviderContainer__getStateReader_getReader_closure2.prototype = {
    call$0() {
      var t1 = this.provider;
      return new A._StateReader(t1, t1, this.deepestOverrideContainer, true);
    },
    $signature: 28
  };
  A.ProviderContainer_getAllProviderElementsInOrder_closure.prototype = {
    call$1(element) {
      var t1 = type$.ProviderElementBase_dynamic._as(element).__ProviderElementBase__container_A;
      t1 === $ && A.throwLateFieldNI("_container");
      if (t1 === this.$this)
        this._box_0.hasAncestorsInContainer = true;
    },
    $signature: 5
  };
  A.ProviderContainer_getAllProviderElementsInOrder_closure0.prototype = {
    call$1(dependent) {
      var t3, t1 = {},
        t2 = dependent.__ProviderElementBase__container_A;
      t2 === $ && A.throwLateFieldNI("_container");
      t3 = this.$this;
      if (t2 === t3) {
        t1.areAllAncestorsAlreadyVisited = true;
        dependent.visitAncestors$1(new A.ProviderContainer_getAllProviderElementsInOrder__closure(t1, t3, this.visitedNodes));
        if (t1.areAllAncestorsAlreadyVisited)
          this.queue.add$1(0, dependent);
      }
    },
    $signature: 5
  };
  A.ProviderContainer_getAllProviderElementsInOrder__closure.prototype = {
    call$1(e) {
      var t1;
      type$.ProviderElementBase_dynamic._as(e);
      t1 = e.__ProviderElementBase__container_A;
      t1 === $ && A.throwLateFieldNI("_container");
      if (t1 === this.$this && !this.visitedNodes.contains$1(0, e))
        this._box_1.areAllAncestorsAlreadyVisited = false;
    },
    $signature: 5
  };
  A.ProviderContainer_getAllProviderElementsInOrder_closure1.prototype = {
    call$1(_) {
    },
    $signature: 12
  };
  A.CircularDependencyError.prototype = {};
  A.ProviderElementBase.prototype = {
    get$hasListeners() {
      return this._externalDependents.length !== 0 || this._subscribers.length !== 0 || this._providerDependents.length !== 0;
    },
    setState$1(newState) {
      var previousResult, result, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("ProviderElementBase.0")._as(newState);
      previousResult = _this._framework1$_state;
      result = new A.ResultData(newState, t1._eval$1("ResultData<ProviderElementBase.0>"));
      _this.set$_framework1$_state(result);
      if (_this._didBuild)
        _this._notifyListeners$2(result, previousResult);
    },
    get$requireState() {
      var state = this._framework1$_state;
      if (state == null)
        throw A.wrapException(A.StateError$("Tried to read the state of an uninitialized provider"));
      return state.when$1$2$data$error(new A.ProviderElementBase_requireState_closure(this), A.stack_trace__throwErrorWithCombinedStackTrace$closure(), A._instanceType(this)._eval$1("ProviderElementBase.0"));
    },
    mount$0() {
      var _this = this;
      _this._framework1$_mounted = true;
      _this.buildState$0();
      _this._framework1$_state.map$1$2$data$error(0, new A.ProviderElementBase_mount_closure(_this), new A.ProviderElementBase_mount_closure0(_this), type$.Null);
    },
    update$1(newProvider) {
      this.set$_provider(A._instanceType(this)._eval$1("ProviderBase<ProviderElementBase.0>")._as(newProvider));
    },
    invalidateSelf$0() {
      var t1, _this = this;
      if (_this._mustRecomputeState)
        return;
      _this._mustRecomputeState = true;
      _this.runOnDispose$0();
      t1 = _this.__ProviderElementBase__container_A;
      t1 === $ && A.throwLateFieldNI("_container");
      t1 = t1.get$_scheduler();
      B.JSArray_methods.add$1(t1._stateToRefresh, _this);
      t1._scheduleTask$0();
      _this.visitChildren$2$elementVisitor$notifierVisitor(new A.ProviderElementBase_invalidateSelf_closure(), new A.ProviderElementBase_invalidateSelf_closure0());
    },
    flush$0() {
      var _this = this;
      _this._maybeRebuildDependencies$0();
      if (_this._mustRecomputeState) {
        _this._mustRecomputeState = false;
        _this._performBuild$0();
      }
    },
    _maybeRebuildDependencies$0() {
      if (!this._dependencyMayHaveChanged)
        return;
      this._dependencyMayHaveChanged = false;
      this.visitAncestors$1(new A.ProviderElementBase__maybeRebuildDependencies_closure());
    },
    _performBuild$0() {
      var previousStateResult, t1, t2, _this = this, _null = null;
      _this.set$_previousDependencies(_this._framework1$_dependencies);
      _this.set$_framework1$_dependencies(A.HashMap_HashMap(_null, _null, _null, type$.ProviderElementBase_dynamic, type$.Object));
      previousStateResult = _this._framework1$_state;
      _this.buildState$0();
      t1 = _this._framework1$_state;
      if (t1 != previousStateResult) {
        t1.toString;
        _this._notifyListeners$2(t1, previousStateResult);
      }
      for (t1 = _this._previousDependencies, t1 = t1.get$entries(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current().key;
        B.JSArray_methods.remove$1(t2._providerDependents, _this);
        t2._onRemoveListener$0();
      }
      _this.set$_previousDependencies(_null);
    },
    buildState$0() {
      var err, stack, exception, _this = this,
        previousDidChangeDependency = _this._didChangeDependency;
      _this._didBuild = _this._didChangeDependency = false;
      try {
        _this._framework1$_mounted = true;
        _this.create$1$didChangeDependency(previousDidChangeDependency);
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        _this.set$_framework1$_state(new A.ResultError(err, stack, A._instanceType(_this)._eval$1("ResultError<ProviderElementBase.0>")));
      } finally {
        _this._didBuild = true;
      }
    },
    _notifyListeners$2(newState, previousStateResult) {
      var t2, previousState, t3, listeners, subscribers, i, t4, t5, t6, _i, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("Result<ProviderElementBase.0>")._as(newState);
      t1._eval$1("Result<ProviderElementBase.0>?")._as(previousStateResult);
      t2 = previousStateResult == null;
      previousState = t2 ? null : previousStateResult.get$stateOrNull();
      t3 = type$.Null;
      newState.map$1$2$data$error(0, new A.ProviderElementBase__notifyListeners_closure(_this, previousState), new A.ProviderElementBase__notifyListeners_closure0(_this), t3);
      if (!t2)
        if (previousStateResult.get$hasState())
          if (newState.get$hasState()) {
            t2 = previousState == null ? t1._eval$1("ProviderElementBase.0")._as(previousState) : previousState;
            t2 = !_this.updateShouldNotify$2(t2, newState.get$requireState());
          } else
            t2 = false;
        else
          t2 = false;
      else
        t2 = false;
      if (t2)
        return;
      t2 = _this._externalDependents;
      listeners = J.JSArray_JSArray$markFixed(t2.slice(0), A._arrayInstanceType(t2)._precomputed1);
      t2 = _this._subscribers;
      subscribers = J.JSArray_JSArray$markFixed(t2.slice(0), A._arrayInstanceType(t2)._precomputed1);
      newState.map$1$2$data$error(0, new A.ProviderElementBase__notifyListeners_closure1(_this, listeners, previousState, subscribers), new A.ProviderElementBase__notifyListeners_closure2(_this, listeners, subscribers), t3);
      for (t2 = _this._providerDependents, i = 0; i < t2.length; ++i)
        t2[i]._markDependencyChanged$0();
      t2 = _this.__ProviderElementBase__container_A;
      t2 === $ && A.throwLateFieldNI("_container");
      t2 = t2._observers;
      t4 = t2.length;
      t5 = t1._eval$1("ProviderBase<ProviderElementBase.0>");
      t1 = t1._eval$1("ProviderElementBase.0?");
      t6 = type$.ProviderContainer;
      _i = 0;
      for (; _i < t2.length; t2.length === t4 || (0, A.throwConcurrentModificationError)(t2), ++_i)
        A.runQuaternaryGuarded(t2[_i].get$didUpdateProvider(), _this._provider, previousState, newState.get$stateOrNull(), _this.__ProviderElementBase__container_A, t5, t1, t1, t6);
      for (t1 = _this.__ProviderElementBase__container_A._observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        newState.map$1$2$data$error(0, new A.ProviderElementBase__notifyListeners_closure3(_this), new A.ProviderElementBase__notifyListeners_closure4(_this, t1[_i]), t3);
    },
    _markDependencyChanged$0() {
      this._didChangeDependency = true;
      if (this._mustRecomputeState)
        return;
      this.invalidateSelf$0();
    },
    _markDependencyMayHaveChanged$0() {
      if (this._dependencyMayHaveChanged)
        return;
      this._dependencyMayHaveChanged = true;
      this.visitChildren$2$elementVisitor$notifierVisitor(new A.ProviderElementBase__markDependencyMayHaveChanged_closure(), new A.ProviderElementBase__markDependencyMayHaveChanged_closure0());
    },
    watch$1$1(listenable, $T) {
      var t1, element, _this = this;
      $T._eval$1("ProviderListenable<0>")._as(listenable);
      if (!$T._eval$1("ProviderBase<0>")._is(listenable))
        return $T._eval$1("ProviderListenable<0>")._as(listenable).addListener$5$fireImmediately$onDependencyMayHaveChanged$onError(_this, $T._eval$1("~(0?,0)")._as(new A.ProviderElementBase_watch_closure(_this, $T)), false, type$.nullable_void_Function._as(_this.get$_markDependencyMayHaveChanged()), type$.nullable_void_Function_Object_StackTrace._as(new A.ProviderElementBase_watch_closure0(_this))).read$0();
      t1 = _this.__ProviderElementBase__container_A;
      t1 === $ && A.throwLateFieldNI("_container");
      element = t1.readProviderElement$1$1(listenable, $T);
      _this._framework1$_dependencies.putIfAbsent$2(element, new A.ProviderElementBase_watch_closure1(_this, element));
      element.flush$0();
      return element.get$requireState();
    },
    readProviderElement$1$1(provider, $T) {
      var t1;
      $T._eval$1("ProviderBase<0>")._as(provider);
      t1 = this.__ProviderElementBase__container_A;
      t1 === $ && A.throwLateFieldNI("_container");
      return t1.readProviderElement$1$1(provider, $T);
    },
    _listenElement$1$3$listener$onError(element, listener, onError, $T) {
      var sub;
      $T._eval$1("ProviderElementBase<0>")._as(element);
      sub = new A._ProviderListener(new A.ProviderElementBase__listenElement_closure($T._eval$1("~(0?,0)")._as(listener), $T), this, element, type$.void_Function_Object_StackTrace._as(onError), $T._eval$1("_ProviderListener<0>"));
      B.JSArray_methods.add$1(element._subscribers, sub);
      B.JSArray_methods.add$1(this._listenedProviderSubscriptions, sub);
      return sub;
    },
    visitChildren$2$elementVisitor$notifierVisitor(elementVisitor, notifierVisitor) {
      var t1, i;
      type$.void_Function_ProviderElementBase_dynamic._as(elementVisitor);
      type$.void_Function_ProxyElementValueNotifier_dynamic._as(notifierVisitor);
      for (t1 = this._providerDependents, i = 0; i < t1.length; ++i)
        elementVisitor.call$1(t1[i]);
      for (t1 = this._subscribers, i = 0; i < t1.length; ++i)
        elementVisitor.call$1(t1[i].dependentElement);
    },
    visitAncestors$1(visitor) {
      var t1, i;
      type$.void_Function_ProviderElementBase_dynamic._as(visitor);
      t1 = this._framework1$_dependencies;
      new A._HashMapKeyIterable(t1, A._instanceType(t1)._eval$1("_HashMapKeyIterable<1>")).forEach$1(0, visitor);
      for (t1 = this._listenedProviderSubscriptions, i = 0; i < t1.length; ++i)
        visitor.call$1(t1[i].listenedElement);
    },
    dispose$0() {
      var t1, t2, _this = this;
      _this.runOnDispose$0();
      for (t1 = _this._framework1$_dependencies, t1 = t1.get$entries(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current().key;
        B.JSArray_methods.remove$1(t2._providerDependents, _this);
        t2._onRemoveListener$0();
      }
      _this._framework1$_dependencies.clear$0(0);
      B.JSArray_methods.clear$0(_this._externalDependents);
    },
    _onListen$0() {
      this._didCancelOnce && !this.get$hasListeners();
    },
    _onRemoveListener$0() {
      if (!this.get$hasListeners())
        this._didCancelOnce = true;
    },
    runOnDispose$0() {
      var t1, t2, t3, t4, _i, t5, t6, _this = this, _null = null;
      if (!_this._framework1$_mounted)
        return;
      _this._framework1$_mounted = false;
      for (t1 = _this._listenedProviderSubscriptions; t1.length !== 0;)
        B.JSArray_methods.get$first(t1).close$0(0);
      t1 = _this.__ProviderElementBase__container_A;
      t1 === $ && A.throwLateFieldNI("_container");
      t1 = t1._observers;
      t2 = t1.length;
      t3 = type$.ProviderBase_nullable_Object;
      t4 = type$.ProviderContainer;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        t5 = t1[_i].get$didDisposeProvider();
        t6 = _this.__ProviderElementBase__origin_A;
        t6 === $ && A.throwLateFieldNI("_origin");
        A.runBinaryGuarded(t5, t6, _this.__ProviderElementBase__container_A, t3, t4);
      }
      _this.set$_onDisposeListeners(_null);
      _this.set$_onCancelListeners(_null);
      _this.set$_onResumeListeners(_null);
      _this.set$_onAddListeners(_null);
      _this.set$_onRemoveListeners(_null);
      _this.set$_onChangeSelfListeners(_null);
      _this.set$_onErrorSelfListeners(_null);
      _this._didCancelOnce = false;
    },
    toString$0(_) {
      var t1 = A.getRuntimeType(this).toString$0(0),
        t2 = this._provider.toString$0(0),
        t3 = this.__ProviderElementBase__origin_A;
      t3 === $ && A.throwLateFieldNI("_origin");
      return t1 + "(provider: " + t2 + ", origin: " + t3.toString$0(0) + ")";
    },
    set$_provider(_provider) {
      this._provider = A._instanceType(this)._eval$1("ProviderBase<ProviderElementBase.0>")._as(_provider);
    },
    set$_framework1$_dependencies(_dependencies) {
      this._framework1$_dependencies = type$.HashMap_of_ProviderElementBase_dynamic_and_Object._as(_dependencies);
    },
    set$_previousDependencies(_previousDependencies) {
      this._previousDependencies = type$.nullable_HashMap_of_ProviderElementBase_dynamic_and_Object._as(_previousDependencies);
    },
    set$_onDisposeListeners(_onDisposeListeners) {
      this._onDisposeListeners = type$.nullable_List_of_void_Function._as(_onDisposeListeners);
    },
    set$_onResumeListeners(_onResumeListeners) {
      this._onResumeListeners = type$.nullable_List_of_void_Function._as(_onResumeListeners);
    },
    set$_onCancelListeners(_onCancelListeners) {
      this._onCancelListeners = type$.nullable_List_of_void_Function._as(_onCancelListeners);
    },
    set$_onAddListeners(_onAddListeners) {
      this._onAddListeners = type$.nullable_List_of_void_Function._as(_onAddListeners);
    },
    set$_onRemoveListeners(_onRemoveListeners) {
      this._onRemoveListeners = type$.nullable_List_of_void_Function._as(_onRemoveListeners);
    },
    set$_onChangeSelfListeners(_onChangeSelfListeners) {
      this._onChangeSelfListeners = A._instanceType(this)._eval$1("List<~(ProviderElementBase.0?,ProviderElementBase.0)>?")._as(_onChangeSelfListeners);
    },
    set$_onErrorSelfListeners(_onErrorSelfListeners) {
      this._onErrorSelfListeners = type$.nullable_List_of_void_Function_Object_StackTrace._as(_onErrorSelfListeners);
    },
    set$_framework1$_state(_state) {
      this._framework1$_state = A._instanceType(this)._eval$1("Result<ProviderElementBase.0>?")._as(_state);
    },
    $isNode0: 1
  };
  A.ProviderElementBase_requireState_closure.prototype = {
    call$1(data) {
      return A._instanceType(this.$this)._eval$1("ProviderElementBase.0")._as(data);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("ProviderElementBase.0(ProviderElementBase.0)");
    }
  };
  A.ProviderElementBase_mount_closure.prototype = {
    call$1(newState) {
      A._instanceType(this.$this)._eval$1("ResultData<ProviderElementBase.0>")._as(newState);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultData<ProviderElementBase.0>)");
    }
  };
  A.ProviderElementBase_mount_closure0.prototype = {
    call$1(newState) {
      A._instanceType(this.$this)._eval$1("ResultError<ProviderElementBase.0>")._as(newState);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultError<ProviderElementBase.0>)");
    }
  };
  A.ProviderElementBase_invalidateSelf_closure.prototype = {
    call$1(element) {
      return element._markDependencyMayHaveChanged$0();
    },
    $signature: 5
  };
  A.ProviderElementBase_invalidateSelf_closure0.prototype = {
    call$1(notifier) {
      return notifier.notifyDependencyMayHaveChanged$0();
    },
    $signature: 12
  };
  A.ProviderElementBase__maybeRebuildDependencies_closure.prototype = {
    call$1(element) {
      type$.ProviderElementBase_dynamic._as(element).flush$0();
    },
    $signature: 5
  };
  A.ProviderElementBase__notifyListeners_closure.prototype = {
    call$1(newState) {
      A._instanceType(this.$this)._eval$1("ResultData<ProviderElementBase.0>")._as(newState);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultData<ProviderElementBase.0>)");
    }
  };
  A.ProviderElementBase__notifyListeners_closure0.prototype = {
    call$1(newState) {
      A._instanceType(this.$this)._eval$1("ResultError<ProviderElementBase.0>")._as(newState);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultError<ProviderElementBase.0>)");
    }
  };
  A.ProviderElementBase__notifyListeners_closure1.prototype = {
    call$1(newState) {
      var t2, t3, t4, t5, t6, i, _this = this,
        t1 = A._instanceType(_this.$this);
      for (t2 = _this.listeners, t3 = t1._eval$1("~(ProviderElementBase.0?,ProviderElementBase.0)"), t4 = _this.previousState, t5 = t1._eval$1("ResultData<ProviderElementBase.0>")._as(newState).state, t6 = t1._eval$1("ProviderElementBase.0?"), t1 = t1._eval$1("ProviderElementBase.0"), i = 0; i < t2.length; ++i)
        $.Zone__current.runBinaryGuarded$2$3(t3._as(t2[i]._listener), t4, t5, t6, t1);
      for (t2 = _this.subscribers, i = 0; i < t2.length; ++i)
        $.Zone__current.runBinaryGuarded$2$3(t2[i].listener, t4, t5, t6, t1);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultData<ProviderElementBase.0>)");
    }
  };
  A.ProviderElementBase__notifyListeners_closure2.prototype = {
    call$1(newState) {
      var t1, t2, t3, t4, t5, i;
      A._instanceType(this.$this)._eval$1("ResultError<ProviderElementBase.0>")._as(newState);
      for (t1 = this.listeners, t2 = newState.error, t3 = newState.stackTrace, t4 = type$.Object, t5 = type$.StackTrace, i = 0; i < t1.length; ++i)
        $.Zone__current.runBinaryGuarded$2$3(t1[i].onError, t2, t3, t4, t5);
      for (t1 = this.subscribers, i = 0; i < t1.length; ++i)
        $.Zone__current.runBinaryGuarded$2$3(t1[i].onError, t2, t3, t4, t5);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultError<ProviderElementBase.0>)");
    }
  };
  A.ProviderElementBase__notifyListeners_closure3.prototype = {
    call$1(_) {
      A._instanceType(this.$this)._eval$1("ResultData<ProviderElementBase.0>")._as(_);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultData<ProviderElementBase.0>)");
    }
  };
  A.ProviderElementBase__notifyListeners_closure4.prototype = {
    call$1(newState) {
      var t3, t4,
        t1 = this.$this,
        t2 = A._instanceType(t1);
      t2._eval$1("ResultError<ProviderElementBase.0>")._as(newState);
      t3 = this.observer.get$providerDidFail();
      t4 = t1._provider;
      t1 = t1.__ProviderElementBase__container_A;
      t1 === $ && A.throwLateFieldNI("_container");
      A.runQuaternaryGuarded(t3, t4, newState.error, newState.stackTrace, t1, t2._eval$1("ProviderBase<ProviderElementBase.0>"), type$.Object, type$.StackTrace, type$.ProviderContainer);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("Null(ResultError<ProviderElementBase.0>)");
    }
  };
  A.ProviderElementBase__markDependencyMayHaveChanged_closure.prototype = {
    call$1(element) {
      return element._markDependencyMayHaveChanged$0();
    },
    $signature: 5
  };
  A.ProviderElementBase__markDependencyMayHaveChanged_closure0.prototype = {
    call$1(notifier) {
      return notifier.notifyDependencyMayHaveChanged$0();
    },
    $signature: 12
  };
  A.ProviderElementBase_watch_closure.prototype = {
    call$2(prev, value) {
      var t1 = this.T;
      t1._eval$1("0?")._as(prev);
      t1._as(value);
      return this.$this._markDependencyChanged$0();
    },
    $signature() {
      return this.T._eval$1("~(0?,0)");
    }
  };
  A.ProviderElementBase_watch_closure0.prototype = {
    call$2(err, stack) {
      type$.Object._as(err);
      type$.StackTrace._as(stack);
      return this.$this._markDependencyChanged$0();
    },
    $signature: 4
  };
  A.ProviderElementBase_watch_closure1.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._previousDependencies,
        previousSub = t2 == null ? null : t2.remove$1(0, this.element);
      if (previousSub != null)
        return previousSub;
      t2 = this.element;
      t2._onListen$0();
      B.JSArray_methods.add$1(t2._providerDependents, t1);
      return new A.Object();
    },
    $signature: 112
  };
  A.ProviderElementBase__listenElement_closure.prototype = {
    call$2(prev, value) {
      var t1 = this.T;
      return this.listener.call$2(t1._eval$1("0?")._as(prev), t1._as(value));
    },
    $signature: 13
  };
  A.Family.prototype = {
    get$from() {
      return null;
    },
    $isOverride: 1,
    $isFamilyOverride: 1
  };
  A._FamilyMixin.prototype = {};
  A.FamilyBase.prototype = {
    call$1(argument) {
      var _this = this;
      A._instanceType(_this)._eval$1("FamilyBase.2")._as(argument);
      return _this._providerFactory.call$5$argument$dependencies$from$name(new A.FamilyBase_call_closure(_this, argument), argument, _this.dependencies, _this, _this.name);
    },
    set$__FamilyBase_allTransitiveDependencies_FI(__FamilyBase_allTransitiveDependencies_FI) {
      this.__FamilyBase_allTransitiveDependencies_FI = type$.nullable_List_ProviderOrFamily._as(__FamilyBase_allTransitiveDependencies_FI);
    },
    get$dependencies() {
      return this.dependencies;
    }
  };
  A.FamilyBase_call_closure.prototype = {
    call$1(ref) {
      var t1 = this.$this;
      return t1._framework1$_createFn.call$2(A._instanceType(t1)._eval$1("FamilyBase.0")._as(ref), this.argument);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("FamilyBase.3(FamilyBase.0)");
    }
  };
  A.ProviderOrFamily.prototype = {};
  A._allTransitiveDependencies_visitDependency.prototype = {
    call$1(dep) {
      var t1, t2, depFamily;
      type$.ProviderOrFamily._as(dep);
      t1 = this.result;
      if (t1.add$1(0, dep) && dep.get$dependencies() != null) {
        t2 = dep.get$dependencies();
        t2.toString;
        J.forEach$1$ax(t2, this);
      }
      depFamily = dep.get$from();
      if (depFamily != null && t1.add$1(0, depFamily) && depFamily.dependencies != null) {
        t1 = depFamily.dependencies;
        t1.toString;
        J.forEach$1$ax(t1, this);
      }
    },
    $signature: 113
  };
  A.ProviderListenable.prototype = {};
  A.ProviderBase.prototype = {
    addListener$5$fireImmediately$onDependencyMayHaveChanged$onError(node, listener, fireImmediately, onDependencyMayHaveChanged, onError) {
      var element,
        t1 = A._instanceType(this);
      t1._eval$1("~(ProviderBase.0?,ProviderBase.0)")._as(listener);
      type$.nullable_void_Function_Object_StackTrace._as(onError);
      type$.nullable_void_Function._as(onDependencyMayHaveChanged);
      if (onError == null)
        onError = $.Zone__current.get$handleUncaughtError();
      t1 = t1._eval$1("ProviderBase.0");
      element = node.readProviderElement$1$1(this, t1);
      element.flush$0();
      element._onListen$0();
      return node._listenElement$1$3$listener$onError(element, listener, onError, t1);
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.from;
      if (t1 == null)
        return A.Object.prototype.get$hashCode.call(_this, _this);
      return (t1.get$hashCode(t1) ^ J.get$hashCode$(_this.argument)) >>> 0;
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      t1 = _this.from;
      if (t1 == null)
        return other === _this;
      return J.get$runtimeType$(other) === A.getRuntimeType(_this) && A._instanceType(_this)._eval$1("ProviderBase<ProviderBase.0>")._is(other) && other.from === t1 && J.$eq$(other.argument, _this.argument);
    },
    toString$0(_) {
      var _this = this,
        leading = _this.from != null ? "(" + A.S(_this.argument) + ")" : "",
        t1 = _this.name,
        trailing = t1 != null ? t1 + ":" : "";
      return trailing + (A.getRuntimeType(_this).toString$0(0) + "#" + B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(_this.get$hashCode(_this) & 1048575, 16), 5, "0")) + leading;
    },
    $isOverride: 1,
    get$from() {
      return this.from;
    }
  };
  A._ExternalProviderSubscription.prototype = {
    close$0(_) {
      var t1;
      this._closed = true;
      t1 = this._listenedElement;
      B.JSArray_methods.remove$1(t1._externalDependents, this);
      t1._onRemoveListener$0();
    },
    read$0() {
      if (this._closed)
        throw A.wrapException(A.StateError$("called ProviderSubscription.read on a subscription that was closed"));
      var t1 = this._listenedElement;
      t1.flush$0();
      return t1.get$requireState();
    },
    $isProviderSubscription: 1
  };
  A._ProviderListener.prototype = {
    close$0(_) {
      var t1, _this = this;
      B.JSArray_methods.remove$1(_this.dependentElement._listenedProviderSubscriptions, _this);
      t1 = _this.listenedElement;
      B.JSArray_methods.remove$1(t1._subscribers, _this);
      t1._onRemoveListener$0();
    },
    read$0() {
      var t1 = this.listenedElement;
      t1.flush$0();
      return t1.get$requireState();
    },
    $isProviderSubscription: 1
  };
  A.OverrideWithValueMixin.prototype = {};
  A.ProviderElementProxy.prototype = {
    read$1(node) {
      var result,
        element = node.readProviderElement$1$1(this._origin, this.$ti._precomputed1);
      element.flush$0();
      result = this._lense.call$1(element)._result;
      if (result == null)
        A.throwExpression(A.StateError$("Trying to read an uninitialized value."));
      return result.state;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return this.$ti._is(other) && other._origin.$eq(0, this._origin);
    },
    get$hashCode(_) {
      var t1 = this._origin;
      return t1.get$hashCode(t1);
    },
    $isAlwaysAliveRefreshable: 1
  };
  A._ProviderScheduler.prototype = {
    _scheduleTask$0() {
      if (this._pendingTaskCompleter != null)
        return;
      this._pendingTaskCompleter = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
      var t1 = $.vsyncOverride;
      if (t1 == null)
        t1 = A.framework1___defaultVsync$closure();
      t1.call$1(this.get$_framework1$_task());
    },
    _framework1$_task$0() {
      var _this = this,
        pendingTaskCompleter = _this._pendingTaskCompleter;
      if (pendingTaskCompleter == null)
        return;
      pendingTaskCompleter.complete$0(0);
      _this._performRefresh$0();
      _this._performDispose$0();
      B.JSArray_methods.clear$0(_this._stateToRefresh);
      B.JSArray_methods.clear$0(_this._stateToDispose);
      _this._pendingTaskCompleter = null;
    },
    _performRefresh$0() {
      var t1, i, element;
      for (t1 = this._stateToRefresh, i = 0; i < t1.length; ++i) {
        element = t1[i];
        if (element._externalDependents.length !== 0 || element._subscribers.length !== 0 || element._providerDependents.length !== 0) {
          element._maybeRebuildDependencies$0();
          if (element._mustRecomputeState) {
            element._mustRecomputeState = false;
            element._performBuild$0();
          }
        }
      }
    },
    _performDispose$0() {
      var t1, i, element, links, t2;
      for (t1 = this._stateToDispose, i = 0; i < t1.length; ++i) {
        element = t1[i];
        links = element.get$_keepAliveLinks();
        if (!element.get$maintainState()) {
          t2 = links.get$isNotEmpty(links);
          t2 = t2 || element.get$hasListeners() || element.get$_container().get$_disposed();
        } else
          t2 = true;
        if (t2)
          continue;
        element.get$_container()._disposeProvider$1(element.get$_origin());
      }
    }
  };
  A._FamilyBase_Family__FamilyMixin.prototype = {};
  A._ProviderBase_ProviderOrFamily_ProviderListenable.prototype = {};
  A._ProviderElementProxy_Object_ProviderListenable.prototype = {};
  A._ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable.prototype = {};
  A._FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin_dispose_closure.prototype = {
    call$1(_) {
      this.$this.$ti._precomputed1._as(_);
    },
    $signature() {
      return this.$this.$ti._eval$1("Null(1)");
    }
  };
  A._FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin_dispose_closure0.prototype = {
    call$1(_) {
      type$.Object._as(_);
    },
    $signature: 114
  };
  A._FutureProviderBase.prototype = {
    get$dependencies() {
      return this.dependencies;
    }
  };
  A.FutureProvider.prototype = {
    createElement$0(_) {
      var _null = null,
        t1 = this.$ti,
        t2 = type$.JSArray__ProviderListener_dynamic;
      return new A.FutureProviderElement(new A.ProxyElementValueNotifier(A.List_List$filled(0, _null, false, t1._eval$1("_Listener<Future<1>>?")), t1._eval$1("ProxyElementValueNotifier<Future<1>>")), _null, _null, _null, _null, this, A._setArrayType([], t1._eval$1("JSArray<_ExternalProviderSubscription<AsyncValue<1>>>")), A._setArrayType([], t2), A._setArrayType([], type$.JSArray_ProviderElementBase_dynamic), A._setArrayType([], t2), A.HashMap_HashMap(_null, _null, _null, type$.ProviderElementBase_dynamic, type$.Object), t1._eval$1("FutureProviderElement<1>"));
    },
    $isAlwaysAliveRefreshable: 1
  };
  A.FutureProviderElement.prototype = {
    create$1$didChangeDependency(didChangeDependency) {
      var _this = this;
      _this.handleFuture$2$didChangeDependency(new A.FutureProviderElement_create_closure(_this, _this.$ti._eval$1("_FutureProviderBase<1>")._as(_this._provider)), didChangeDependency);
    },
    $isFutureProviderRef: 1
  };
  A.FutureProviderElement_create_closure.prototype = {
    call$0() {
      var t1 = this.provider;
      return t1._future_provider$_createFn.call$1(t1.$ti._eval$1("FutureProviderElement<1>")._as(this.$this));
    },
    $signature() {
      return this.$this.$ti._eval$1("1/()");
    }
  };
  A.FutureProviderFamily.prototype = {};
  A._FutureProvider__FutureProviderBase_AlwaysAliveProviderBase.prototype = {};
  A._FutureProvider__FutureProviderBase_AlwaysAliveProviderBase_AlwaysAliveAsyncSelector.prototype = {};
  A._FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin.prototype = {
    runOnDispose$0() {
      var _this = this,
        t1 = _this.FutureHandlerProviderElementMixin__lastFutureSub;
      if (t1 != null)
        t1.call$0();
      _this.set$_lastFutureSub(null);
      _this.set$_lastFuture(null);
      t1 = _this.FutureHandlerProviderElementMixin__cancelSubscription;
      if (t1 != null)
        t1.call$0();
      _this.set$_cancelSubscription(null);
      _this.super$ProviderElementBase$runOnDispose();
    },
    dispose$0() {
      var t1, cancelSubscription, _this = this,
        completer = _this.FutureHandlerProviderElementMixin__futureCompleter;
      if (completer != null) {
        t1 = completer.future;
        A.FutureExtensions_ignore(t1, _this.$ti._precomputed1);
        if (_this.FutureHandlerProviderElementMixin__lastFuture != null) {
          cancelSubscription = _this.FutureHandlerProviderElementMixin__cancelSubscription;
          if (cancelSubscription != null)
            t1.then$1$2$onError(new A._FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin_dispose_closure(_this), new A._FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin_dispose_closure0(), type$.Null).whenComplete$1(cancelSubscription);
          _this.set$_lastFuture(null);
          _this.set$_lastFutureSub(null);
          _this.set$_cancelSubscription(null);
        } else {
          t1 = _this.__ProviderElementBase__origin_A;
          t1 === $ && A.throwLateFieldNI("_origin");
          completer.completeError$2(new A.StateError("The provider " + t1.toString$0(0) + " was disposed during loading state, yet no value could be emitted."), A.StackTrace_current());
        }
      }
      _this.super$ProviderElementBase$dispose();
    },
    visitChildren$2$elementVisitor$notifierVisitor(elementVisitor, notifierVisitor) {
      type$.void_Function_ProviderElementBase_dynamic._as(elementVisitor);
      type$.void_Function_ProxyElementValueNotifier_dynamic._as(notifierVisitor);
      this.super$ProviderElementBase$visitChildren(elementVisitor, notifierVisitor);
      notifierVisitor.call$1(this.FutureHandlerProviderElementMixin_futureNotifier);
    }
  };
  A.ProxyElementValueNotifier.prototype = {
    set$result(_, value) {
      var previous, _this = this;
      _this.$ti._eval$1("Result<1>?")._as(value);
      previous = _this._result;
      _this.set$_result(value);
      if (value != null)
        value.when$1$2$data$error(new A.ProxyElementValueNotifier_result_closure(_this, previous), _this.get$_notifyError(), type$.void);
    },
    set$_result(_result) {
      this._result = this.$ti._eval$1("Result<1>?")._as(_result);
    }
  };
  A.ProxyElementValueNotifier_result_closure.prototype = {
    call$1(newValue) {
      var t2,
        t1 = this.$this;
      t1.$ti._precomputed1._as(newValue);
      t2 = this.previous;
      return t1._notifyValue$2(t2 == null ? null : t2.state, newValue);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1)");
    }
  };
  A._ValueListenable.prototype = {
    _listenable$_notifyListeners$1(notify) {
      var i, listener, exception, stack, t2, t3, exception0, newLength, newListeners, newIndex, newIndex0, swapIndex, _this = this,
        t1 = _this.$ti;
      t1._eval$1("~(_Listener<1>)")._as(notify);
      t2 = _this._count;
      if (t2 === 0)
        return;
      ++_this._notificationCallStackDepth;
      i = 0;
      while (true) {
        t3 = i;
        if (typeof t3 !== "number")
          return t3.$lt();
        if (!(t3 < t2))
          break;
        try {
          listener = B.JSArray_methods.$index(_this._listenable$_listeners, i);
          if (listener != null)
            notify.call$1(listener);
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          t1 = A.StateError$("An exception was thrown inside a _ChangeNotifier listener:\n" + A.S(exception) + "\n" + A.S(stack));
          throw A.wrapException(t1);
        }
        t3 = i;
        if (typeof t3 !== "number")
          return t3.$add();
        i = t3 + 1;
      }
      if (--_this._notificationCallStackDepth === 0 && _this._reentrantlyRemovedListeners > 0) {
        newLength = _this._count - _this._reentrantlyRemovedListeners;
        if (newLength * 2 <= _this._listenable$_listeners.length) {
          newListeners = A.List_List$filled(newLength, null, false, t1._eval$1("_Listener<1>?"));
          for (newIndex = 0, i = 0; i < _this._count; ++i) {
            t1 = _this._listenable$_listeners;
            if (!(i < t1.length))
              return A.ioore(t1, i);
            listener = t1[i];
            if (listener != null) {
              newIndex0 = newIndex + 1;
              B.JSArray_methods.$indexSet(newListeners, newIndex, listener);
              newIndex = newIndex0;
            }
          }
          _this.set$_listenable$_listeners(newListeners);
        } else
          for (i = 0; i < newLength; ++i) {
            t1 = _this._listenable$_listeners;
            t2 = t1.length;
            if (!(i < t2))
              return A.ioore(t1, i);
            if (t1[i] == null) {
              swapIndex = i + 1;
              while (true) {
                if (!(swapIndex < t2))
                  return A.ioore(t1, swapIndex);
                t3 = t1[swapIndex];
                if (!(t3 == null))
                  break;
                ++swapIndex;
              }
              t1[i] = t3;
              B.JSArray_methods.$indexSet(t1, swapIndex, null);
            }
          }
        _this._reentrantlyRemovedListeners = 0;
        _this._count = newLength;
      }
    },
    _notifyValue$2(prev, next) {
      var t1 = this.$ti;
      this._listenable$_notifyListeners$1(new A._ValueListenable__notifyValue_closure(this, t1._eval$1("1?")._as(prev), t1._precomputed1._as(next)));
    },
    _notifyError$2(err, stack) {
      this._listenable$_notifyListeners$1(new A._ValueListenable__notifyError_closure(this, err, stack));
    },
    notifyDependencyMayHaveChanged$0() {
      this._listenable$_notifyListeners$1(new A._ValueListenable_notifyDependencyMayHaveChanged_closure(this));
    },
    set$_listenable$_listeners(_listeners) {
      this._listenable$_listeners = this.$ti._eval$1("List<_Listener<1>?>")._as(_listeners);
    }
  };
  A._ValueListenable__notifyValue_closure.prototype = {
    call$1(listener) {
      var t1 = this.$this.$ti;
      return t1._eval$1("~(1?,1)")._as(t1._eval$1("_Listener<1>")._as(listener).onValue).call$2(this.prev, this.next);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_Listener<1>)");
    }
  };
  A._ValueListenable__notifyError_closure.prototype = {
    call$1(listener) {
      var t1 = this.$this.$ti._eval$1("_Listener<1>")._as(listener).onError.call$2(this.err, this.stack);
      return t1;
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_Listener<1>)");
    }
  };
  A._ValueListenable_notifyDependencyMayHaveChanged_closure.prototype = {
    call$1(listener) {
      var t1 = this.$this.$ti._eval$1("_Listener<1>")._as(listener).onDependencyMayHaveChanged.call$0();
      return t1;
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_Listener<1>)");
    }
  };
  A.InternalProvider.prototype = {
    get$dependencies() {
      return this.dependencies;
    }
  };
  A.Provider.prototype = {
    createElement$0(_) {
      var t1 = this.$ti,
        t2 = type$.JSArray__ProviderListener_dynamic;
      return new A.ProviderElement(this, A._setArrayType([], t1._eval$1("JSArray<_ExternalProviderSubscription<1>>")), A._setArrayType([], t2), A._setArrayType([], type$.JSArray_ProviderElementBase_dynamic), A._setArrayType([], t2), A.HashMap_HashMap(null, null, null, type$.ProviderElementBase_dynamic, type$.Object), t1._eval$1("ProviderElement<1>"));
    },
    $isAlwaysAliveRefreshable: 1
  };
  A.ProviderElement.prototype = {
    create$1$didChangeDependency(didChangeDependency) {
      var _this = this,
        provider = _this.$ti._eval$1("InternalProvider<1>")._as(_this._provider);
      _this.setState$1(provider._provider$_createFn.call$1(provider.$ti._eval$1("ProviderElement<1>")._as(_this)));
    },
    updateShouldNotify$2(previous, next) {
      var t1 = this.$ti._precomputed1;
      return !J.$eq$(t1._as(previous), t1._as(next));
    },
    $isProviderRef: 1
  };
  A.ProviderFamily.prototype = {};
  A._InternalProvider_ProviderBase_OverrideWithValueMixin.prototype = {};
  A._Provider_InternalProvider_AlwaysAliveProviderBase.prototype = {};
  A.ResultData.prototype = {
    get$hasState() {
      return true;
    },
    get$stateOrNull() {
      return this.state;
    },
    get$requireState() {
      return this.state;
    },
    map$1$2$data$error(_, data, error, $R) {
      var t1 = this.$ti._bind$1($R);
      t1._eval$1("1(ResultData<2>)")._as(data);
      t1._eval$1("1(ResultError<2>)")._as(error);
      return data.call$1(this);
    },
    when$1$2$data$error(data, error, $R) {
      this.$ti._bind$1($R)._eval$1("1(2)")._as(data);
      $R._eval$1("0(Object,StackTrace)")._as(error);
      return data.call$1(this.state);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return this.$ti._is(other) && A.getRuntimeType(other) === A.getRuntimeType(this) && J.$eq$(other.state, this.state);
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), this.state, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $isResult: 1
  };
  A.ResultError.prototype = {
    get$hasState() {
      return false;
    },
    get$stateOrNull() {
      return null;
    },
    get$requireState() {
      return A.Error_throwWithStackTrace(this.error, this.stackTrace);
    },
    map$1$2$data$error(_, data, error, $R) {
      var t1 = this.$ti._bind$1($R);
      t1._eval$1("1(ResultData<2>)")._as(data);
      return t1._eval$1("1(ResultError<2>)")._as(error).call$1(this);
    },
    when$1$2$data$error(data, error, $R) {
      this.$ti._bind$1($R)._eval$1("1(2)")._as(data);
      return $R._eval$1("0(Object,StackTrace)")._as(error).call$2(this.error, this.stackTrace);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return _this.$ti._is(other) && A.getRuntimeType(other) === A.getRuntimeType(_this) && other.stackTrace === _this.stackTrace && J.$eq$(other.error, _this.error);
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeType(this), this.error, this.stackTrace, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $isResult: 1
  };
  A.throwErrorWithCombinedStackTrace_closure.prototype = {
    call$1(frame) {
      return frame.get$$package() === "riverpod";
    },
    $signature: 115
  };
  A.StateController.prototype = {};
  A._notifier_closure.prototype = {
    call$1(element) {
      var t1 = this.T;
      return t1._eval$1("StateProviderElement<0>")._as(t1._eval$1("ProviderElementBase<0>")._as(element))._controllerNotifier;
    },
    $signature() {
      return this.T._eval$1("ProxyElementValueNotifier<StateController<0>>(ProviderElementBase<0>)");
    }
  };
  A._StateProviderBase.prototype = {
    get$dependencies() {
      return this.dependencies;
    }
  };
  A.StateProvider.prototype = {
    createElement$0(_) {
      var _null = null,
        t1 = this.$ti,
        t2 = t1._eval$1("_Listener<StateController<1>>?"),
        t3 = t1._eval$1("ProxyElementValueNotifier<StateController<1>>"),
        t4 = type$.JSArray__ProviderListener_dynamic;
      return new A.StateProviderElement(new A.ProxyElementValueNotifier(A.List_List$filled(0, _null, false, t2), t3), new A.ProxyElementValueNotifier(A.List_List$filled(0, _null, false, t2), t3), this, A._setArrayType([], t1._eval$1("JSArray<_ExternalProviderSubscription<1>>")), A._setArrayType([], t4), A._setArrayType([], type$.JSArray_ProviderElementBase_dynamic), A._setArrayType([], t4), A.HashMap_HashMap(_null, _null, _null, type$.ProviderElementBase_dynamic, type$.Object), t1._eval$1("StateProviderElement<1>"));
    },
    get$notifier() {
      var result, _this = this,
        value = _this.__StateProvider_notifier_FI;
      if (value === $) {
        result = A._notifier(_this, _this.$ti._precomputed1);
        value !== $ && A.throwLateFieldADI("notifier");
        _this.set$__StateProvider_notifier_FI(result);
        value = result;
      }
      return value;
    },
    set$__StateProvider_notifier_FI(__StateProvider_notifier_FI) {
      this.__StateProvider_notifier_FI = this.$ti._eval$1("AlwaysAliveRefreshable<StateController<1>>")._as(__StateProvider_notifier_FI);
    },
    $isAlwaysAliveRefreshable: 1
  };
  A.StateProviderElement.prototype = {
    create$1$didChangeDependency(didChangeDependency) {
      var _this = this,
        t1 = _this.$ti,
        provider = t1._eval$1("_StateProviderBase<1>")._as(_this._provider),
        controller = new A.StateController(new A.LinkedList(t1._eval$1("LinkedList<_ListenerEntry<1>>")), provider._createFn.call$1(provider.$ti._eval$1("StateProviderElement<1>")._as(_this)), t1._eval$1("StateController<1>"));
      _this._controllerNotifier.set$result(0, new A.ResultData(controller, t1._eval$1("ResultData<StateController<1>>")));
      _this.set$_removeListener(controller.addListener$2$fireImmediately(new A.StateProviderElement_create_closure(_this), true));
    },
    updateShouldNotify$2(previous, next) {
      var t1 = this.$ti._precomputed1;
      t1._as(previous);
      t1._as(next);
      return previous == null ? next != null : previous !== next;
    },
    runOnDispose$0() {
      var t1, t2, _this = this;
      _this.super$ProviderElementBase$runOnDispose();
      t1 = _this._removeListener;
      if (t1 != null)
        t1.call$0();
      _this.set$_removeListener(null);
      t1 = _this._controllerNotifier;
      t2 = t1._result;
      if (t2 != null) {
        t2 = t2.state;
        if (t2 != null) {
          t2._listeners.clear$0(0);
          t2._state_notifier$_mounted = false;
        }
      }
      t1.set$result(0, null);
    },
    visitChildren$2$elementVisitor$notifierVisitor(elementVisitor, notifierVisitor) {
      type$.void_Function_ProviderElementBase_dynamic._as(elementVisitor);
      type$.void_Function_ProxyElementValueNotifier_dynamic._as(notifierVisitor);
      this.super$ProviderElementBase$visitChildren(elementVisitor, notifierVisitor);
      notifierVisitor.call$1(this._stateNotifier);
      notifierVisitor.call$1(this._controllerNotifier);
    },
    set$_removeListener(_removeListener) {
      this._removeListener = type$.nullable_void_Function._as(_removeListener);
    },
    $isStateProviderRef: 1
  };
  A.StateProviderElement_create_closure.prototype = {
    call$1(state) {
      var t1 = this.$this;
      t1.$ti._precomputed1._as(state);
      t1._stateNotifier.set$result(0, t1._controllerNotifier._result);
      t1.setState$1(state);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1)");
    }
  };
  A._StateProvider__StateProviderBase_AlwaysAliveProviderBase.prototype = {};
  A.Chain.prototype = {
    foldFrames$1(predicate) {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Trace>"),
        foldedTraces = new A.MappedListIterable(t1, t2._eval$1("Trace(1)")._as(new A.Chain_foldFrames_closure(type$.bool_Function_Frame._as(predicate), false)), t3),
        nonEmptyTraces = foldedTraces.super$Iterable$where(0, t3._eval$1("bool(ListIterable.E)")._as(new A.Chain_foldFrames_closure0(false)));
      if (!nonEmptyTraces.get$iterator(nonEmptyTraces).moveNext$0() && !foldedTraces.get$isEmpty(foldedTraces))
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([foldedTraces.get$last(foldedTraces)], type$.JSArray_Trace), type$.Trace));
      return new A.Chain(A.List_List$unmodifiable(nonEmptyTraces, type$.Trace));
    },
    toTrace$0() {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1);
      return A.Trace$(new A.ExpandIterable(t1, t2._eval$1("Iterable<Frame>(1)")._as(new A.Chain_toTrace_closure()), t2._eval$1("ExpandIterable<1,Frame>")), null);
    },
    toString$0(_) {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Chain_toString_closure(new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Chain_toString_closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int))), t2._eval$1("MappedListIterable<1,String>")).join$1(0, string$.______);
    },
    $isStackTrace: 1,
    get$traces() {
      return this.traces;
    }
  };
  A.Chain_Chain$forTrace_closure.prototype = {
    call$0() {
      return A.Chain_Chain$parse(this.trace.toString$0(0));
    },
    $signature: 117
  };
  A.Chain_Chain$parse_closure.prototype = {
    call$1(line) {
      return A._asString(line).length !== 0;
    },
    $signature: 2
  };
  A.Chain_foldFrames_closure.prototype = {
    call$1(trace) {
      return type$.Trace._as(trace).foldFrames$2$terse(this.predicate, this.terse);
    },
    $signature: 118
  };
  A.Chain_foldFrames_closure0.prototype = {
    call$1(trace) {
      type$.Trace._as(trace);
      if (trace.get$frames().length > 1)
        return true;
      if (trace.get$frames().length === 0)
        return false;
      if (!this.terse)
        return false;
      return B.JSArray_methods.get$single(trace.get$frames()).get$line() != null;
    },
    $signature: 119
  };
  A.Chain_toTrace_closure.prototype = {
    call$1(trace) {
      return type$.Trace._as(trace).get$frames();
    },
    $signature: 120
  };
  A.Chain_toString_closure0.prototype = {
    call$1(trace) {
      var t1 = type$.Trace._as(trace).get$frames(),
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Chain_toString__closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int);
    },
    $signature: 121
  };
  A.Chain_toString__closure0.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return frame.get$location(frame).length;
    },
    $signature: 32
  };
  A.Chain_toString_closure.prototype = {
    call$1(trace) {
      var t1 = type$.Trace._as(trace).get$frames(),
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Chain_toString__closure(this.longest)), t2._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $signature: 123
  };
  A.Chain_toString__closure.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return B.JSString_methods.padRight$1(frame.get$location(frame), this.longest) + "  " + A.S(frame.get$member()) + "\n";
    },
    $signature: 33
  };
  A.Frame.prototype = {
    get$library() {
      var t1 = this.uri;
      if (t1.get$scheme() === "data")
        return "data:...";
      return $.$get$context().prettyUri$1(t1);
    },
    get$$package() {
      var t1 = this.uri;
      if (t1.get$scheme() !== "package")
        return null;
      return B.JSArray_methods.get$first(t1.get$path(t1).split("/"));
    },
    get$location(_) {
      var t2, _this = this,
        t1 = _this.line;
      if (t1 == null)
        return _this.get$library();
      t2 = _this.column;
      if (t2 == null)
        return _this.get$library() + " " + A.S(t1);
      return _this.get$library() + " " + A.S(t1) + ":" + A.S(t2);
    },
    toString$0(_) {
      return this.get$location(this) + " in " + A.S(this.member);
    },
    get$uri() {
      return this.uri;
    },
    get$line() {
      return this.line;
    },
    get$column() {
      return this.column;
    },
    get$member() {
      return this.member;
    }
  };
  A.Frame_Frame$parseVM_closure.prototype = {
    call$0() {
      var match, t2, t3, member, uri, lineAndColumn, line, _null = null,
        t1 = this.frame;
      if (t1 === "...")
        return new A.Frame(A._Uri__Uri(_null, _null, _null, _null), _null, _null, "...");
      match = $.$get$_vmFrame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      t3 = type$.Pattern._as($.$get$_asyncBody());
      t2 = A.stringReplaceAllUnchecked(t2, t3, "<async>");
      member = A.stringReplaceAllUnchecked(t2, "<anonymous closure>", "<fn>");
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t3 = t2;
      t3.toString;
      if (B.JSString_methods.startsWith$1(t3, "<data:"))
        uri = A.Uri_Uri$dataFromString("");
      else {
        t2 = t2;
        t2.toString;
        uri = A.Uri_parse(t2);
      }
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      lineAndColumn = t1[3].split(":");
      t1 = lineAndColumn.length;
      line = t1 > 1 ? A.int_parse(lineAndColumn[1], _null) : _null;
      return new A.Frame(uri, line, t1 > 2 ? A.int_parse(lineAndColumn[2], _null) : _null, member);
    },
    $signature: 6
  };
  A.Frame_Frame$parseV8_closure.prototype = {
    call$0() {
      var t2, t3, t4, _s4_ = "<fn>",
        t1 = this.frame,
        match = $.$get$_v8Frame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(null, "unparsed", null, null), t1);
      t1 = new A.Frame_Frame$parseV8_closure_parseLocation(t1);
      t2 = match._match;
      t3 = t2.length;
      if (2 >= t3)
        return A.ioore(t2, 2);
      t4 = t2[2];
      if (t4 != null) {
        t3 = t4;
        t3.toString;
        t2 = t2[1];
        t2.toString;
        t2 = A.stringReplaceAllUnchecked(t2, "<anonymous>", _s4_);
        t2 = A.stringReplaceAllUnchecked(t2, "Anonymous function", _s4_);
        return t1.call$2(t3, A.stringReplaceAllUnchecked(t2, "(anonymous function)", _s4_));
      } else {
        if (3 >= t3)
          return A.ioore(t2, 3);
        t2 = t2[3];
        t2.toString;
        return t1.call$2(t2, _s4_);
      }
    },
    $signature: 6
  };
  A.Frame_Frame$parseV8_closure_parseLocation.prototype = {
    call$2($location, member) {
      var t2, urlMatch, uri, line, columnMatch, _null = null,
        t1 = $.$get$_v8EvalLocation(),
        evalMatch = t1.firstMatch$1($location);
      for (; evalMatch != null; $location = t2) {
        t2 = evalMatch._match;
        if (1 >= t2.length)
          return A.ioore(t2, 1);
        t2 = t2[1];
        t2.toString;
        evalMatch = t1.firstMatch$1(t2);
      }
      if ($location === "native")
        return new A.Frame(A.Uri_parse("native"), _null, _null, member);
      urlMatch = $.$get$_v8UrlLocation().firstMatch$1($location);
      if (urlMatch == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), this.frame);
      t1 = urlMatch._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      uri = A.Frame__uriOrPathToUri(t2);
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t2.toString;
      line = A.int_parse(t2, _null);
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      columnMatch = t1[3];
      return new A.Frame(uri, line, columnMatch != null ? A.int_parse(columnMatch, _null) : _null, member);
    },
    $signature: 126
  };
  A.Frame_Frame$_parseFirefoxEval_closure.prototype = {
    call$0() {
      var t2, member, uri, line, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxEvalLocation().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      member = A.stringReplaceAllUnchecked(t2, "/<", "");
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t2.toString;
      uri = A.Frame__uriOrPathToUri(t2);
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      t1 = t1[3];
      t1.toString;
      line = A.int_parse(t1, _null);
      return new A.Frame(uri, line, _null, member.length === 0 || member === "anonymous" ? "<fn>" : member);
    },
    $signature: 6
  };
  A.Frame_Frame$parseFirefox_closure.prototype = {
    call$0() {
      var t2, t3, t4, uri, member, line, column, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxSafariFrame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t2 = match._match;
      if (3 >= t2.length)
        return A.ioore(t2, 3);
      t3 = t2[3];
      t4 = t3;
      t4.toString;
      if (B.JSString_methods.contains$1(t4, " line "))
        return A.Frame_Frame$_parseFirefoxEval(t1);
      t1 = t3;
      t1.toString;
      uri = A.Frame__uriOrPathToUri(t1);
      t1 = t2.length;
      if (1 >= t1)
        return A.ioore(t2, 1);
      member = t2[1];
      if (member != null) {
        if (2 >= t1)
          return A.ioore(t2, 2);
        t1 = t2[2];
        t1.toString;
        t1 = B.JSString_methods.allMatches$1("/", t1);
        member += B.JSArray_methods.join$0(A.List_List$filled(t1.get$length(t1), ".<fn>", false, type$.String));
        if (member === "")
          member = "<fn>";
        member = B.JSString_methods.replaceFirst$2(member, $.$get$_initialDot(), "");
      } else
        member = "<fn>";
      if (4 >= t2.length)
        return A.ioore(t2, 4);
      t1 = t2[4];
      if (t1 === "")
        line = _null;
      else {
        t1 = t1;
        t1.toString;
        line = A.int_parse(t1, _null);
      }
      if (5 >= t2.length)
        return A.ioore(t2, 5);
      t1 = t2[5];
      if (t1 == null || t1 === "")
        column = _null;
      else {
        t1 = t1;
        t1.toString;
        column = A.int_parse(t1, _null);
      }
      return new A.Frame(uri, line, column, member);
    },
    $signature: 6
  };
  A.Frame_Frame$parseFriendly_closure.prototype = {
    call$0() {
      var t2, uri, line, column, _null = null,
        t1 = this.frame,
        match = $.$get$_friendlyFrame().firstMatch$1(t1);
      if (match == null)
        throw A.wrapException(A.FormatException$("Couldn't parse package:stack_trace stack trace line '" + t1 + "'.", _null, _null));
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      if (t2 === "data:...")
        uri = A.Uri_Uri$dataFromString("");
      else {
        t2 = t2;
        t2.toString;
        uri = A.Uri_parse(t2);
      }
      if (uri.get$scheme() === "") {
        t2 = $.$get$context();
        uri = t2.toUri$1(t2.absolute$15(0, t2.style.pathFromUri$1(A._parseUri(uri)), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null));
      }
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      if (t2 == null)
        line = _null;
      else {
        t2 = t2;
        t2.toString;
        line = A.int_parse(t2, _null);
      }
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      t2 = t1[3];
      if (t2 == null)
        column = _null;
      else {
        t2 = t2;
        t2.toString;
        column = A.int_parse(t2, _null);
      }
      if (4 >= t1.length)
        return A.ioore(t1, 4);
      return new A.Frame(uri, line, column, t1[4]);
    },
    $signature: 6
  };
  A.LazyChain.prototype = {
    get$_chain() {
      var result, _this = this,
        value = _this.__LazyChain__chain_FI;
      if (value === $) {
        result = _this._thunk.call$0();
        _this.__LazyChain__chain_FI !== $ && A.throwLateFieldADI("_chain");
        _this.__LazyChain__chain_FI = result;
        value = result;
      }
      return value;
    },
    get$traces() {
      return this.get$_chain().get$traces();
    },
    toTrace$0() {
      return new A.LazyTrace(this.get$_chain().get$toTrace());
    },
    toString$0(_) {
      return this.get$_chain().toString$0(0);
    },
    $isStackTrace: 1,
    $isChain: 1
  };
  A.LazyTrace.prototype = {
    get$_lazy_trace$_trace() {
      var result, _this = this,
        value = _this.__LazyTrace__trace_FI;
      if (value === $) {
        result = _this._lazy_trace$_thunk.call$0();
        _this.__LazyTrace__trace_FI !== $ && A.throwLateFieldADI("_trace");
        _this.__LazyTrace__trace_FI = result;
        value = result;
      }
      return value;
    },
    get$frames() {
      return this.get$_lazy_trace$_trace().get$frames();
    },
    get$original() {
      return this.get$_lazy_trace$_trace().get$original();
    },
    foldFrames$2$terse(predicate, terse) {
      return new A.LazyTrace(new A.LazyTrace_foldFrames_closure(this, type$.bool_Function_Frame._as(predicate), false));
    },
    toString$0(_) {
      return this.get$_lazy_trace$_trace().toString$0(0);
    },
    $isStackTrace: 1,
    $isTrace: 1
  };
  A.LazyTrace_foldFrames_closure.prototype = {
    call$0() {
      return this.$this.get$_lazy_trace$_trace().foldFrames$2$terse(this.predicate, this.terse);
    },
    $signature: 7
  };
  A.Trace.prototype = {
    foldFrames$2$terse(predicate, terse) {
      var newFrames, t1, t2, t3, _box_0 = {};
      _box_0.predicate = predicate;
      _box_0.predicate = type$.bool_Function_Frame._as(predicate);
      newFrames = A._setArrayType([], type$.JSArray_Frame);
      for (t1 = this.frames, t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"), t1 = new A.ReversedListIterable(t1, t2), t1 = new A.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 instanceof A.UnparsedFrame || !A.boolConversionCheck(_box_0.predicate.call$1(t3)))
          B.JSArray_methods.add$1(newFrames, t3);
        else if (newFrames.length === 0 || !A.boolConversionCheck(_box_0.predicate.call$1(B.JSArray_methods.get$last(newFrames))))
          B.JSArray_methods.add$1(newFrames, new A.Frame(t3.get$uri(), t3.get$line(), t3.get$column(), t3.get$member()));
      }
      return A.Trace$(new A.ReversedListIterable(newFrames, type$.ReversedListIterable_Frame), this.original._stackTrace);
    },
    toString$0(_) {
      var t1 = this.frames,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Trace_toString_closure(new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Trace_toString_closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int))), t2._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $isStackTrace: 1,
    get$frames() {
      return this.frames;
    },
    get$original() {
      return this.original;
    }
  };
  A.Trace_Trace$current_closure.prototype = {
    call$0() {
      var t1 = this.trace,
        t2 = t1.get$frames();
      return A.Trace$(A.SubListIterable$(t2, this.level + 2, null, A._arrayInstanceType(t2)._precomputed1), t1.get$original()._stackTrace);
    },
    $signature: 7
  };
  A.Trace_Trace$from_closure.prototype = {
    call$0() {
      return A.Trace_Trace$parse(this.trace.toString$0(0));
    },
    $signature: 7
  };
  A.Trace__parseVM_closure.prototype = {
    call$1(line) {
      return A._asString(line).length !== 0;
    },
    $signature: 2
  };
  A.Trace$parseV8_closure.prototype = {
    call$1(line) {
      return !B.JSString_methods.startsWith$1(A._asString(line), $.$get$_v8TraceLine());
    },
    $signature: 2
  };
  A.Trace$parseJSCore_closure.prototype = {
    call$1(line) {
      return A._asString(line) !== "\tat ";
    },
    $signature: 2
  };
  A.Trace$parseFirefox_closure.prototype = {
    call$1(line) {
      A._asString(line);
      return line.length !== 0 && line !== "[native code]";
    },
    $signature: 2
  };
  A.Trace$parseFriendly_closure.prototype = {
    call$1(line) {
      return !B.JSString_methods.startsWith$1(A._asString(line), "=====");
    },
    $signature: 2
  };
  A.Trace_toString_closure0.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return frame.get$location(frame).length;
    },
    $signature: 32
  };
  A.Trace_toString_closure.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      if (frame instanceof A.UnparsedFrame)
        return frame.toString$0(0) + "\n";
      return B.JSString_methods.padRight$1(frame.get$location(frame), this.longest) + "  " + A.S(frame.get$member()) + "\n";
    },
    $signature: 33
  };
  A.UnparsedFrame.prototype = {
    toString$0(_) {
      return this.member;
    },
    $isFrame: 1,
    get$uri() {
      return this.uri;
    },
    get$line() {
      return null;
    },
    get$column() {
      return null;
    },
    get$$package() {
      return null;
    },
    get$location() {
      return "unparsed";
    },
    get$member() {
      return this.member;
    }
  };
  A.StateNotifierListenerError.prototype = {
    toString$0(_) {
      var t1, t2, i, error, stackTrace,
        buffer = new A.StringBuffer("");
      for (t1 = this.errors, t2 = this.stackTraces, i = 0; i < t1.length; ++i) {
        error = t1[i];
        if (!(i < t2.length))
          return A.ioore(t2, i);
        stackTrace = t2[i];
        buffer._contents += A.S(error) + "\n";
        buffer._contents += A.S(stackTrace) + "\n";
      }
      return "At least listener of the StateNotifier " + this.stateNotifier.toString$0(0) + " threw an exception\nwhen the notifier tried to update its state.\n\nThe exceptions thrown are:\n\n" + buffer.toString$0(0) + "\n";
    }
  };
  A.StateNotifier.prototype = {
    get$state(_) {
      return this._state_notifier$_state;
    },
    set$state(_, value) {
      var errors, stackTraces, listenerEntry, error, stackTrace, previousState, t3, t4, t5, listenerEntry0, exception, _this = this,
        t1 = _this.$ti,
        t2 = t1._precomputed1;
      t2._as(value);
      previousState = _this._state_notifier$_state;
      _this.set$_state_notifier$_state(value);
      t2._as(previousState);
      if (previousState == null ? value == null : previousState === value)
        return;
      errors = A._setArrayType([], type$.JSArray_Object);
      stackTraces = A._setArrayType([], type$.JSArray_nullable_StackTrace);
      for (t2 = _this._listeners, t2 = A._LinkedListIterator$(t2, t2.$ti._precomputed1), t3 = type$.Object, t4 = type$.StackTrace, t1 = t1._eval$1("~(1)"), t5 = t2.$ti._precomputed1; t2.moveNext$0();) {
        listenerEntry0 = t2._collection$_current;
        listenerEntry = listenerEntry0 == null ? t5._as(listenerEntry0) : listenerEntry0;
        try {
          t1._as(listenerEntry.listener).call$1(value);
        } catch (exception) {
          error = A.unwrapException(exception);
          stackTrace = A.getTraceFromException(exception);
          J.add$1$ax(errors, error);
          J.add$1$ax(stackTraces, stackTrace);
          A._rootHandleError(t3._as(error), t4._as(stackTrace));
        }
      }
      if (J.get$length$asx(errors) !== 0)
        throw A.wrapException(new A.StateNotifierListenerError(errors, stackTraces, _this));
    },
    addListener$2$fireImmediately(listener, fireImmediately) {
      var listenerEntry, err, stack, t2, exception, _this = this,
        t1 = _this.$ti;
      t1._eval$1("~(1)")._as(listener);
      listenerEntry = new A._ListenerEntry(listener, t1._eval$1("_ListenerEntry<1>"));
      t1 = _this._listeners;
      t2 = t1.$ti._precomputed1._as(listenerEntry);
      t1._insertBefore$3$updateFirst(t1._collection$_first, t2, false);
      try {
        listener.call$1(A.StateNotifier.prototype.get$state.call(_this, _this));
      } catch (exception) {
        err = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        t1 = listenerEntry;
        t2 = t1._list;
        t2.toString;
        t2._unlink$1(A.instanceType(t1)._eval$1("LinkedListEntry.E")._as(t1));
        throw exception;
      } finally {
      }
      return new A.StateNotifier_addListener_closure(listenerEntry);
    },
    set$_state_notifier$_state(_state) {
      this._state_notifier$_state = this.$ti._precomputed1._as(_state);
    }
  };
  A.StateNotifier_addListener_closure.prototype = {
    call$0() {
      var t1 = this.listenerEntry,
        t2 = t1._list;
      if (t2 != null)
        t2._unlink$1(t1.$ti._eval$1("LinkedListEntry.E")._as(t1));
    },
    $signature: 0
  };
  A._ListenerEntry.prototype = {};
  A.main_closure.prototype = {
    call$1(_) {
      type$.BuildContext._as(_);
      return new A.App(null);
    },
    $signature: 127
  };
  (function aliases() {
    var _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
    _ = A.JsLinkedHashMap.prototype;
    _.super$JsLinkedHashMap$internalContainsKey = _.internalContainsKey$1;
    _.super$JsLinkedHashMap$internalGet = _.internalGet$1;
    _.super$JsLinkedHashMap$internalSet = _.internalSet$2;
    _.super$JsLinkedHashMap$internalRemove = _.internalRemove$1;
    _ = A._HashMap.prototype;
    _.super$_HashMap$_containsKey = _._containsKey$1;
    _.super$_HashMap$_get = _._get$1;
    _.super$_HashMap$_set = _._set$2;
    _.super$_HashMap$_remove = _._remove$1;
    _ = A.ListMixin.prototype;
    _.super$ListMixin$setRange = _.setRange$4;
    _ = A.Converter.prototype;
    _.super$Converter$fuse = _.fuse$1$1;
    _ = A.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _.super$Iterable$skipWhile = _.skipWhile$1;
    _ = A.BaseRequest.prototype;
    _.super$BaseRequest$finalize = _.finalize$0;
    _ = A._AppBinding_BindingBase_SchedulerBinding.prototype;
    _.super$_AppBinding_BindingBase_SchedulerBinding$initInstances = _.initInstances$0;
    _ = A._AppBinding_BindingBase_SchedulerBinding_ComponentsBinding.prototype;
    _.super$_AppBinding_BindingBase_SchedulerBinding_ComponentsBinding$initInstances = _.initInstances$0;
    _ = A._AppBinding_BindingBase_SchedulerBinding_ComponentsBinding_SyncBinding.prototype;
    _.super$_AppBinding_BindingBase_SchedulerBinding_ComponentsBinding_SyncBinding$initInstances = _.initInstances$0;
    _ = A.BindingBase.prototype;
    _.super$BindingBase$initInstances = _.initInstances$0;
    _ = A.NoChildElement.prototype;
    _.super$NoChildElement$_firstBuild = _._firstBuild$1;
    _.super$NoChildElement$performRebuild = _.performRebuild$0;
    _ = A.Element.prototype;
    _.super$Element$mount = _.mount$2;
    _.super$Element$_firstBuild = _._firstBuild$1;
    _.super$Element$update = _.update$1;
    _.super$Element$_didChangeAncestorSibling = _._didChangeAncestorSibling$0;
    _.super$Element$deactivate = _.deactivate$0;
    _.super$Element$unmount = _.unmount$0;
    _.super$Element$didChangeDependencies = _.didChangeDependencies$0;
    _ = A.InheritedElement.prototype;
    _.super$InheritedElement$getDependencies = _.getDependencies$1;
    _.super$InheritedElement$setDependencies = _.setDependencies$2;
    _.super$InheritedElement$didRebuildDependent = _.didRebuildDependent$1;
    _.super$InheritedElement$deactivateDependent = _.deactivateDependent$1;
    _.super$InheritedElement$build = _.build$0;
    _ = A.MultiChildElement.prototype;
    _.super$MultiChildElement$_firstBuild = _._firstBuild$1;
    _.super$MultiChildElement$performRebuild = _.performRebuild$0;
    _ = A.SingleChildElement.prototype;
    _.super$SingleChildElement$mount = _.mount$2;
    _.super$SingleChildElement$_firstBuild = _._firstBuild$1;
    _.super$SingleChildElement$performRebuild = _.performRebuild$0;
    _ = A.State.prototype;
    _.super$State$initState = _.initState$0;
    _.super$State$didUpdateComponent = _.didUpdateComponent$1;
    _.super$State$dispose = _.dispose$0;
    _.super$State$didChangeDependencies = _.didChangeDependencies$0;
    _ = A._DomElement_MultiChildElement_RenderElement.prototype;
    _.super$_DomElement_MultiChildElement_RenderElement$update = _.update$1;
    _ = A.__RootElement_SingleChildElement_RenderElement.prototype;
    _.super$__RootElement_SingleChildElement_RenderElement$_firstBuild = _._firstBuild$1;
    _ = A._ProviderScopeState_State_SyncStateMixin.prototype;
    _.super$_ProviderScopeState_State_SyncStateMixin$initState = _.initState$0;
    _.super$_ProviderScopeState_State_SyncStateMixin$dispose = _.dispose$0;
    _ = A.ProviderElementBase.prototype;
    _.super$ProviderElementBase$visitChildren = _.visitChildren$2$elementVisitor$notifierVisitor;
    _.super$ProviderElementBase$dispose = _.dispose$0;
    _.super$ProviderElementBase$runOnDispose = _.runOnDispose$0;
    _ = A.StateNotifier.prototype;
    _.super$StateNotifier$state = _.set$state;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _static_1 = hunkHelpers._static_1,
      _static = hunkHelpers.installStaticTearOff,
      _static_0 = hunkHelpers._static_0,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance_0_i = hunkHelpers._instance_0i,
      _instance_2_i = hunkHelpers._instance_2i,
      _instance_1_u = hunkHelpers._instance_1u;
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 128);
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 8);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 8);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 8);
    _static(A, "async__FutureExtensions__ignore$closure", 1, null, ["call$2", "call$1"], ["FutureExtensions__ignore", function(_) {
      return A.FutureExtensions__ignore(_, null);
    }], 129, 0);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_1(A, "async___nullDataHandler$closure", "_nullDataHandler", 9);
    _instance(A._Completer.prototype, "get$completeError", 0, 1, null, ["call$2", "call$1"], ["completeError$2", "completeError$1"], 72, 0, 0);
    _instance_2_u(A._Future.prototype, "get$_completeError", "_completeError$2", 4);
    _instance_0_u(A._DoneStreamSubscription.prototype, "get$_sendDone", "_sendDone$0", 0);
    _instance_2_u(A._RootZone.prototype, "get$handleUncaughtError", "handleUncaughtError$2", 4);
    _static_2(A, "collection___defaultEquals$closure", "_defaultEquals", 17);
    _static_1(A, "collection___defaultHashCode$closure", "_defaultHashCode", 18);
    _static_1(A, "convert___defaultToEncodable$closure", "_defaultToEncodable", 27);
    var _;
    _instance_1_i(_ = A._ByteCallbackSink.prototype, "get$add", "add$1", 35);
    _instance_0_i(_, "get$close", "close$0", 0);
    _static_1(A, "core__identityHashCode$closure", "identityHashCode", 18);
    _static_2(A, "core__identical$closure", "identical", 17);
    _static_1(A, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 15);
    _instance_2_i(A.HttpRequest.prototype, "get$setRequestHeader", "setRequestHeader$2", 98);
    _instance_2_u(_ = A.DeepCollectionEquality.prototype, "get$equals", "equals$2", 17);
    _instance_1_i(_, "get$hash", "hash$1", 18);
    _instance_1_u(_, "get$isValidKey", "isValidKey$1", 116);
    _static_1(A, "contact_data__contactDataFromJson$closure", "contactDataFromJson", 130);
    _static_1(A, "education__educationFromJson$closure", "educationFromJson", 131);
    _static_1(A, "foreign_languages__foreignLanguagesFromJson$closure", "foreignLanguagesFromJson", 132);
    _static_1(A, "other_projects0__otherProjectsFromJson$closure", "otherProjectsFromJson", 133);
    _static(A, "projects___$identity$closure", 1, null, ["call$1$1", "call$1"], ["_$identity", function(value) {
      return A._$identity(value, type$.dynamic);
    }], 134, 0);
    _instance_1_u(A._WrappedComponentBuilder.prototype, "get$$call", "call$1", 1);
    _static_2(A, "framework_Element__sort$closure", "Element__sort", 135);
    _static_1(A, "framework__InactiveElements__deactivateRecursively$closure", "_InactiveElements__deactivateRecursively", 14);
    _instance_0_u(A.BuildOwner.prototype, "get$performBuild", "performBuild$0", 0);
    _instance_0_u(A._InactiveElements.prototype, "get$_unmountAll", "_unmountAll$0", 0);
    _instance_1_u(A._UncontrolledProviderScopeElement.prototype, "get$_jasprVsync", "_jasprVsync$1", 8);
    _static_1(A, "framework1___defaultVsync$closure", "_defaultVsync", 8);
    _instance_1_u(_ = A.ProviderElementBase.prototype, "get$update", "update$1", 35);
    _instance_0_u(_, "get$_markDependencyMayHaveChanged", "_markDependencyMayHaveChanged$0", 0);
    _instance_0_u(A._ProviderScheduler.prototype, "get$_framework1$_task", "_framework1$_task$0", 0);
    _static(A, "future_provider_FutureProvider___new_tearOff$closure", 1, null, ["call$1$6$argument$debugGetCreateSourceHash$dependencies$from$name", "call$1", "call$1$1", "call$5$argument$dependencies$from$name", "call$1$5$argument$dependencies$from$name"], ["FutureProvider___new_tearOff", function(_createFn) {
      return A.FutureProvider___new_tearOff(_createFn, null, null, null, null, null, type$.dynamic);
    }, function(_createFn, $T) {
      return A.FutureProvider___new_tearOff(_createFn, null, null, null, null, null, $T);
    }, function(_createFn, argument, dependencies, from, $name) {
      return A.FutureProvider___new_tearOff(_createFn, argument, null, dependencies, from, $name, type$.dynamic);
    }, function(_createFn, argument, dependencies, from, $name, $T) {
      return A.FutureProvider___new_tearOff(_createFn, argument, null, dependencies, from, $name, $T);
    }], 136, 0);
    _instance_2_u(A._ValueListenable.prototype, "get$_notifyError", "_notifyError$2", 4);
    _static(A, "provider_Provider___new_tearOff$closure", 1, null, ["call$1$6$argument$debugGetCreateSourceHash$dependencies$from$name", "call$1", "call$1$1", "call$5$argument$dependencies$from$name", "call$1$5$argument$dependencies$from$name"], ["Provider___new_tearOff", function(_createFn) {
      return A.Provider___new_tearOff(_createFn, null, null, null, null, null, type$.dynamic);
    }, function(_createFn, $State) {
      return A.Provider___new_tearOff(_createFn, null, null, null, null, null, $State);
    }, function(_createFn, argument, dependencies, from, $name) {
      return A.Provider___new_tearOff(_createFn, argument, null, dependencies, from, $name, type$.dynamic);
    }, function(_createFn, argument, dependencies, from, $name, $State) {
      return A.Provider___new_tearOff(_createFn, argument, null, dependencies, from, $name, $State);
    }], 137, 0);
    _static_2(A, "stack_trace__throwErrorWithCombinedStackTrace$closure", "throwErrorWithCombinedStackTrace", 138);
    _instance_0_u(A.Chain.prototype, "get$toTrace", "toTrace$0", 7);
    _static_1(A, "frame_Frame___parseVM_tearOff$closure", "Frame___parseVM_tearOff", 10);
    _static_1(A, "frame_Frame___parseV8_tearOff$closure", "Frame___parseV8_tearOff", 10);
    _static_1(A, "frame_Frame___parseFirefox_tearOff$closure", "Frame___parseFirefox_tearOff", 10);
    _static_1(A, "frame_Frame___parseFriendly_tearOff$closure", "Frame___parseFriendly_tearOff", 10);
    _instance_0_u(A.LazyChain.prototype, "get$toTrace", "toTrace$0", 7);
    _static_1(A, "trace_Trace___parseVM_tearOff$closure", "Trace___parseVM_tearOff", 25);
    _static_1(A, "trace_Trace___parseFriendly_tearOff$closure", "Trace___parseFriendly_tearOff", 25);
    _static(A, "math__max$closure", 2, null, ["call$1$2", "call$2"], ["max", function(a, b) {
      return A.max(a, b, type$.num);
    }], 93, 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.Object, null);
    _inheritMany(A.Object, [A.JS_CONST, J.Interceptor, J.ArrayIterator, A.StreamTransformerBase, A.Iterable, A.CastIterator, A.MapMixin, A.Closure, A.Error, A._ListBase_Object_ListMixin, A.SentinelValue, A.ListIterator, A.Iterator, A.ExpandIterator, A.EmptyIterator, A.WhereTypeIterator, A.FixedLengthListMixin, A.UnmodifiableListMixin, A.ConstantMap, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.JSSyntaxRegExp, A._MatchImplementation, A._AllMatchesIterator, A.StringMatch, A._StringAllMatchesIterator, A._Cell, A.Rti, A._FunctionParameters, A._Type, A._TimerImpl, A._AsyncAwaitCompleter, A._IterationMarker, A._SyncStarIterator, A.AsyncError, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A.Stream, A.StreamSubscription, A._StreamController, A._AsyncStreamControllerDispatch, A._BufferingStreamSubscription, A._DelayedEvent, A._DelayedDone, A._PendingEvents, A._DoneStreamSubscription, A._StreamIterator, A._Zone, A._HashMapKeyIterator, A.__SetBase_Object_SetMixin, A._HashSetIterator, A._LinkedHashSetCell, A._LinkedHashSetIterator, A._LinkedListIterator, A.LinkedListEntry, A.ListMixin, A._DoubleLinkedQueueEntry, A._DoubleLinkedQueueIterator, A.SetMixin, A.Codec, A._Base64Encoder, A._Base64Decoder, A.ChunkedConversionSink, A._JsonStringifier, A._Utf8Encoder, A._Utf8Decoder, A.DateTime, A.Duration, A._Enum, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.FormatException, A.MapEntry, A.Null, A._StringStackTrace, A.StringBuffer, A._Uri, A.UriData, A._SimpleUri, A.Events, A.EventStreamProvider, A.ImmutableListMixin, A.FixedSizeListIterator, A._AcceptStructuredClone, A.NullRejectionException, A.ByteReader, A.ByteWriter, A.DefaultEquality, A.IterableEquality, A.ListEquality, A._UnorderedEquality, A._MapEntry, A.MapEquality, A.DeepCollectionEquality, A.Component, A.State, A._ContactData_Object__$ContactData, A._$ContactData, A._$_ContactData, A._Education_Object__$Education, A._CollegeStudy_Object__$CollegeStudy, A._$Education, A._$_Education, A._$CollegeStudy, A._$_CollegeStudy, A._ForeignLanguages_Object__$ForeignLanguages, A._Language_Object__$Language, A._$ForeignLanguages, A._$_ForeignLanguages, A._$Language, A._$_Language, A._Hobbies_Object__$Hobbies, A._Hobby_Object__$Hobby, A._$Hobbies, A._$_Hobbies, A._$Hobby, A._$_Hobby, A._OtherProjects_Object__$OtherProjects, A._Project_Object__$Project, A._DeploymentUrl_Object__$DeploymentUrl, A._$OtherProjects, A._$_OtherProjects, A._$Project, A._$_Project, A._$DeploymentUrl, A._$_DeploymentUrl, A._Projects_Object__$Projects, A._Project_Object__$Project0, A._ProjectDescription_Object__$ProjectDescription, A._ProjectUrl_Object__$ProjectUrl, A._$Projects, A._$_Projects, A._$Project0, A._$_Project0, A._$ProjectDescription, A._$ProjectDescriptionCopyWithImpl, A._$_ProjectDescription, A._$ProjectUrl, A._$_ProjectUrl, A._Skills_Object__$Skills, A._Skill_Object__$Skill, A._$Skills, A._$_Skills, A._$Skill, A._$_Skill, A.DataAccessParams, A.Freezed, A.BaseClient, A.BaseRequest, A.BaseResponse, A.ClientException, A.BindingBase, A.DomNodeData, A._EventBinding, A.Renderer, A._WrappedComponentBuilder, A.SchedulerBinding, A.SyncBinding, A.BuildOwner, A.ComponentsBinding, A.Element, A._InactiveElements, A.RenderElement, A.SyncStateMixin, A.FontStyle, A._Unit, A._TextStyles, A.ProviderDependencies, A.SyncScopeMixin, A.Context, A.Style, A.ParsedPath, A.PathException, A.FutureHandlerProviderElementMixin, A.ProviderFamilyBuilder, A.FutureProviderFamilyBuilder, A.AsyncValue, A.AlwaysAliveProviderListenable, A.AlwaysAliveProviderBase, A.AlwaysAliveAsyncSelector, A._StateReader, A.ProviderContainer, A.ProviderElementBase, A.ProviderOrFamily, A._FamilyMixin, A.ProviderListenable, A._ExternalProviderSubscription, A._ProviderListener, A.OverrideWithValueMixin, A._ProviderElementProxy_Object_ProviderListenable, A._ProviderScheduler, A._ValueListenable, A.ResultData, A.ResultError, A.StateNotifier, A.Chain, A.Frame, A.LazyChain, A.LazyTrace, A.Trace, A.UnparsedFrame]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, A.NativeByteBuffer, A.NativeTypedData]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, A.EventTarget, A.DomException, A.Event, A._HtmlCollection_JavaScriptObject_ListMixin, A.Location, A._NodeList_JavaScriptObject_ListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction, A._JasprConfig, A._IslandConfig, A._AppConfig]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A.StreamTransformerBase, [A.CastStreamTransformer, A.Converter]);
    _inheritMany(A.Converter, [A.CastConverter, A._UnicodeSubsetEncoder, A.Base64Encoder, A.Base64Decoder, A._FusedConverter, A.JsonEncoder, A.JsonDecoder, A.Utf8Encoder, A.Utf8Decoder, A.Decoder, A.Encoder, A.StateDecoder, A.StateEncoder]);
    _inheritMany(A.Iterable, [A._CastIterableBase, A.EfficientLengthIterable, A.MappedIterable, A.WhereIterable, A.ExpandIterable, A.TakeIterable, A.SkipIterable, A.SkipWhileIterable, A.WhereTypeIterable, A._ConstantMapKeyIterable, A.IterableBase, A._StringAllMatchesIterable, A.LinkedList, A.DoubleLinkedQueue]);
    _inheritMany(A._CastIterableBase, [A.CastIterable, A.__CastListBase__CastIterableBase_ListMixin]);
    _inherit(A._EfficientLengthCastIterable, A.CastIterable);
    _inherit(A._CastListBase, A.__CastListBase__CastIterableBase_ListMixin);
    _inherit(A.CastList, A._CastListBase);
    _inherit(A.MapBase, A.MapMixin);
    _inheritMany(A.MapBase, [A.CastMap, A.JsLinkedHashMap, A._HashMap, A._JsonMap, A._AttributeMap]);
    _inheritMany(A.Closure, [A.Closure2Args, A.CastMap_entries_closure, A.Closure0Args, A.Instantiation, A.TearOffClosure, A.JsLinkedHashMap_values_closure, A.initHooks_closure, A.initHooks_closure1, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A.Future_wait_closure, A._Future__chainForeignFuture_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_length_closure, A.Stream_first_closure0, A._RootZone_bindUnaryCallbackGuarded_closure, A._CustomHashMap_closure, A._LinkedCustomHashMap_closure, A.MapMixin_entries_closure, A._Uri__makePath_closure, A._createTables_setChars, A._createTables_setRange, A._EventStreamSubscription_closure, A._EventStreamSubscription_onData_closure, A.promiseToFuture_closure, A.promiseToFuture_closure0, A._MobileTopBar_build_closure, A._MobileTopBar_build__closure, A.ListItem_build_closure, A.MarkdownComponent_build_closure, A.LangSelector_build_closure, A._$$_EducationFromJson_closure, A._$$_ForeignLanguagesFromJson_closure, A._$$_HobbiesFromJson_closure, A._$$_OtherProjectsFromJson_closure, A._$$_ProjectFromJson_closure, A._$$_ProjectFromJson_closure0, A._$$_ProjectsFromJson_closure, A._$$_ProjectFromJson_closure1, A._$$_ProjectDescriptionFromJson_closure, A._$$_SkillsFromJson_closure, A.NavigationPanel_build_closure, A.TableOfContents_build_closure, A.TableOfContents_build__closure, A.dataAccessProvider_closure, A.hobbiesProvider_closure, A.pdfCVFileProvider_closure, A._skillsDataProvider_closure, A.skillsProvider_closure, A.skillsProvider__closure, A.skillsProvider___closure0, A.skillsProvider___closure1, A._projectsProvider_closure, A.projectsProvider_closure, A.projectsProvider__closure, A.projectsProvider__closure0, A.projectDescriptionProvider__closure, A.ContactData_build_closure, A.ContactData_build__closure, A.ContactData_build___closure, A.ContactData_build____closure, A.Education_build_closure, A.Education_build__closure, A.Education_build___closure, A.Hobbies_build_closure, A.Hobbies_build__closure, A.Hobbies_build___closure, A.ForeignLanguages_build_closure, A.ForeignLanguages_build__closure, A.OtherProjects_build_closure, A.OtherProjects_build__closure, A.OtherProjects_build___closure, A.OtherProjects_build___closure0, A._RichProjectCard_build_closure, A._SimpleProjectCard_build_closure, A._SkillsUsed_build_closure, A.Skills_build_closure, A.Skills_build__closure, A.Skills_build___closure, A.Skills_build____closure, A.WorkTimeline_build_closure, A.WorkTimeline_build__closure, A.WorkTimeline_build___closure, A.WorkTimeline_build____closure, A.WorkTimeline_build_____closure, A._ProjectListItemContent_build_closure, A._ProjectListItemContent_build_closure0, A.selectedLanguageProvider_closure, A._currentTranslationProvider_closure, A.i18nProvider__closure, A.I18nContextExtension_i18n_closure, A.get_closure, A.BaseRequest_closure0, A.BrowserClient_send_closure, A.BrowserClient_send_closure0, A.ByteStream_toBytes_closure, A.AppBinding_scheduleFrame_closure, A._EventBinding_closure, A.BrowserDomRenderer_renderNode_closure, A.BrowserDomRenderer_renderNode_closure1, A.Element__updateAncestorSiblingRecursively_closure, A._InactiveElements__unmount_closure, A.MultiChildElement_updateChildren_replaceWithNullIfForgotten, A._syncStateProvider_closure, A.SyncScopeMixin_updateState_closure, A.Context_joinAll_closure, A.Context_split_closure, A._validateArgList_closure, A.WindowsStyle_absolutePathToUri_closure, A.FutureHandlerProviderElementMixin_handleFuture_closure, A.FutureHandlerProviderElementMixin_handleFuture__closure, A.FutureHandlerProviderElementMixin__handleAsync_closure, A.AsyncLoading_copyWithPrevious_closure, A.AsyncLoading_copyWithPrevious_closure0, A.AsyncLoading_copyWithPrevious_closure1, A.AsyncLoading_copyWithPrevious_closure2, A.AsyncLoading_copyWithPrevious_closure3, A.AsyncLoading_copyWithPrevious_closure4, A.AsyncValueX_whenData_closure, A.AsyncValueX_whenData_closure0, A.AsyncValueX_whenData_closure1, A._StateReader__create_closure, A._StateReader__create_closure0, A.ProviderContainer__getStateReader_getReader_setupOverride, A.ProviderContainer__getStateReader_getReader_closure, A.ProviderContainer__getStateReader_getReader_closure0, A.ProviderContainer_getAllProviderElementsInOrder_closure, A.ProviderContainer_getAllProviderElementsInOrder_closure0, A.ProviderContainer_getAllProviderElementsInOrder__closure, A.ProviderContainer_getAllProviderElementsInOrder_closure1, A.ProviderElementBase_requireState_closure, A.ProviderElementBase_mount_closure, A.ProviderElementBase_mount_closure0, A.ProviderElementBase_invalidateSelf_closure, A.ProviderElementBase_invalidateSelf_closure0, A.ProviderElementBase__maybeRebuildDependencies_closure, A.ProviderElementBase__notifyListeners_closure, A.ProviderElementBase__notifyListeners_closure0, A.ProviderElementBase__notifyListeners_closure1, A.ProviderElementBase__notifyListeners_closure2, A.ProviderElementBase__notifyListeners_closure3, A.ProviderElementBase__notifyListeners_closure4, A.ProviderElementBase__markDependencyMayHaveChanged_closure, A.ProviderElementBase__markDependencyMayHaveChanged_closure0, A.FamilyBase_call_closure, A._allTransitiveDependencies_visitDependency, A._FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin_dispose_closure, A._FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin_dispose_closure0, A.ProxyElementValueNotifier_result_closure, A._ValueListenable__notifyValue_closure, A._ValueListenable__notifyError_closure, A._ValueListenable_notifyDependencyMayHaveChanged_closure, A.throwErrorWithCombinedStackTrace_closure, A._notifier_closure, A.StateProviderElement_create_closure, A.Chain_Chain$parse_closure, A.Chain_foldFrames_closure, A.Chain_foldFrames_closure0, A.Chain_toTrace_closure, A.Chain_toString_closure0, A.Chain_toString__closure0, A.Chain_toString_closure, A.Chain_toString__closure, A.Trace__parseVM_closure, A.Trace$parseV8_closure, A.Trace$parseJSCore_closure, A.Trace$parseFirefox_closure, A.Trace$parseFriendly_closure, A.Trace_toString_closure0, A.Trace_toString_closure, A.main_closure]);
    _inheritMany(A.Closure2Args, [A.CastMap_forEach_closure, A.JsLinkedHashMap_addAll_closure, A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A.Future_wait_handleError, A._Future__chainForeignFuture_closure0, A._HashMap_addAll_closure, A.HashMap_HashMap$from_closure, A.MapBase_mapToString_closure, A._JsonStringifier_writeMap_closure, A.Uri__parseIPv4Address_error, A.Uri_parseIPv6Address_error, A.Uri_parseIPv6Address_parseHex, A._createTables_build, A._AcceptStructuredClone_walk_closure, A.skillsProvider___closure, A.projectsProvider___closure, A._projectDescriptionProvider_closure, A.projectDescriptionProvider_closure, A.ContactData_build__closure0, A.ForeignLanguages_build___closure, A._ProjectListItemContent_build_closure1, A.i18nProvider_closure, A.BaseRequest_closure, A.DomNodeData_clearEvents_closure, A.BrowserDomRenderer_renderNode_closure0, A.ProviderDependencies_watch_closure, A.FutureHandlerProviderElementMixin_handleFuture__closure0, A.FutureHandlerProviderElementMixin__handleAsync_closure1, A.FutureHandlerProviderElementMixin__handleAsync_closure2, A.AsyncValueX_maybeWhen_closure, A.ProviderContainer__getStateReader_getReader_closure1, A.ProviderElementBase_watch_closure, A.ProviderElementBase_watch_closure0, A.ProviderElementBase__listenElement_closure, A.Frame_Frame$parseV8_closure_parseLocation]);
    _inheritMany(A.Error, [A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A.RuntimeError, A.AssertionError, A._Error, A.JsonUnsupportedObjectError, A.NullThrownError, A.ArgumentError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError, A.CyclicInitializationError, A.CircularDependencyError, A.StateNotifierListenerError]);
    _inherit(A.ListBase, A._ListBase_Object_ListMixin);
    _inheritMany(A.ListBase, [A.UnmodifiableListBase, A._ChildNodeListLazy]);
    _inheritMany(A.UnmodifiableListBase, [A.CodeUnits, A.UnmodifiableListView]);
    _inheritMany(A.Closure0Args, [A.nullFuture_closure, A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A.Future_Future_closure, A.Future_Future$microtask_closure, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainForeignFuture_closure1, A._Future__asyncCompleteWithValue_closure, A._Future__chainFuture_closure, A._Future__asyncCompleteError_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_length_closure0, A.Stream_first_closure, A._StreamController__subscribe_closure, A._StreamController__recordCancel_complete, A._BufferingStreamSubscription__sendDone_sendDone, A._PendingEvents_schedule_closure, A._cancelAndValue_closure, A._rootHandleError_closure, A._RootZone_bindCallbackGuarded_closure, A.Utf8Decoder__decoder_closure, A.Utf8Decoder__decoderNonfatal_closure, A._CollapsibleState_didChangeDependencies_closure, A._PushPinState_didChangeDependencies_closure, A._ScrollspyState_didChangeDependencies_closure, A.projectDescriptionProvider__closure0, A.ContactData_build__closure1, A.Education_build__closure0, A.Hobbies_build__closure0, A.ForeignLanguages_build__closure0, A.OtherProjects_build__closure0, A.Skills_build__closure0, A.WorkTimeline_build___closure0, A.I18nContextExtension_i18n_closure0, A.SchedulerBinding_scheduleBuild_closure, A.BuildOwner_performRebuildOn_closure, A.BuildOwner_performRebuildOn_closure0, A.BuildOwner__rebuildAndWait_closure, A.ComponentsBinding_attachRootComponent_closure, A.Element_rebuild_closure, A._DomElement_MultiChildElement_RenderElement__firstBuild_closure, A._TextElement_NoChildElement_RenderElement__firstBuild_closure, A.__RootElement_SingleChildElement_RenderElement__firstBuild_closure, A._UncontrolledProviderScopeElement__jasprVsync_closure, A._UncontrolledProviderScopeElement__jasprVsync__closure, A.FutureHandlerProviderElementMixin_handleFuture_closure_cancel, A.FutureHandlerProviderElementMixin__handleAsync_closure0, A.AsyncValueX_maybeWhen_closure0, A.ProviderContainer__getStateReader_getReader, A.ProviderContainer__getStateReader_getReader_closure2, A.ProviderElementBase_watch_closure1, A.FutureProviderElement_create_closure, A.Chain_Chain$forTrace_closure, A.Frame_Frame$parseVM_closure, A.Frame_Frame$parseV8_closure, A.Frame_Frame$_parseFirefoxEval_closure, A.Frame_Frame$parseFirefox_closure, A.Frame_Frame$parseFriendly_closure, A.LazyTrace_foldFrames_closure, A.Trace_Trace$current_closure, A.Trace_Trace$from_closure, A.StateNotifier_addListener_closure]);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.EmptyIterable, A.LinkedHashMapKeyIterable, A._HashMapKeyIterable]);
    _inheritMany(A.ListIterable, [A.SubListIterable, A.MappedListIterable, A.ReversedListIterable, A._JsonMapKeyIterable]);
    _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
    _inheritMany(A.Iterator, [A.MappedIterator, A.WhereIterator, A.TakeIterator, A.SkipIterator, A.SkipWhileIterator]);
    _inherit(A.EfficientLengthTakeIterable, A.TakeIterable);
    _inherit(A.EfficientLengthSkipIterable, A.SkipIterable);
    _inherit(A.ConstantStringMap, A.ConstantMap);
    _inherit(A.Instantiation1, A.Instantiation);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inherit(A._AssertionError, A.AssertionError);
    _inheritMany(A.IterableBase, [A._AllMatchesIterable, A._SyncStarIterable]);
    _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.NativeTypedArray);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt8List, A.NativeUint32List, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inheritMany(A._Completer, [A._AsyncCompleter, A._SyncCompleter]);
    _inheritMany(A.Stream, [A.StreamView, A._StreamImpl, A._EmptyStream, A._EventStream]);
    _inherit(A._AsyncStreamController, A._StreamController);
    _inherit(A._ControllerStream, A._StreamImpl);
    _inherit(A._ControllerSubscription, A._BufferingStreamSubscription);
    _inherit(A._DelayedData, A._DelayedEvent);
    _inherit(A._RootZone, A._Zone);
    _inheritMany(A._HashMap, [A._IdentityHashMap, A._CustomHashMap]);
    _inheritMany(A.JsLinkedHashMap, [A._LinkedIdentityHashMap, A._LinkedCustomHashMap]);
    _inherit(A._SetBase, A.__SetBase_Object_SetMixin);
    _inheritMany(A._SetBase, [A._HashSet, A._LinkedHashSet]);
    _inheritMany(A._DoubleLinkedQueueEntry, [A._DoubleLinkedQueueElement, A._DoubleLinkedQueueSentinel]);
    _inheritMany(A.Codec, [A.Encoding, A.Base64Codec, A._FusedCodec, A.JsonCodec, A.BinaryCodec, A.StateCodec]);
    _inheritMany(A.Encoding, [A.AsciiCodec, A.Utf8Codec]);
    _inherit(A.AsciiEncoder, A._UnicodeSubsetEncoder);
    _inherit(A.ByteConversionSink, A.ChunkedConversionSink);
    _inherit(A.ByteConversionSinkBase, A.ByteConversionSink);
    _inherit(A._ByteCallbackSink, A.ByteConversionSinkBase);
    _inherit(A.JsonCyclicError, A.JsonUnsupportedObjectError);
    _inherit(A._JsonStringStringifier, A._JsonStringifier);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inherit(A._DataUri, A._Uri);
    _inheritMany(A.EventTarget, [A.Node, A.HttpRequestEventTarget, A.Window]);
    _inheritMany(A.Node, [A.Element0, A.CharacterData, A.Document, A._Attr]);
    _inherit(A.HtmlElement, A.Element0);
    _inheritMany(A.HtmlElement, [A.AnchorElement, A.AreaElement, A.FormElement, A.InputElement, A.SelectElement]);
    _inherit(A.ElementEvents, A.Events);
    _inherit(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A._HtmlCollection_JavaScriptObject_ListMixin);
    _inherit(A.HtmlCollection, A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.HttpRequest, A.HttpRequestEventTarget);
    _inherit(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A._NodeList_JavaScriptObject_ListMixin);
    _inherit(A.NodeList, A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.ProgressEvent, A.Event);
    _inherit(A.Text0, A.CharacterData);
    _inherit(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin);
    _inherit(A._NamedNodeMap, A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._ElementAttributeMap, A._AttributeMap);
    _inherit(A._ElementEventStreamImpl, A._EventStream);
    _inherit(A._EventStreamSubscription, A.StreamSubscription);
    _inherit(A._AcceptStructuredCloneDart2Js, A._AcceptStructuredClone);
    _inherit(A.SetEquality, A._UnorderedEquality);
    _inheritMany(A.Component, [A.StatelessComponent, A.DomComponent, A.StatefulComponent, A._Root, A.Text, A.InheritedComponent]);
    _inheritMany(A.StatelessComponent, [A.App, A._LeftPane, A._MobileTopBar, A.ContentPadding, A.ContentSection, A.ContentTitle, A.Copyrights, A.ListItem, A.SimpleListItem, A.MarkdownComponent, A.LangSelector, A.NavigationPanel, A.TableOfContents, A.PdfCVLinkComponent, A.ContactData, A.Education, A._StudiesComponent, A.Hobbies, A.ForeignLanguages, A._LanguageItem, A.OtherProjects, A._ProjectCard, A._RichProjectCard, A._SimpleProjectCard, A._SkillsUsed, A._DeploymentUrl, A.Skills, A.WorkTimeline, A._ProjectListItemContent, A.Builder]);
    _inherit(A.Div, A.DomComponent);
    _inheritMany(A.StatefulComponent, [A.Collapsible, A.PushPin, A.Scrollspy, A.ProviderScope]);
    _inheritMany(A.State, [A._CollapsibleState, A._PushPinState, A._ScrollspyState, A._ProviderScopeState_State_SyncStateMixin]);
    _inherit(A.ContactData0, A._ContactData_Object__$ContactData);
    _inherit(A.Education0, A._Education_Object__$Education);
    _inherit(A.CollegeStudy, A._CollegeStudy_Object__$CollegeStudy);
    _inherit(A.ForeignLanguages0, A._ForeignLanguages_Object__$ForeignLanguages);
    _inherit(A.Language, A._Language_Object__$Language);
    _inherit(A.Hobbies0, A._Hobbies_Object__$Hobbies);
    _inherit(A.Hobby, A._Hobby_Object__$Hobby);
    _inherit(A.OtherProjects0, A._OtherProjects_Object__$OtherProjects);
    _inherit(A.Project, A._Project_Object__$Project);
    _inherit(A.DeploymentUrl, A._DeploymentUrl_Object__$DeploymentUrl);
    _inherit(A.Projects, A._Projects_Object__$Projects);
    _inherit(A.Project0, A._Project_Object__$Project0);
    _inherit(A.ProjectDescription, A._ProjectDescription_Object__$ProjectDescription);
    _inherit(A.ProjectUrl, A._ProjectUrl_Object__$ProjectUrl);
    _inherit(A.__$$_ProjectDescriptionCopyWithImpl, A._$ProjectDescriptionCopyWithImpl);
    _inherit(A.Skills0, A._Skills_Object__$Skills);
    _inherit(A.Skill, A._Skill_Object__$Skill);
    _inheritMany(A._Enum, [A.SupportedLanguages, A.SchedulerPhase, A._ElementLifecycle, A._StateLifecycle, A.Target, A.FontWeight]);
    _inherit(A.EqualUnmodifiableListView, A.UnmodifiableListView);
    _inherit(A.BrowserClient, A.BaseClient);
    _inherit(A.ByteStream, A.StreamView);
    _inherit(A.Request, A.BaseRequest);
    _inheritMany(A.BaseResponse, [A.Response, A.StreamedResponse]);
    _inherit(A._AppBinding_BindingBase_SchedulerBinding, A.BindingBase);
    _inherit(A._AppBinding_BindingBase_SchedulerBinding_ComponentsBinding, A._AppBinding_BindingBase_SchedulerBinding);
    _inherit(A._AppBinding_BindingBase_SchedulerBinding_ComponentsBinding_SyncBinding, A._AppBinding_BindingBase_SchedulerBinding_ComponentsBinding);
    _inherit(A.AppBinding, A._AppBinding_BindingBase_SchedulerBinding_ComponentsBinding_SyncBinding);
    _inherit(A.BrowserDomRenderer, A.Renderer);
    _inheritMany(A.Element, [A.SingleChildElement, A.MultiChildElement, A.NoChildElement]);
    _inheritMany(A.SingleChildElement, [A.__RootElement_SingleChildElement_RenderElement, A.InheritedElement]);
    _inherit(A._RootElement, A.__RootElement_SingleChildElement_RenderElement);
    _inheritMany(A.MultiChildElement, [A._DomElement_MultiChildElement_RenderElement, A.StatefulElement, A.StatelessElement]);
    _inherit(A.DomElement, A._DomElement_MultiChildElement_RenderElement);
    _inherit(A._TextElement_NoChildElement_RenderElement, A.NoChildElement);
    _inherit(A.TextElement, A._TextElement_NoChildElement_RenderElement);
    _inherit(A._RemUnit, A._Unit);
    _inherit(A._ProviderScopeState_State_SyncStateMixin_SyncScopeMixin, A._ProviderScopeState_State_SyncStateMixin);
    _inherit(A.ProviderScopeState, A._ProviderScopeState_State_SyncStateMixin_SyncScopeMixin);
    _inherit(A.UncontrolledProviderScope, A.InheritedComponent);
    _inherit(A._UncontrolledProviderScopeElement, A.InheritedElement);
    _inherit(A.InternalStyle, A.Style);
    _inheritMany(A.InternalStyle, [A.PosixStyle, A.UrlStyle, A.WindowsStyle]);
    _inheritMany(A.AsyncValue, [A.AsyncData, A.AsyncLoading, A.AsyncError0]);
    _inheritMany(A.ProviderOrFamily, [A.Family, A._ProviderBase_ProviderOrFamily_ProviderListenable]);
    _inherit(A._FamilyBase_Family__FamilyMixin, A.Family);
    _inherit(A.FamilyBase, A._FamilyBase_Family__FamilyMixin);
    _inherit(A.ProviderBase, A._ProviderBase_ProviderOrFamily_ProviderListenable);
    _inherit(A._ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable, A._ProviderElementProxy_Object_ProviderListenable);
    _inherit(A.ProviderElementProxy, A._ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable);
    _inheritMany(A.ProviderBase, [A._FutureProviderBase, A._InternalProvider_ProviderBase_OverrideWithValueMixin, A._StateProviderBase]);
    _inherit(A._FutureProvider__FutureProviderBase_AlwaysAliveProviderBase, A._FutureProviderBase);
    _inherit(A._FutureProvider__FutureProviderBase_AlwaysAliveProviderBase_AlwaysAliveAsyncSelector, A._FutureProvider__FutureProviderBase_AlwaysAliveProviderBase);
    _inherit(A.FutureProvider, A._FutureProvider__FutureProviderBase_AlwaysAliveProviderBase_AlwaysAliveAsyncSelector);
    _inheritMany(A.ProviderElementBase, [A._FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin, A.ProviderElement, A.StateProviderElement]);
    _inherit(A.FutureProviderElement, A._FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin);
    _inheritMany(A.FamilyBase, [A.FutureProviderFamily, A.ProviderFamily]);
    _inherit(A.ProxyElementValueNotifier, A._ValueListenable);
    _inherit(A.InternalProvider, A._InternalProvider_ProviderBase_OverrideWithValueMixin);
    _inherit(A._Provider_InternalProvider_AlwaysAliveProviderBase, A.InternalProvider);
    _inherit(A.Provider, A._Provider_InternalProvider_AlwaysAliveProviderBase);
    _inherit(A.StateController, A.StateNotifier);
    _inherit(A._StateProvider__StateProviderBase_AlwaysAliveProviderBase, A._StateProviderBase);
    _inherit(A.StateProvider, A._StateProvider__StateProviderBase_AlwaysAliveProviderBase);
    _inherit(A._ListenerEntry, A.LinkedListEntry);
    _mixin(A.UnmodifiableListBase, A.UnmodifiableListMixin);
    _mixin(A.__CastListBase__CastIterableBase_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._AsyncStreamController, A._AsyncStreamControllerDispatch);
    _mixin(A._ListBase_Object_ListMixin, A.ListMixin);
    _mixin(A.__SetBase_Object_SetMixin, A.SetMixin);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin, A.ListMixin);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._NodeList_JavaScriptObject_ListMixin, A.ListMixin);
    _mixin(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin, A.ListMixin);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._ContactData_Object__$ContactData, A._$ContactData);
    _mixin(A._CollegeStudy_Object__$CollegeStudy, A._$CollegeStudy);
    _mixin(A._Education_Object__$Education, A._$Education);
    _mixin(A._ForeignLanguages_Object__$ForeignLanguages, A._$ForeignLanguages);
    _mixin(A._Language_Object__$Language, A._$Language);
    _mixin(A._Hobbies_Object__$Hobbies, A._$Hobbies);
    _mixin(A._Hobby_Object__$Hobby, A._$Hobby);
    _mixin(A._DeploymentUrl_Object__$DeploymentUrl, A._$DeploymentUrl);
    _mixin(A._OtherProjects_Object__$OtherProjects, A._$OtherProjects);
    _mixin(A._Project_Object__$Project, A._$Project);
    _mixin(A._Project_Object__$Project0, A._$Project0);
    _mixin(A._ProjectDescription_Object__$ProjectDescription, A._$ProjectDescription);
    _mixin(A._ProjectUrl_Object__$ProjectUrl, A._$ProjectUrl);
    _mixin(A._Projects_Object__$Projects, A._$Projects);
    _mixin(A._Skill_Object__$Skill, A._$Skill);
    _mixin(A._Skills_Object__$Skills, A._$Skills);
    _mixinHard(A._AppBinding_BindingBase_SchedulerBinding, A.SchedulerBinding);
    _mixinHard(A._AppBinding_BindingBase_SchedulerBinding_ComponentsBinding, A.ComponentsBinding);
    _mixinHard(A._AppBinding_BindingBase_SchedulerBinding_ComponentsBinding_SyncBinding, A.SyncBinding);
    _mixinHard(A._DomElement_MultiChildElement_RenderElement, A.RenderElement);
    _mixinHard(A._TextElement_NoChildElement_RenderElement, A.RenderElement);
    _mixinHard(A.__RootElement_SingleChildElement_RenderElement, A.RenderElement);
    _mixinHard(A._ProviderScopeState_State_SyncStateMixin, A.SyncStateMixin);
    _mixin(A._ProviderScopeState_State_SyncStateMixin_SyncScopeMixin, A.SyncScopeMixin);
    _mixin(A._FamilyBase_Family__FamilyMixin, A._FamilyMixin);
    _mixin(A._ProviderBase_ProviderOrFamily_ProviderListenable, A.ProviderListenable);
    _mixin(A._ProviderElementProxy_Object_ProviderListenable, A.ProviderListenable);
    _mixin(A._ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable, A.AlwaysAliveProviderListenable);
    _mixin(A._FutureProvider__FutureProviderBase_AlwaysAliveProviderBase, A.AlwaysAliveProviderBase);
    _mixin(A._FutureProvider__FutureProviderBase_AlwaysAliveProviderBase_AlwaysAliveAsyncSelector, A.AlwaysAliveAsyncSelector);
    _mixinHard(A._FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin, A.FutureHandlerProviderElementMixin);
    _mixin(A._InternalProvider_ProviderBase_OverrideWithValueMixin, A.OverrideWithValueMixin);
    _mixin(A._Provider_InternalProvider_AlwaysAliveProviderBase, A.AlwaysAliveProviderBase);
    _mixin(A._StateProvider__StateProviderBase_AlwaysAliveProviderBase, A.AlwaysAliveProviderBase);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    types: ["~()", "Iterable<Component>(BuildContext)", "bool(String)", "List<Component>()", "~(Object,StackTrace)", "~(ProviderElementBase<@>)", "Frame()", "Trace()", "~(~())", "~(@)", "Frame(String)", "Null()", "~(ProxyElementValueNotifier<@>)", "~(Object?,Object?)", "~(Element)", "String(String)", "~(Event)", "bool(Object?,Object?)", "int(Object?)", "Component(String)", "Future<Null>()", "bool(Skill)", "String(@)", "~(Uint8List,String,int)", "Null(ProgressEvent)", "Trace(String)", "@()", "@(@)", "_StateReader()", "_DeploymentUrl(DeploymentUrl)", "bool(@)", "Null(Object,StackTrace)", "int(Frame)", "String(Frame)", "Null(@)", "~(Object?)", "List<List<Skill>>(Skills0)", "~(int,@)", "DeploymentUrl(@)", "Project0(@)", "ProjectUrl(@)", "Skill(@)", "@(String)", "List<Hobby>(String)", "String(ProviderRef<String>)", "Future<Skills0>(FutureProviderRef<Skills0>)", "AsyncValue<List<List<Skill>>>(ProviderRef<AsyncValue<List<List<Skill>>>>)", "~(String,int)", "int(Skill,Skill)", "~(String,int?)", "Future<Projects>(FutureProviderRef<Projects>)", "AsyncValue<List<Project0>>(ProviderRef<AsyncValue<List<Project0>>>)", "List<Project0>(Projects)", "List<Project0>(List<Project0>)", "int(Project0,Project0)", "Future<ProjectDescription>(FutureProviderRef<ProjectDescription>,Project0)", "ProjectDescription(ProviderRef<ProjectDescription>,Project0)", "ProjectDescription()", "ProjectDescription(ProjectDescription)", "Iterable<Component>(ContactData0)", "Component(Component)", "List<Component>(Object,StackTrace)", "int(int,int)", "List<_StudiesComponent>(Education0)", "_StudiesComponent(CollegeStudy)", "List<Component>(List<Hobby>)", "Component(Hobby)", "List<_LanguageItem>(ForeignLanguages0)", "_LanguageItem(int,Language)", "List<Component>(OtherProjects0)", "_ProjectCard(Project)", "Component(_ProjectCard)", "~(Object[StackTrace?])", "Iterable<Component>(List<List<Skill>>)", "Component(Skill)", "List<Builder>(List<Project0>)", "Builder(Project0)", "Component(BuildContext)", "Component(ProjectUrl)", "List<Component>(List<Component>,Component)", "SupportedLanguages(StateProviderRef<SupportedLanguages>)", "Future<Map<String,String>>(FutureProviderRef<Map<String,String>>)", "AsyncValue<String>(ProviderRef<AsyncValue<String>>,String)", "String(Map<String,String>)", "String()", "Future<Response>(Client)", "bool(String,String)", "int(String)", "Uint8List(@,@)", "~(List<int>)", "~(num)", "~(String,_EventBinding)", "String(MapEntry<String,String>)", "0^(0^,0^)<num>", "~(String)", "Future<~>()", "@(@,String)", "Element?(Element)", "~(String,String)", "Map<String,@>(StateProviderRef<Map<String,@>>)", "Map<String,@>(Map<String,@>)", "_Future<@>(@)", "String(String?)", "~(ResultData<Object?>)", "~(ResultError<@>)", "@(@,@)", "~({origin!ProviderBase<@>,override!ProviderBase<@>})", "ProviderContainer?(ProviderOrFamily)", "bool(ProviderContainer?)", "ProviderContainer(ProviderContainer,ProviderContainer?)", "Null(~())", "~(@,@)", "Object()", "~(ProviderOrFamily)", "Null(Object)", "bool(Frame)", "bool(Object?)", "Chain()", "Trace(Trace)", "bool(Trace)", "List<Frame>(Trace)", "int(Trace)", "Null(@,StackTrace)", "String(Trace)", "CollegeStudy(@)", "Language(@)", "Frame(String,String)", "App(BuildContext)", "int(@,@)", "~(Object?[Object?])", "ContactData0(String)", "Education0(String)", "ForeignLanguages0(String)", "OtherProjects0(String)", "0^(0^)<Object?>", "int(Element,Element)", "FutureProvider<0^>(0^/(FutureProviderRef<0^>){argument:Object?,debugGetCreateSourceHash:String()?,dependencies:List<ProviderOrFamily>?,from:Family<@>?,name:String?})<Object?>", "Provider<0^>(0^(ProviderRef<0^>){argument:Object?,debugGetCreateSourceHash:String()?,dependencies:List<ProviderOrFamily>?,from:Family<@>?,name:String?})<Object?>", "0&(Object,StackTrace)", "Hobby(@)", "Project(@)", "~(String,~(@))"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti")
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","JavaScriptFunction":"LegacyJavaScriptObject","_JasprConfig":"LegacyJavaScriptObject","_IslandConfig":"LegacyJavaScriptObject","_AppConfig":"LegacyJavaScriptObject","AbortPaymentEvent":"Event","ExtendableEvent":"Event","MathMLElement":"Element0","_ResourceProgressEvent":"ProgressEvent","AudioElement":"HtmlElement","MediaElement":"HtmlElement","ShadowRoot":"Node","DocumentFragment":"Node","HtmlDocument":"Document","Comment":"CharacterData","HtmlFormControlsCollection":"HtmlCollection","CDataSection":"Text0","JSBool":{"bool":[]},"JSNull":{"Null":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"JSIndexable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"JSIndexable":["1"]},"ArrayIterator":{"Iterator":["1"]},"JSNumber":{"double":[],"num":[],"Comparable":["num"]},"JSInt":{"double":[],"int":[],"num":[],"Comparable":["num"]},"JSNumNotInt":{"double":[],"num":[],"Comparable":["num"]},"JSString":{"String":[],"Comparable":["String"],"Pattern":[],"JSIndexable":["@"]},"CastStreamTransformer":{"StreamTransformerBase":["3","4"],"StreamTransformer":["3","4"],"StreamTransformerBase.S":"3","StreamTransformerBase.T":"4"},"CastConverter":{"Converter":["3","4"],"StreamTransformerBase":["3","4"],"StreamTransformer":["3","4"],"StreamTransformerBase.S":"3","StreamTransformerBase.T":"4","Converter.S":"3","Converter.T":"4"},"_CastIterableBase":{"Iterable":["2"]},"CastIterator":{"Iterator":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListMixin.E":"2","Iterable.E":"2"},"CastMap":{"MapMixin":["3","4"],"Map":["3","4"],"MapMixin.K":"3","MapMixin.V":"4"},"LateError":{"Error":[]},"CodeUnits":{"ListMixin":["int"],"UnmodifiableListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int","UnmodifiableListMixin.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"ListIterator":{"Iterator":["1"]},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedIterator":{"Iterator":["2"]},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListIterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereIterator":{"Iterator":["1"]},"ExpandIterable":{"Iterable":["2"],"Iterable.E":"2"},"ExpandIterator":{"Iterator":["2"]},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"TakeIterator":{"Iterator":["1"]},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterator":{"Iterator":["1"]},"SkipWhileIterable":{"Iterable":["1"],"Iterable.E":"1"},"SkipWhileIterator":{"Iterator":["1"]},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"EmptyIterator":{"Iterator":["1"]},"WhereTypeIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereTypeIterator":{"Iterator":["1"]},"UnmodifiableListBase":{"ListMixin":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_ConstantMapKeyIterable":{"Iterable":["1"],"Iterable.E":"1"},"Instantiation":{"Closure":[],"Function":[]},"Instantiation1":{"Closure":[],"Function":[]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"NullThrownFromJavaScriptException":{"Exception":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Closure":[],"Function":[]},"Closure2Args":{"Closure":[],"Function":[]},"TearOffClosure":{"Closure":[],"Function":[]},"StaticClosure":{"Closure":[],"Function":[]},"BoundClosure":{"Closure":[],"Function":[]},"RuntimeError":{"Error":[]},"_AssertionError":{"Error":[]},"JsLinkedHashMap":{"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapKeyIterator":{"Iterator":["1"]},"JSSyntaxRegExp":{"Pattern":[]},"_MatchImplementation":{"RegExpMatch":[],"Match":[]},"_AllMatchesIterable":{"Iterable":["RegExpMatch"],"Iterable.E":"RegExpMatch"},"_AllMatchesIterator":{"Iterator":["RegExpMatch"]},"StringMatch":{"Match":[]},"_StringAllMatchesIterable":{"Iterable":["Match"],"Iterable.E":"Match"},"_StringAllMatchesIterator":{"Iterator":["Match"]},"NativeByteBuffer":{"ByteBuffer":[]},"NativeTypedData":{"TypedData":[]},"NativeByteData":{"TypedData":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"TypedData":[],"JSIndexable":["1"]},"NativeTypedArrayOfInt":{"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"]},"NativeInt8List":{"NativeTypedArrayOfInt":[],"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeUint32List":{"NativeTypedArrayOfInt":[],"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeUint8List":{"NativeTypedArrayOfInt":[],"NativeTypedArray":["int"],"ListMixin":["int"],"Uint8List":[],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"_Type":{"Type":[]},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"_Future":{"Future":["1"]},"_AsyncAwaitCompleter":{"Completer":["1"]},"_SyncStarIterator":{"Iterator":["1"]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"AsyncError":{"Error":[]},"_Completer":{"Completer":["1"]},"_AsyncCompleter":{"_Completer":["1"],"Completer":["1"]},"_SyncCompleter":{"_Completer":["1"],"Completer":["1"]},"StreamView":{"Stream":["1"]},"StreamTransformerBase":{"StreamTransformer":["1","2"]},"_StreamController":{"_StreamControllerLifecycle":["1"],"_EventDispatch":["1"]},"_AsyncStreamController":{"_AsyncStreamControllerDispatch":["1"],"_StreamController":["1"],"_StreamControllerLifecycle":["1"],"_EventDispatch":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"],"Stream.T":"1"},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_EventDispatch":["1"]},"_BufferingStreamSubscription":{"StreamSubscription":["1"],"_EventDispatch":["1"]},"_StreamImpl":{"Stream":["1"]},"_DelayedData":{"_DelayedEvent":["1"]},"_DelayedDone":{"_DelayedEvent":["@"]},"_DoneStreamSubscription":{"StreamSubscription":["1"]},"_EmptyStream":{"Stream":["1"],"Stream.T":"1"},"_Zone":{"Zone":[]},"_RootZone":{"_Zone":[],"Zone":[]},"_HashMap":{"MapMixin":["1","2"],"HashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_IdentityHashMap":{"_HashMap":["1","2"],"MapMixin":["1","2"],"HashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_CustomHashMap":{"_HashMap":["1","2"],"MapMixin":["1","2"],"HashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_HashMapKeyIterator":{"Iterator":["1"]},"_LinkedIdentityHashMap":{"JsLinkedHashMap":["1","2"],"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_LinkedCustomHashMap":{"JsLinkedHashMap":["1","2"],"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_HashSet":{"_SetBase":["1"],"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_HashSetIterator":{"Iterator":["1"]},"_LinkedHashSet":{"_SetBase":["1"],"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_LinkedHashSetIterator":{"Iterator":["1"]},"UnmodifiableListView":{"ListMixin":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListMixin.E":"1","UnmodifiableListMixin.E":"1"},"IterableBase":{"Iterable":["1"]},"LinkedList":{"Iterable":["1"],"Iterable.E":"1"},"_LinkedListIterator":{"Iterator":["1"]},"ListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"MapMixin":{"Map":["1","2"]},"_DoubleLinkedQueueElement":{"_DoubleLinkedQueueEntry":["1"]},"_DoubleLinkedQueueSentinel":{"_DoubleLinkedQueueEntry":["1"]},"DoubleLinkedQueue":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_DoubleLinkedQueueIterator":{"Iterator":["1"]},"_SetBase":{"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_JsonMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"Iterable.E":"String","ListIterable.E":"String"},"AsciiCodec":{"Encoding":[],"Codec":["String","List<int>"],"Codec.T":"List<int>","Codec.S":"String"},"_UnicodeSubsetEncoder":{"Converter":["String","List<int>"],"StreamTransformerBase":["String","List<int>"],"StreamTransformer":["String","List<int>"]},"AsciiEncoder":{"Converter":["String","List<int>"],"StreamTransformerBase":["String","List<int>"],"StreamTransformer":["String","List<int>"],"StreamTransformerBase.S":"String","StreamTransformerBase.T":"List<int>","Converter.S":"String","Converter.T":"List<int>"},"Base64Codec":{"Codec":["List<int>","String"],"Codec.T":"String","Codec.S":"List<int>"},"Base64Encoder":{"Converter":["List<int>","String"],"StreamTransformerBase":["List<int>","String"],"StreamTransformer":["List<int>","String"],"StreamTransformerBase.S":"List<int>","StreamTransformerBase.T":"String","Converter.S":"List<int>","Converter.T":"String"},"Base64Decoder":{"Converter":["String","List<int>"],"StreamTransformerBase":["String","List<int>"],"StreamTransformer":["String","List<int>"],"StreamTransformerBase.S":"String","StreamTransformerBase.T":"List<int>","Converter.S":"String","Converter.T":"List<int>"},"_FusedCodec":{"Codec":["1","3"],"Codec.T":"3","Codec.S":"1"},"Converter":{"StreamTransformerBase":["1","2"],"StreamTransformer":["1","2"]},"_FusedConverter":{"Converter":["1","3"],"StreamTransformerBase":["1","3"],"StreamTransformer":["1","3"],"StreamTransformerBase.S":"1","StreamTransformerBase.T":"3","Converter.S":"1","Converter.T":"3"},"Encoding":{"Codec":["String","List<int>"]},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"JsonCodec":{"Codec":["Object?","String"],"Codec.T":"String","Codec.S":"Object?"},"JsonEncoder":{"Converter":["Object?","String"],"StreamTransformerBase":["Object?","String"],"StreamTransformer":["Object?","String"],"StreamTransformerBase.S":"Object?","StreamTransformerBase.T":"String","Converter.S":"Object?","Converter.T":"String"},"JsonDecoder":{"Converter":["String","Object?"],"StreamTransformerBase":["String","Object?"],"StreamTransformer":["String","Object?"],"StreamTransformerBase.S":"String","StreamTransformerBase.T":"Object?","Converter.S":"String","Converter.T":"Object?"},"Utf8Codec":{"Encoding":[],"Codec":["String","List<int>"],"Codec.T":"List<int>","Codec.S":"String"},"Utf8Encoder":{"Converter":["String","List<int>"],"StreamTransformerBase":["String","List<int>"],"StreamTransformer":["String","List<int>"],"StreamTransformerBase.S":"String","StreamTransformerBase.T":"List<int>","Converter.S":"String","Converter.T":"List<int>"},"Utf8Decoder":{"Converter":["List<int>","String"],"StreamTransformerBase":["List<int>","String"],"StreamTransformer":["List<int>","String"],"StreamTransformerBase.S":"List<int>","StreamTransformerBase.T":"String","Converter.S":"List<int>","Converter.T":"String"},"DateTime":{"Comparable":["DateTime"]},"double":{"num":[],"Comparable":["num"]},"Duration":{"Comparable":["Duration"]},"int":{"num":[],"Comparable":["num"]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"num":{"Comparable":["num"]},"RegExpMatch":{"Match":[]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"String":{"Comparable":["String"],"Pattern":[]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"NullThrownError":{"TypeError":[],"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"_StringStackTrace":{"StackTrace":[]},"StringBuffer":{"StringSink":[]},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"HttpRequest":{"EventTarget":[]},"Node":{"EventTarget":[]},"ProgressEvent":{"Event":[]},"HtmlElement":{"Element0":[],"Node":[],"EventTarget":[]},"AnchorElement":{"Element0":[],"Node":[],"EventTarget":[]},"AreaElement":{"Element0":[],"Node":[],"EventTarget":[]},"CharacterData":{"Node":[],"EventTarget":[]},"Document":{"Node":[],"EventTarget":[]},"Element0":{"Node":[],"EventTarget":[]},"FormElement":{"Element0":[],"Node":[],"EventTarget":[]},"HtmlCollection":{"ListMixin":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ImmutableListMixin.E":"Node","ListMixin.E":"Node"},"HttpRequestEventTarget":{"EventTarget":[]},"InputElement":{"Element0":[],"Node":[],"EventTarget":[]},"_ChildNodeListLazy":{"ListMixin":["Node"],"List":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListMixin.E":"Node"},"NodeList":{"ListMixin":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ImmutableListMixin.E":"Node","ListMixin.E":"Node"},"SelectElement":{"Element0":[],"Node":[],"EventTarget":[]},"Text0":{"Node":[],"EventTarget":[]},"Window":{"EventTarget":[]},"_Attr":{"Node":[],"EventTarget":[]},"_NamedNodeMap":{"ListMixin":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ImmutableListMixin.E":"Node","ListMixin.E":"Node"},"_AttributeMap":{"MapMixin":["String","String"],"Map":["String","String"]},"_ElementAttributeMap":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.K":"String","MapMixin.V":"String"},"_EventStream":{"Stream":["1"],"Stream.T":"1"},"_ElementEventStreamImpl":{"_EventStream":["1"],"Stream":["1"],"Stream.T":"1"},"_EventStreamSubscription":{"StreamSubscription":["1"]},"FixedSizeListIterator":{"Iterator":["1"]},"NullRejectionException":{"Exception":[]},"BinaryCodec":{"Codec":["@","Uint8List"],"Codec.T":"Uint8List","Codec.S":"@"},"Decoder":{"Converter":["Uint8List","@"],"StreamTransformerBase":["Uint8List","@"],"StreamTransformer":["Uint8List","@"],"StreamTransformerBase.S":"Uint8List","StreamTransformerBase.T":"@","Converter.S":"Uint8List","Converter.T":"@"},"Encoder":{"Converter":["@","Uint8List"],"StreamTransformerBase":["@","Uint8List"],"StreamTransformer":["@","Uint8List"],"StreamTransformerBase.S":"@","StreamTransformerBase.T":"Uint8List","Converter.S":"@","Converter.T":"Uint8List"},"DefaultEquality":{"Equality":["1"]},"IterableEquality":{"Equality":["Iterable<1>"]},"ListEquality":{"Equality":["List<1>"]},"_UnorderedEquality":{"Equality":["2"]},"SetEquality":{"_UnorderedEquality":["1","Set<1>"],"Equality":["Set<1>"],"_UnorderedEquality.E":"1","_UnorderedEquality.T":"Set<1>"},"MapEquality":{"Equality":["Map<1,2>"]},"DeepCollectionEquality":{"Equality":["@"]},"App":{"StatelessComponent":[],"Component":[]},"_LeftPane":{"StatelessComponent":[],"Component":[]},"_MobileTopBar":{"StatelessComponent":[],"Component":[]},"ContentPadding":{"StatelessComponent":[],"Component":[]},"ContentSection":{"StatelessComponent":[],"Component":[]},"ContentTitle":{"StatelessComponent":[],"Component":[]},"Copyrights":{"StatelessComponent":[],"Component":[]},"Div":{"DomComponent":[],"Component":[]},"ListItem":{"StatelessComponent":[],"Component":[]},"SimpleListItem":{"StatelessComponent":[],"Component":[]},"MarkdownComponent":{"StatelessComponent":[],"Component":[]},"Collapsible":{"StatefulComponent":[],"Component":[]},"_CollapsibleState":{"State":["Collapsible"],"State.T":"Collapsible"},"PushPin":{"StatefulComponent":[],"Component":[]},"_PushPinState":{"State":["PushPin"],"State.T":"PushPin"},"Scrollspy":{"StatefulComponent":[],"Component":[]},"_ScrollspyState":{"State":["Scrollspy"],"State.T":"Scrollspy"},"LangSelector":{"StatelessComponent":[],"Component":[]},"_$_ContactData":{"ContactData0":[]},"_$_Education":{"Education0":[]},"_$_CollegeStudy":{"CollegeStudy":[]},"_$_ForeignLanguages":{"ForeignLanguages0":[]},"_$_Language":{"Language":[]},"_$_Hobby":{"Hobby":[]},"_$_OtherProjects":{"OtherProjects0":[]},"_$_Project":{"Project":[]},"_$_DeploymentUrl":{"DeploymentUrl":[]},"_$_ProjectDescription":{"ProjectDescription":[]},"_$_Projects":{"Projects":[]},"_$_Project0":{"Project0":[]},"__$$_ProjectDescriptionCopyWithImpl":{"_$ProjectDescriptionCopyWithImpl":["1","_$_ProjectDescription"],"_$ProjectDescriptionCopyWithImpl.1":"_$_ProjectDescription","_$ProjectDescriptionCopyWithImpl.0":"1"},"_$_ProjectUrl":{"ProjectUrl":[]},"_$_Skills":{"Skills0":[]},"_$_Skill":{"Skill":[]},"NavigationPanel":{"StatelessComponent":[],"Component":[]},"TableOfContents":{"StatelessComponent":[],"Component":[]},"PdfCVLinkComponent":{"StatelessComponent":[],"Component":[]},"ContactData":{"StatelessComponent":[],"Component":[]},"_StudiesComponent":{"StatelessComponent":[],"Component":[]},"Education":{"StatelessComponent":[],"Component":[]},"Hobbies":{"StatelessComponent":[],"Component":[]},"_LanguageItem":{"StatelessComponent":[],"Component":[]},"ForeignLanguages":{"StatelessComponent":[],"Component":[]},"_ProjectCard":{"StatelessComponent":[],"Component":[]},"_DeploymentUrl":{"StatelessComponent":[],"Component":[]},"OtherProjects":{"StatelessComponent":[],"Component":[]},"_RichProjectCard":{"StatelessComponent":[],"Component":[]},"_SimpleProjectCard":{"StatelessComponent":[],"Component":[]},"_SkillsUsed":{"StatelessComponent":[],"Component":[]},"Skills":{"StatelessComponent":[],"Component":[]},"WorkTimeline":{"StatelessComponent":[],"Component":[]},"_ProjectListItemContent":{"StatelessComponent":[],"Component":[]},"EqualUnmodifiableListView":{"UnmodifiableListView":["1"],"ListMixin":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListMixin.E":"1","UnmodifiableListMixin.E":"1"},"BaseClient":{"Client":[]},"BrowserClient":{"Client":[]},"ByteStream":{"StreamView":["List<int>"],"Stream":["List<int>"],"Stream.T":"List<int>","StreamView.T":"List<int>"},"ClientException":{"Exception":[]},"Request":{"BaseRequest":[]},"BrowserDomRenderer":{"Renderer":[]},"Builder":{"StatelessComponent":[],"Component":[]},"StateCodec":{"Codec":["@","String"],"Codec.T":"String","Codec.S":"@"},"StateDecoder":{"Converter":["String","@"],"StreamTransformerBase":["String","@"],"StreamTransformer":["String","@"],"StreamTransformerBase.S":"String","StreamTransformerBase.T":"@","Converter.S":"String","Converter.T":"@"},"StateEncoder":{"Converter":["@","String"],"StreamTransformerBase":["@","String"],"StreamTransformer":["@","String"],"StreamTransformerBase.S":"@","StreamTransformerBase.T":"String","Converter.S":"@","Converter.T":"String"},"Element":{"BuildContext":[]},"InheritedComponent":{"Component":[]},"InheritedElement":{"Element":[],"BuildContext":[]},"GlobalKey":{"Key":[]},"ObserverElement":{"Element":[],"BuildContext":[]},"RenderElement":{"Element":[],"BuildContext":[]},"StatefulComponent":{"Component":[]},"_Root":{"Component":[]},"_RootElement":{"RenderElement":[],"Element":[],"BuildContext":[]},"DomComponent":{"Component":[]},"DomElement":{"RenderElement":[],"Element":[],"BuildContext":[]},"Text":{"Component":[]},"NoChildElement":{"Element":[],"BuildContext":[]},"TextElement":{"RenderElement":[],"Element":[],"BuildContext":[]},"MultiChildElement":{"Element":[],"BuildContext":[]},"SingleChildElement":{"Element":[],"BuildContext":[]},"StatefulElement":{"Element":[],"BuildContext":[]},"StatelessComponent":{"Component":[]},"StatelessElement":{"Element":[],"BuildContext":[]},"_Unit":{"Unit":[]},"_RemUnit":{"Unit":[]},"_TextStyles":{"Styles":[]},"ProviderScope":{"StatefulComponent":[],"Component":[]},"UncontrolledProviderScope":{"InheritedComponent":[],"Component":[]},"ProviderScopeState":{"State":["ProviderScope"],"SyncState":["Map<String,@>"],"State.T":"ProviderScope"},"_UncontrolledProviderScopeElement":{"InheritedElement":[],"Element":[],"BuildContext":[]},"PathException":{"Exception":[]},"PosixStyle":{"InternalStyle":[]},"UrlStyle":{"InternalStyle":[]},"WindowsStyle":{"InternalStyle":[]},"AsyncData":{"AsyncValue":["1"]},"AsyncLoading":{"AsyncValue":["1"]},"AsyncError0":{"AsyncValue":["1"]},"AutoDisposeProviderElementMixin":{"ProviderElementBase":["1"],"Node0":[]},"ProviderContainer":{"Node0":[]},"ProviderElementBase":{"Node0":[]},"Family":{"FamilyOverride":["1"],"ProviderOrFamily":[],"Override":[]},"ProviderBase":{"ProviderOrFamily":[],"ProviderListenable":["1"],"Override":[]},"_ExternalProviderSubscription":{"ProviderSubscription":["1"]},"_ProviderListener":{"ProviderSubscription":["1"]},"CircularDependencyError":{"Error":[]},"FamilyBase":{"_FamilyMixin":["2","3","5"],"Family":["2"],"FamilyOverride":["2"],"ProviderOrFamily":[],"Override":[]},"ProviderElementProxy":{"AlwaysAliveRefreshable":["2"],"ProviderListenable":["2"]},"FutureProvider":{"_FutureProviderBase":["1"],"ProviderBase":["AsyncValue<1>"],"AlwaysAliveRefreshable":["AsyncValue<1>"],"ProviderOrFamily":[],"ProviderListenable":["AsyncValue<1>"],"Override":[],"ProviderBase.0":"AsyncValue<1>"},"FutureProviderFamily":{"FamilyBase":["FutureProviderRef<1>","AsyncValue<1>","2","1/","FutureProvider<1>"],"_FamilyMixin":["AsyncValue<1>","2","FutureProvider<1>"],"Family":["AsyncValue<1>"],"FamilyOverride":["AsyncValue<1>"],"ProviderOrFamily":[],"Override":[],"_FamilyMixin.0":"AsyncValue<1>","_FamilyMixin.1":"2","FamilyBase.2":"2","FamilyBase.3":"1/","FamilyBase.0":"FutureProviderRef<1>","FamilyBase.4":"FutureProvider<1>"},"_FutureProviderBase":{"ProviderBase":["AsyncValue<1>"],"ProviderOrFamily":[],"ProviderListenable":["AsyncValue<1>"],"Override":[]},"FutureProviderElement":{"_FutureProviderElement_ProviderElementBase_FutureHandlerProviderElementMixin":["1"],"FutureHandlerProviderElementMixin":["1"],"ProviderElementBase":["AsyncValue<1>"],"FutureProviderRef":["1"],"Node0":[],"ProviderElementBase.0":"AsyncValue<1>"},"ProxyElementValueNotifier":{"_ValueListenable":["1"]},"Provider":{"InternalProvider":["1"],"ProviderBase":["1"],"AlwaysAliveRefreshable":["1"],"ProviderOrFamily":[],"ProviderListenable":["1"],"Override":[],"ProviderBase.0":"1"},"ProviderFamily":{"FamilyBase":["ProviderRef<1>","1","2","1","Provider<1>"],"_FamilyMixin":["1","2","Provider<1>"],"Family":["1"],"FamilyOverride":["1"],"ProviderOrFamily":[],"Override":[],"_FamilyMixin.0":"1","_FamilyMixin.1":"2","FamilyBase.2":"2","FamilyBase.3":"1","FamilyBase.0":"ProviderRef<1>","FamilyBase.4":"Provider<1>"},"InternalProvider":{"ProviderBase":["1"],"ProviderOrFamily":[],"ProviderListenable":["1"],"Override":[]},"ProviderElement":{"ProviderElementBase":["1"],"ProviderRef":["1"],"Node0":[],"ProviderElementBase.0":"1"},"ResultData":{"Result":["1"]},"ResultError":{"Result":["1"]},"StateController":{"StateNotifier":["1"]},"_StateProviderBase":{"ProviderBase":["1"],"ProviderOrFamily":[],"ProviderListenable":["1"],"Override":[]},"StateProvider":{"_StateProviderBase":["1"],"ProviderBase":["1"],"AlwaysAliveRefreshable":["1"],"ProviderOrFamily":[],"ProviderListenable":["1"],"Override":[],"ProviderBase.0":"1"},"StateProviderElement":{"ProviderElementBase":["1"],"StateProviderRef":["1"],"Node0":[],"ProviderElementBase.0":"1"},"Chain":{"StackTrace":[]},"LazyChain":{"Chain":[],"StackTrace":[]},"LazyTrace":{"Trace":[],"StackTrace":[]},"Trace":{"StackTrace":[]},"UnparsedFrame":{"Frame":[]},"_ListenerEntry":{"LinkedListEntry":["_ListenerEntry<1>"],"LinkedListEntry.E":"_ListenerEntry<1>"},"StateNotifierListenerError":{"Error":[]},"ByteData":{"TypedData":[]},"Int8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Uint8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Uint32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"UnmodifiableListBase":1,"__CastListBase__CastIterableBase_ListMixin":2,"NativeTypedArray":1,"_DelayedEvent":1,"IterableBase":1,"ListBase":1,"MapBase":2,"_ListBase_Object_ListMixin":1,"__SetBase_Object_SetMixin":1,"ChunkedConversionSink":1,"SyncStateMixin":2,"AutoDisposeProviderElementMixin":1,"Family":1,"ProviderSubscription":1,"AlwaysAliveProviderListenable":1,"AlwaysAliveProviderBase":1,"AlwaysAliveAsyncSelector":1,"OverrideWithValueMixin":1,"_FamilyBase_Family__FamilyMixin":5,"_ProviderBase_ProviderOrFamily_ProviderListenable":1,"_ProviderElementProxy_Object_ProviderListenable":2,"_ProviderElementProxy_Object_ProviderListenable_AlwaysAliveProviderListenable":2,"_FutureProvider__FutureProviderBase_AlwaysAliveProviderBase":1,"_FutureProvider__FutureProviderBase_AlwaysAliveProviderBase_AlwaysAliveAsyncSelector":1,"_InternalProvider_ProviderBase_OverrideWithValueMixin":1,"_Provider_InternalProvider_AlwaysAliveProviderBase":1,"_StateProvider__StateProviderBase_AlwaysAliveProviderBase":1}'));
  var string$ = {
    ______: "===== asynchronous gap ===========================\n",
    ABCDEF: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    Cannotff: "Cannot extract a file path from a URI with a fragment component",
    Cannotfq: "Cannot extract a file path from a URI with a query component",
    Cannotn: "Cannot extract a non-Windows file path from a file URI with an authority",
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type",
    It_see: "It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#custom-getters-and-methods"
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      $env_1_1_void: findType("@<~>"),
      AsyncError: findType("AsyncError"),
      AsyncValue_ContactData: findType("AsyncValue<ContactData0>"),
      AsyncValue_Education: findType("AsyncValue<Education0>"),
      AsyncValue_ForeignLanguages: findType("AsyncValue<ForeignLanguages0>"),
      AsyncValue_List_Hobby: findType("AsyncValue<List<Hobby>>"),
      AsyncValue_List_List_Skill: findType("AsyncValue<List<List<Skill>>>"),
      AsyncValue_List_Project: findType("AsyncValue<List<Project0>>"),
      AsyncValue_Map_String_String: findType("AsyncValue<Map<String,String>>"),
      AsyncValue_OtherProjects: findType("AsyncValue<OtherProjects0>"),
      AsyncValue_ProjectDescription: findType("AsyncValue<ProjectDescription>"),
      AsyncValue_Projects: findType("AsyncValue<Projects>"),
      AsyncValue_Skills: findType("AsyncValue<Skills0>"),
      AsyncValue_String: findType("AsyncValue<String>"),
      Base64Codec: findType("Base64Codec"),
      BinaryCodec: findType("BinaryCodec"),
      BuildContext: findType("BuildContext"),
      Builder: findType("Builder"),
      ByteBuffer: findType("ByteBuffer"),
      Chain: findType("Chain"),
      CollegeStudy: findType("CollegeStudy"),
      Comparable_dynamic: findType("Comparable<@>"),
      Component: findType("Component"),
      Component_Function_Component: findType("Component(Component)"),
      ContactData: findType("ContactData0"),
      DateTime: findType("DateTime"),
      DeploymentUrl: findType("DeploymentUrl"),
      Document: findType("Document"),
      DomComponent: findType("DomComponent"),
      DoubleLinkedQueue_ProviderElementBase_dynamic: findType("DoubleLinkedQueue<ProviderElementBase<@>>"),
      Duration: findType("Duration"),
      Education: findType("Education0"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element0"),
      Element_2: findType("Element"),
      EqualUnmodifiableListView_CollegeStudy: findType("EqualUnmodifiableListView<CollegeStudy>"),
      EqualUnmodifiableListView_DeploymentUrl: findType("EqualUnmodifiableListView<DeploymentUrl>"),
      EqualUnmodifiableListView_Hobby: findType("EqualUnmodifiableListView<Hobby>"),
      EqualUnmodifiableListView_Language: findType("EqualUnmodifiableListView<Language>"),
      EqualUnmodifiableListView_Project: findType("EqualUnmodifiableListView<Project>"),
      EqualUnmodifiableListView_ProjectUrl: findType("EqualUnmodifiableListView<ProjectUrl>"),
      EqualUnmodifiableListView_Project_2: findType("EqualUnmodifiableListView<Project0>"),
      EqualUnmodifiableListView_Skill: findType("EqualUnmodifiableListView<Skill>"),
      EqualUnmodifiableListView_String: findType("EqualUnmodifiableListView<String>"),
      Error: findType("Error"),
      Event: findType("Event"),
      Exception: findType("Exception"),
      Family_dynamic: findType("Family<@>"),
      ForeignLanguages: findType("ForeignLanguages0"),
      FormatException: findType("FormatException"),
      Frame: findType("Frame"),
      Frame_Function_String: findType("Frame(String)"),
      Function: findType("Function"),
      FutureProviderRef_Map_String_String: findType("FutureProviderRef<Map<String,String>>"),
      FutureProviderRef_ProjectDescription: findType("FutureProviderRef<ProjectDescription>"),
      FutureProviderRef_Projects: findType("FutureProviderRef<Projects>"),
      FutureProviderRef_Skills: findType("FutureProviderRef<Skills0>"),
      Future_dynamic: findType("Future<@>"),
      Future_void: findType("Future<~>"),
      GlobalKey_State_StatefulComponent: findType("GlobalKey<State<StatefulComponent>>"),
      HashMap_of_ProviderElementBase_dynamic_and_Object: findType("HashMap<ProviderElementBase<@>,Object>"),
      Hobby: findType("Hobby"),
      HttpRequest: findType("HttpRequest"),
      InheritedComponent: findType("InheritedComponent"),
      InheritedElement: findType("InheritedElement"),
      InputElement: findType("InputElement"),
      InternalStyle: findType("InternalStyle"),
      IterableEquality_dynamic: findType("IterableEquality<@>"),
      Iterable_Component: findType("Iterable<Component>"),
      Iterable_String: findType("Iterable<String>"),
      Iterable_dynamic: findType("Iterable<@>"),
      Iterable_int: findType("Iterable<int>"),
      JSArray_AutoDisposeProviderElementMixin_dynamic: findType("JSArray<AutoDisposeProviderElementMixin<@>>"),
      JSArray_Component: findType("JSArray<Component>"),
      JSArray_Element: findType("JSArray<Element>"),
      JSArray_Frame: findType("JSArray<Frame>"),
      JSArray_Future_dynamic: findType("JSArray<Future<@>>"),
      JSArray_Node: findType("JSArray<Node>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_ProjectUrl: findType("JSArray<ProjectUrl>"),
      JSArray_ProviderContainer: findType("JSArray<ProviderContainer>"),
      JSArray_ProviderElementBase_dynamic: findType("JSArray<ProviderElementBase<@>>"),
      JSArray_ProviderObserver: findType("JSArray<ProviderObserver>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_Trace: findType("JSArray<Trace>"),
      JSArray_Uint8List: findType("JSArray<Uint8List>"),
      JSArray__ProviderListener_dynamic: findType("JSArray<_ProviderListener<@>>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_StackTrace: findType("JSArray<StackTrace?>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSIndexable_dynamic: findType("JSIndexable<@>"),
      JSNull: findType("JSNull"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JsLinkedHashMap_dynamic_dynamic: findType("JsLinkedHashMap<@,@>"),
      Key: findType("Key"),
      Language: findType("Language"),
      ListEquality_dynamic: findType("ListEquality<@>"),
      List_Component: findType("List<Component>"),
      List_Element: findType("List<Element>"),
      List_Future_dynamic: findType("List<Future<@>>"),
      List_Hobby: findType("List<Hobby>"),
      List_List_Skill: findType("List<List<Skill>>"),
      List_Node: findType("List<Node>"),
      List_Override: findType("List<Override>"),
      List_Project: findType("List<Project0>"),
      List_Skill: findType("List<Skill>"),
      List_String: findType("List<String>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      MapEntry_String_String: findType("MapEntry<String,String>"),
      MapEquality_dynamic_dynamic: findType("MapEquality<@,@>"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_ProviderListenable_dynamic_and_ProviderSubscription_dynamic: findType("Map<ProviderListenable<@>,ProviderSubscription<@>>"),
      MappedIterable_String_Frame: findType("MappedIterable<String,Frame>"),
      MappedListIterable_Component_Component: findType("MappedListIterable<Component,Component>"),
      MappedListIterable_String_Trace: findType("MappedListIterable<String,Trace>"),
      MappedListIterable_String_dynamic: findType("MappedListIterable<String,@>"),
      NativeTypedArrayOfInt: findType("NativeTypedArrayOfInt"),
      NativeUint8List: findType("NativeUint8List"),
      Node: findType("Node"),
      Null: findType("Null"),
      Object: findType("Object"),
      OtherProjects: findType("OtherProjects0"),
      Pattern: findType("Pattern"),
      ProgressEvent: findType("ProgressEvent"),
      Project: findType("Project0"),
      ProjectDescription: findType("ProjectDescription"),
      ProjectUrl: findType("ProjectUrl"),
      Project_2: findType("Project"),
      Projects: findType("Projects"),
      ProviderBase_dynamic: findType("ProviderBase<@>"),
      ProviderBase_nullable_Object: findType("ProviderBase<Object?>"),
      ProviderContainer: findType("ProviderContainer"),
      ProviderElementBase_dynamic: findType("ProviderElementBase<@>"),
      ProviderListenable_StateController_Map_String_dynamic: findType("ProviderListenable<StateController<Map<String,@>>>"),
      ProviderListenable_StateController_SupportedLanguages: findType("ProviderListenable<StateController<SupportedLanguages>>"),
      ProviderListenable_dynamic: findType("ProviderListenable<@>"),
      ProviderOrFamily: findType("ProviderOrFamily"),
      ProviderRef_AsyncValue_List_List_Skill: findType("ProviderRef<AsyncValue<List<List<Skill>>>>"),
      ProviderRef_AsyncValue_List_Project: findType("ProviderRef<AsyncValue<List<Project0>>>"),
      ProviderRef_AsyncValue_String: findType("ProviderRef<AsyncValue<String>>"),
      ProviderRef_ProjectDescription: findType("ProviderRef<ProjectDescription>"),
      ProviderRef_String: findType("ProviderRef<String>"),
      ProviderScope: findType("ProviderScope"),
      ProviderSubscription_dynamic: findType("ProviderSubscription<@>"),
      Record: findType("Record"),
      RegExpMatch: findType("RegExpMatch"),
      RenderElement: findType("RenderElement"),
      Response: findType("Response"),
      ReversedListIterable_Frame: findType("ReversedListIterable<Frame>"),
      SetEquality_dynamic: findType("SetEquality<@>"),
      Set_dynamic: findType("Set<@>"),
      Skill: findType("Skill"),
      Skills: findType("Skills0"),
      StackTrace: findType("StackTrace"),
      StateCodec: findType("StateCodec"),
      StateProviderRef_Map_String_dynamic: findType("StateProviderRef<Map<String,@>>"),
      StateProviderRef_SupportedLanguages: findType("StateProviderRef<SupportedLanguages>"),
      StatefulComponent: findType("StatefulComponent"),
      StatelessComponent: findType("StatelessComponent"),
      StreamedResponse: findType("StreamedResponse"),
      String: findType("String"),
      SupportedLanguages: findType("SupportedLanguages"),
      SyncState_dynamic: findType("SyncState<@>"),
      Text: findType("Text0"),
      Text_2: findType("Text"),
      Trace: findType("Trace"),
      Trace_Function_String: findType("Trace(String)"),
      Type: findType("Type"),
      TypeError: findType("TypeError"),
      TypedData: findType("TypedData"),
      Uint8List: findType("Uint8List"),
      UncontrolledProviderScope: findType("UncontrolledProviderScope"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      Uri: findType("Uri"),
      Utf8Codec: findType("Utf8Codec"),
      WhereIterable_String: findType("WhereIterable<String>"),
      WhereTypeIterable_String: findType("WhereTypeIterable<String>"),
      _AsyncCompleter_StreamedResponse: findType("_AsyncCompleter<StreamedResponse>"),
      _AsyncCompleter_Uint8List: findType("_AsyncCompleter<Uint8List>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _Attr: findType("_Attr"),
      _DeploymentUrl: findType("_DeploymentUrl"),
      _DoubleLinkedQueueSentinel_ProviderElementBase_dynamic: findType("_DoubleLinkedQueueSentinel<ProviderElementBase<@>>"),
      _ElementEventStreamImpl_Event: findType("_ElementEventStreamImpl<Event>"),
      _EventBinding: findType("_EventBinding"),
      _EventStream_ProgressEvent: findType("_EventStream<ProgressEvent>"),
      _FamilyOverrideRef: findType("_FamilyOverrideRef"),
      _Future_StreamedResponse: findType("_Future<StreamedResponse>"),
      _Future_Uint8List: findType("_Future<Uint8List>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_void: findType("_Future<~>"),
      _LanguageItem: findType("_LanguageItem"),
      _MapEntry: findType("_MapEntry"),
      _ProjectCard: findType("_ProjectCard"),
      _Root: findType("_Root"),
      _StateReader: findType("_StateReader"),
      _StreamControllerAddStreamState_nullable_Object: findType("_StreamControllerAddStreamState<Object?>"),
      _StudiesComponent: findType("_StudiesComponent"),
      _SyncCompleter_dynamic: findType("_SyncCompleter<@>"),
      __$$_ProjectDescriptionCopyWithImpl__$_ProjectDescription: findType("__$$_ProjectDescriptionCopyWithImpl<_$_ProjectDescription>"),
      bool: findType("bool"),
      bool_Function_Frame: findType("bool(Frame)"),
      bool_Function_Object: findType("bool(Object)"),
      bool_Function_String: findType("bool(String)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      dynamic_Function_String: findType("@(String)"),
      dynamic_Function_dynamic_dynamic: findType("@(@,@)"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_Element: findType("Element?"),
      nullable_EventTarget: findType("EventTarget?"),
      nullable_Family_dynamic: findType("Family<@>?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_HashMap_of_ProviderElementBase_dynamic_and_Object: findType("HashMap<ProviderElementBase<@>,Object>?"),
      nullable_List_Element: findType("List<Element>?"),
      nullable_List_ObserverElement: findType("List<ObserverElement>?"),
      nullable_List_ProjectUrl: findType("List<ProjectUrl>?"),
      nullable_List_ProviderOrFamily: findType("List<ProviderOrFamily>?"),
      nullable_List_String: findType("List<String>?"),
      nullable_List_dynamic: findType("List<@>?"),
      nullable_List_of_void_Function: findType("List<~()>?"),
      nullable_List_of_void_Function_Object_StackTrace: findType("List<~(Object,StackTrace)>?"),
      nullable_Map_String_String: findType("Map<String,String>?"),
      nullable_Map_String__EventBinding: findType("Map<String,_EventBinding>?"),
      nullable_Map_String_dynamic: findType("Map<String,@>?"),
      nullable_Map_Type_InheritedElement: findType("Map<Type,InheritedElement>?"),
      nullable_Map_dynamic_dynamic: findType("Map<@,@>?"),
      nullable_Map_of_String_and_void_Function_dynamic: findType("Map<String,~(@)>?"),
      nullable_Node: findType("Node?"),
      nullable_Object: findType("Object?"),
      nullable_ProviderContainer: findType("ProviderContainer?"),
      nullable_ProviderDependencies: findType("ProviderDependencies?"),
      nullable_Set_Element: findType("Set<Element>?"),
      nullable_Set_InheritedElement: findType("Set<InheritedElement>?"),
      nullable_StackTrace: findType("StackTrace?"),
      nullable_State_StatefulComponent: findType("State<StatefulComponent>?"),
      nullable_String_Function: findType("String()?"),
      nullable__DelayedEvent_dynamic: findType("_DelayedEvent<@>?"),
      nullable__FutureListener_dynamic_dynamic: findType("_FutureListener<@,@>?"),
      nullable__LinkedHashSetCell: findType("_LinkedHashSetCell?"),
      nullable__UncontrolledProviderScopeElement: findType("_UncontrolledProviderScopeElement?"),
      nullable_dynamic_Function_Event: findType("@(Event)?"),
      nullable_nullable_Object_Function_2_nullable_Object_and_nullable_Object: findType("Object?(Object?,Object?)?"),
      nullable_void_Function: findType("~()?"),
      nullable_void_Function_Object_StackTrace: findType("~(Object,StackTrace)?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_Element: findType("~(Element)"),
      void_Function_Event: findType("~(Event)"),
      void_Function_List_int: findType("~(List<int>)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_ProviderBase_dynamic: findType("~(ProviderBase<@>)"),
      void_Function_ProviderElementBase_dynamic: findType("~(ProviderElementBase<@>)"),
      void_Function_ProxyElementValueNotifier_dynamic: findType("~(ProxyElementValueNotifier<@>)"),
      void_Function_String_String: findType("~(String,String)"),
      void_Function_String_dynamic: findType("~(String,@)"),
      void_Function_dynamic: findType("~(@)"),
      void_Function_num: findType("~(num)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.HttpRequest_methods = A.HttpRequest.prototype;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.NativeByteData_methods = A.NativeByteData.prototype;
    B.NativeUint8List_methods = A.NativeUint8List.prototype;
    B.NodeList_methods = A.NodeList.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.Window_methods = A.Window.prototype;
    B.AsciiEncoder_127 = new A.AsciiEncoder(127);
    B.Base64Encoder_false = new A.Base64Encoder(false);
    B.Base64Codec_Base64Encoder_false = new A.Base64Codec(B.Base64Encoder_false);
    B.Base64Encoder_true = new A.Base64Encoder(true);
    B.Base64Codec_Base64Encoder_true = new A.Base64Codec(B.Base64Encoder_true);
    B.C__EmptyStream = new A._EmptyStream(A.findType("_EmptyStream<List<int>>"));
    B.ByteStream__EmptyStream = new A.ByteStream(B.C__EmptyStream);
    B.CONSTANT0 = new A.Instantiation1(A.projects___$identity$closure(), A.findType("Instantiation1<_$_ProjectDescription>"));
    B.CONSTANT = new A.Instantiation1(A.math__max$closure(), A.findType("Instantiation1<int>"));
    B.C_AsciiCodec = new A.AsciiCodec();
    B.C_Base64Decoder = new A.Base64Decoder();
    B.C_BinaryCodec = new A.BinaryCodec();
    B.C_DefaultEquality = new A.DefaultEquality(A.findType("DefaultEquality<0&>"));
    B.C_DeepCollectionEquality = new A.DeepCollectionEquality();
    B.C_Duration = new A.Duration();
    B.C_EmptyIterator = new A.EmptyIterator(A.findType("EmptyIterator<0&>"));
    B.C_Freezed = new A.Freezed();
    B.C_FutureProviderFamilyBuilder = new A.FutureProviderFamilyBuilder();
    B.C_JsonCodec = new A.JsonCodec();
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.C_ProviderFamilyBuilder = new A.ProviderFamilyBuilder();
    B.C_SentinelValue = new A.SentinelValue();
    B.C_StateDecoder = new A.StateDecoder();
    B.C_StateEncoder = new A.StateEncoder();
    B.C_Utf8Codec = new A.Utf8Codec();
    B.C_Utf8Encoder = new A.Utf8Encoder();
    B.C__DelayedDone = new A._DelayedDone();
    B.C__RootZone = new A._RootZone();
    B.JS_CONST_0 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.JS_CONST_4hp = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.JS_CONST_Fs4 = function(hooks) { return hooks; }
;
    B.JS_CONST_QJm = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.JS_CONST_bDt = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.JS_CONST_gkc = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.JS_CONST_rr7 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.JS_CONST_u2C = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.JsonDecoder_null = new A.JsonDecoder(null);
    B.JsonEncoder_null = new A.JsonEncoder(null);
    B.List_2Vk = A._setArrayType(makeConstList([0, 0, 32776, 33792, 1, 10240, 0, 0]), type$.JSArray_int);
    B.List_6nc = A._setArrayType(makeConstList(["center", "white-text"]), type$.JSArray_String);
    B.List_CVk = A._setArrayType(makeConstList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_JYB = A._setArrayType(makeConstList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), type$.JSArray_int);
    B.SupportedLanguages_0 = new A.SupportedLanguages("pl");
    B.SupportedLanguages_1 = new A.SupportedLanguages("en");
    B.List_V1X = A._setArrayType(makeConstList([B.SupportedLanguages_0, B.SupportedLanguages_1]), A.findType("JSArray<SupportedLanguages>"));
    B.List_empty1 = A._setArrayType(makeConstList([]), A.findType("JSArray<DeploymentUrl>"));
    B.List_empty = A._setArrayType(makeConstList([]), A.findType("JSArray<Override>"));
    B.List_empty0 = A._setArrayType(makeConstList([]), type$.JSArray_String);
    B.List_gRj = A._setArrayType(makeConstList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_nxB = A._setArrayType(makeConstList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_qFt = A._setArrayType(makeConstList([0, 0, 27858, 1023, 65534, 51199, 65535, 32767]), type$.JSArray_int);
    B.List_qNA = A._setArrayType(makeConstList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_qg40 = A._setArrayType(makeConstList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_qg4 = A._setArrayType(makeConstList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.Map_empty = new A.ConstantStringMap(0, {}, B.List_empty0, A.findType("ConstantStringMap<String,String>"));
    B.SchedulerPhase_0 = new A.SchedulerPhase("idle");
    B.SchedulerPhase_1 = new A.SchedulerPhase("midFrameCallback");
    B.SchedulerPhase_2 = new A.SchedulerPhase("postFrameCallbacks");
    B.Target_blank = new A.Target("blank");
    B.Type_ByteBuffer_RkP = A.typeLiteral("ByteBuffer");
    B.Type_ByteData_zNC = A.typeLiteral("ByteData");
    B.Type_Int8List_ekJ = A.typeLiteral("Int8List");
    B.Type_JSObject_8k0 = A.typeLiteral("JSObject");
    B.Type_Object_xQ6 = A.typeLiteral("Object");
    B.Type_String_k8F = A.typeLiteral("String");
    B.Type_Uint32List_2bx = A.typeLiteral("Uint32List");
    B.Type_Uint8List_WLA = A.typeLiteral("Uint8List");
    B.Type_bool_lhE = A.typeLiteral("bool");
    B.Type_double_K1J = A.typeLiteral("double");
    B.Type_int_tHn = A.typeLiteral("int");
    B.Type_num_cv7 = A.typeLiteral("num");
    B.Utf8Decoder_false = new A.Utf8Decoder(false);
    B._ElementLifecycle_0 = new A._ElementLifecycle("initial");
    B._ElementLifecycle_1 = new A._ElementLifecycle("active");
    B._ElementLifecycle_2 = new A._ElementLifecycle("inactive");
    B._ElementLifecycle_3 = new A._ElementLifecycle("defunct");
    B._IterationMarker_null_2 = new A._IterationMarker(null, 2);
    B._StateLifecycle_0 = new A._StateLifecycle("created");
    B._StringStackTrace_3uE = new A._StringStackTrace("");
    B.C_FontStyle = new A.FontStyle();
    B.FontWeight_oXN = new A.FontWeight("500", "w500");
    B._TextStyles_ITt = new A._TextStyles(B.C_FontStyle, null, B.FontWeight_oXN);
    B._RemUnit_d54 = new A._RemUnit("rem", 1.2);
    B.FontWeight_lighter_lighter = new A.FontWeight("lighter", "lighter");
    B._TextStyles_wbZ = new A._TextStyles(null, B._RemUnit_d54, B.FontWeight_lighter_lighter);
  })();
  (function staticFields() {
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.Primitives__identityHashCodeProperty = null;
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $._toStringVisiting = A._setArrayType([], type$.JSArray_Object);
    $._LanguageItem__colorsPalette = function() {
      var t1 = type$.JSArray_String;
      return A._setArrayType([A._setArrayType(["brown", "accent-3"], t1), A._setArrayType(["pink", "darken-3"], t1), A._setArrayType(["grey", "darken-2"], t1)], A.findType("JSArray<List<String>>"));
    }();
    $.SchedulerBinding__instance = null;
    $.SyncBinding__instance = null;
    $.ComponentsBinding__instance = null;
    $.Element__nextHashCode = 1;
    $._currentUriBase = null;
    $._current = null;
    $._circularDependencyLock = null;
    $.vsyncOverride = null;
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "nullFuture", "$get$nullFuture", () => B.C__RootZone.run$1$1(new A.nullFuture_closure(), A.findType("Future<Null>")));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "Future__nullFuture", "$get$Future__nullFuture", () => A.findType("_Future<Null>")._as($.$get$nullFuture()));
    _lazyFinal($, "Utf8Decoder__decoder", "$get$Utf8Decoder__decoder", () => new A.Utf8Decoder__decoder_closure().call$0());
    _lazyFinal($, "Utf8Decoder__decoderNonfatal", "$get$Utf8Decoder__decoderNonfatal", () => new A.Utf8Decoder__decoderNonfatal_closure().call$0());
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", () => A.NativeInt8List__create1(A._ensureNativeList(A._setArrayType([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int))));
    _lazy($, "_Base64Decoder__emptyBuffer", "$get$_Base64Decoder__emptyBuffer", () => A.NativeUint8List_NativeUint8List(0));
    _lazyFinal($, "_Uri__isWindowsCached", "$get$_Uri__isWindowsCached", () => typeof process != "undefined" && Object.prototype.toString.call(process) == "[object process]" && process.platform == "win32");
    _lazyFinal($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", () => A.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", false));
    _lazy($, "_hasErrorStackProperty", "$get$_hasErrorStackProperty", () => new Error().stack != void 0);
    _lazyFinal($, "_hashSeed", "$get$_hashSeed", () => A.objectHashCode(B.Type_Object_xQ6));
    _lazyFinal($, "_scannerTables", "$get$_scannerTables", () => A._createTables());
    _lazyFinal($, "ElementEvents_webkitEvents", "$get$ElementEvents_webkitEvents", () => {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_literal(["animationend", "webkitAnimationEnd", "animationiteration", "webkitAnimationIteration", "animationstart", "webkitAnimationStart", "fullscreenchange", "webkitfullscreenchange", "fullscreenerror", "webkitfullscreenerror", "keyadded", "webkitkeyadded", "keyerror", "webkitkeyerror", "keymessage", "webkitkeymessage", "needkey", "webkitneedkey", "pointerlockchange", "webkitpointerlockchange", "pointerlockerror", "webkitpointerlockerror", "resourcetimingbufferfull", "webkitresourcetimingbufferfull", "transitionend", "webkitTransitionEnd", "speechchange", "webkitSpeechChange"], t1, t1);
    });
    _lazyFinal($, "Device_isOpera", "$get$Device_isOpera", () => B.JSString_methods.contains$2(A.Device_userAgent(), "Opera", 0));
    _lazyFinal($, "Device_isWebKit", "$get$Device_isWebKit", () => !A.boolConversionCheck($.$get$Device_isOpera()) && B.JSString_methods.contains$2(A.Device_userAgent(), "WebKit", 0));
    _lazyFinal($, "_privateConstructorUsedError", "$get$_privateConstructorUsedError5", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError0", "$get$_privateConstructorUsedError1", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError1", "$get$_privateConstructorUsedError0", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError2", "$get$_privateConstructorUsedError", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError3", "$get$_privateConstructorUsedError2", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError4", "$get$_privateConstructorUsedError3", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError5", "$get$_privateConstructorUsedError4", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "contactDataProvider", "$get$contactDataProvider", () => {
      var t1 = type$.ContactData;
      return A.dataAccessProvider(A.DataAccessParams$("contactdata", A.contact_data__contactDataFromJson$closure(), t1), t1);
    });
    _lazyFinal($, "educationProvider", "$get$educationProvider", () => {
      var t1 = type$.Education;
      return A.dataAccessProvider(A.DataAccessParams$("education", A.education__educationFromJson$closure(), t1), t1);
    });
    _lazyFinal($, "hobbiesProvider", "$get$hobbiesProvider", () => {
      var t1 = type$.List_Hobby;
      return A.dataAccessProvider(A.DataAccessParams$("hobbies", new A.hobbiesProvider_closure(), t1), t1);
    });
    _lazyFinal($, "languagesProvider", "$get$languagesProvider", () => {
      var t1 = type$.ForeignLanguages;
      return A.dataAccessProvider(A.DataAccessParams$("foreign_languages", A.foreign_languages__foreignLanguagesFromJson$closure(), t1), t1);
    });
    _lazyFinal($, "otherProjectsProvider", "$get$otherProjectsProvider", () => {
      var t1 = type$.OtherProjects;
      return A.dataAccessProvider(A.DataAccessParams$("other_projects", A.other_projects0__otherProjectsFromJson$closure(), t1), t1);
    });
    _lazyFinal($, "pdfCVFileProvider", "$get$pdfCVFileProvider", () => {
      var _null = null;
      return A.Provider$(new A.pdfCVFileProvider_closure(), _null, _null, _null, _null, _null, type$.String);
    });
    _lazyFinal($, "_skillsDataProvider", "$get$_skillsDataProvider", () => {
      var _null = null;
      return A.FutureProvider$(new A._skillsDataProvider_closure(), _null, _null, _null, _null, _null, type$.Skills);
    });
    _lazyFinal($, "skillsProvider", "$get$skillsProvider", () => {
      var _null = null;
      return A.Provider$(new A.skillsProvider_closure(), _null, _null, _null, _null, _null, type$.AsyncValue_List_List_Skill);
    });
    _lazyFinal($, "_projectsProvider", "$get$_projectsProvider", () => {
      var _null = null;
      return A.FutureProvider$(new A._projectsProvider_closure(), _null, _null, _null, _null, _null, type$.Projects);
    });
    _lazyFinal($, "projectsProvider", "$get$projectsProvider", () => {
      var _null = null;
      return A.Provider$(new A.projectsProvider_closure(), _null, _null, _null, _null, _null, type$.AsyncValue_List_Project);
    });
    _lazyFinal($, "_projectDescriptionProvider", "$get$_projectDescriptionProvider", () => B.C_FutureProviderFamilyBuilder.call$2$1(new A._projectDescriptionProvider_closure(), type$.ProjectDescription, type$.Project));
    _lazyFinal($, "projectDescriptionProvider", "$get$projectDescriptionProvider", () => B.C_ProviderFamilyBuilder.call$2$1(new A.projectDescriptionProvider_closure(), type$.ProjectDescription, type$.Project));
    _lazyFinal($, "selectedLanguageProvider", "$get$selectedLanguageProvider", () => A.StateProvider$(new A.selectedLanguageProvider_closure(), type$.SupportedLanguages));
    _lazyFinal($, "_currentTranslationProvider", "$get$_currentTranslationProvider", () => {
      var _null = null;
      return A.FutureProvider$(new A._currentTranslationProvider_closure(), _null, _null, _null, _null, _null, type$.Map_String_String);
    });
    _lazyFinal($, "i18nProvider", "$get$i18nProvider", () => B.C_ProviderFamilyBuilder.call$2$1(new A.i18nProvider_closure(), type$.AsyncValue_String, type$.String));
    _lazyFinal($, "BaseRequest__tokenRE", "$get$BaseRequest__tokenRE", () => A.RegExp_RegExp("^[\\w!#%&'*+\\-.^`|~]+$", false));
    _lazyFinal($, "_queryReg", "$get$_queryReg", () => A.RegExp_RegExp("^(.*?)(?:\\((\\d+):(\\d+)\\))?$", false));
    _lazyFinal($, "_syncStateProvider", "$get$_syncStateProvider", () => A.StateProvider$(new A._syncStateProvider_closure(), type$.Map_String_dynamic));
    _lazyFinal($, "windows", "$get$windows", () => A.Context_Context($.$get$Style_windows()));
    _lazyFinal($, "context", "$get$context", () => new A.Context(type$.InternalStyle._as($.$get$Style_platform()), null));
    _lazyFinal($, "Style_posix", "$get$Style_posix", () => new A.PosixStyle(A.RegExp_RegExp("/", false), A.RegExp_RegExp("[^/]$", false), A.RegExp_RegExp("^/", false)));
    _lazyFinal($, "Style_windows", "$get$Style_windows", () => new A.WindowsStyle(A.RegExp_RegExp("[/\\\\]", false), A.RegExp_RegExp("[^/\\\\]$", false), A.RegExp_RegExp("^(\\\\\\\\[^\\\\]+\\\\[^\\\\/]+|[a-zA-Z]:[/\\\\])", false), A.RegExp_RegExp("^[/\\\\](?![/\\\\])", false)));
    _lazyFinal($, "Style_url", "$get$Style_url", () => new A.UrlStyle(A.RegExp_RegExp("/", false), A.RegExp_RegExp("(^[a-zA-Z][-+.a-zA-Z\\d]*://|[^/])$", false), A.RegExp_RegExp("[a-zA-Z][-+.a-zA-Z\\d]*://[^/]*", false), A.RegExp_RegExp("^/", false)));
    _lazyFinal($, "Style_platform", "$get$Style_platform", () => A.Style__getPlatformStyle());
    _lazyFinal($, "_specKey", "$get$_specKey", () => new A.Object());
    _lazyFinal($, "_vmFrame", "$get$_vmFrame", () => A.RegExp_RegExp("^#\\d+\\s+(\\S.*) \\((.+?)((?::\\d+){0,2})\\)$", false));
    _lazyFinal($, "_v8Frame", "$get$_v8Frame", () => A.RegExp_RegExp("^\\s*at (?:(\\S.*?)(?: \\[as [^\\]]+\\])? \\((.*)\\)|(.*))$", false));
    _lazyFinal($, "_v8UrlLocation", "$get$_v8UrlLocation", () => A.RegExp_RegExp("^(.*?):(\\d+)(?::(\\d+))?$|native$", false));
    _lazyFinal($, "_v8EvalLocation", "$get$_v8EvalLocation", () => A.RegExp_RegExp("^eval at (?:\\S.*?) \\((.*)\\)(?:, .*?:\\d+:\\d+)?$", false));
    _lazyFinal($, "_firefoxEvalLocation", "$get$_firefoxEvalLocation", () => A.RegExp_RegExp("(\\S+)@(\\S+) line (\\d+) >.* (Function|eval):\\d+:\\d+", false));
    _lazyFinal($, "_firefoxSafariFrame", "$get$_firefoxSafariFrame", () => A.RegExp_RegExp("^(?:([^@(/]*)(?:\\(.*\\))?((?:/[^/]*)*)(?:\\(.*\\))?@)?(.*?):(\\d*)(?::(\\d*))?$", false));
    _lazyFinal($, "_friendlyFrame", "$get$_friendlyFrame", () => A.RegExp_RegExp("^(\\S+)(?: (\\d+)(?::(\\d+))?)?\\s+([^\\d].*)$", false));
    _lazyFinal($, "_asyncBody", "$get$_asyncBody", () => A.RegExp_RegExp("<(<anonymous closure>|[^>]+)_async_body>", false));
    _lazyFinal($, "_initialDot", "$get$_initialDot", () => A.RegExp_RegExp("^\\.", false));
    _lazyFinal($, "Frame__uriRegExp", "$get$Frame__uriRegExp", () => A.RegExp_RegExp("^[a-zA-Z][-+.a-zA-Z\\d]*://", false));
    _lazyFinal($, "Frame__windowsRegExp", "$get$Frame__windowsRegExp", () => A.RegExp_RegExp("^([a-zA-Z]:[\\\\/]|\\\\\\\\)", false));
    _lazyFinal($, "_v8Trace", "$get$_v8Trace", () => A.RegExp_RegExp("\\n    ?at ", false));
    _lazyFinal($, "_v8TraceLine", "$get$_v8TraceLine", () => A.RegExp_RegExp("    ?at ", false));
    _lazyFinal($, "_firefoxEvalTrace", "$get$_firefoxEvalTrace", () => A.RegExp_RegExp("@\\S+ line \\d+ >.* (Function|eval):\\d+:\\d+", false));
    _lazyFinal($, "_firefoxSafariTrace", "$get$_firefoxSafariTrace", () => A.RegExp_RegExp("^(([.0-9A-Za-z_$/<]|\\(.*\\))*@)?[^\\s]*:\\d*$", true));
    _lazyFinal($, "_friendlyTrace", "$get$_friendlyTrace", () => A.RegExp_RegExp("^[^\\s<][^\\s]*( \\d+(:\\d+)?)?[ \\t]+[^\\s]+$", true));
    _lazyFinal($, "vmChainGap", "$get$vmChainGap", () => A.RegExp_RegExp("^<asynchronous suspension>\\n?$", true));
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({Blob: J.JavaScriptObject, DOMError: J.JavaScriptObject, DOMImplementation: J.JavaScriptObject, File: J.JavaScriptObject, MediaError: J.JavaScriptObject, Navigator: J.JavaScriptObject, NavigatorConcurrentHardware: J.JavaScriptObject, NavigatorUserMediaError: J.JavaScriptObject, OverconstrainedError: J.JavaScriptObject, PositionError: J.JavaScriptObject, GeolocationPositionError: J.JavaScriptObject, Range: J.JavaScriptObject, SVGAnimatedEnumeration: J.JavaScriptObject, ArrayBuffer: A.NativeByteBuffer, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Int8Array: A.NativeInt8List, Uint32Array: A.NativeUint32List, Uint8Array: A.NativeUint8List, HTMLAudioElement: A.HtmlElement, HTMLBRElement: A.HtmlElement, HTMLBaseElement: A.HtmlElement, HTMLBodyElement: A.HtmlElement, HTMLButtonElement: A.HtmlElement, HTMLCanvasElement: A.HtmlElement, HTMLContentElement: A.HtmlElement, HTMLDListElement: A.HtmlElement, HTMLDataElement: A.HtmlElement, HTMLDataListElement: A.HtmlElement, HTMLDetailsElement: A.HtmlElement, HTMLDialogElement: A.HtmlElement, HTMLDivElement: A.HtmlElement, HTMLEmbedElement: A.HtmlElement, HTMLFieldSetElement: A.HtmlElement, HTMLHRElement: A.HtmlElement, HTMLHeadElement: A.HtmlElement, HTMLHeadingElement: A.HtmlElement, HTMLHtmlElement: A.HtmlElement, HTMLIFrameElement: A.HtmlElement, HTMLImageElement: A.HtmlElement, HTMLLIElement: A.HtmlElement, HTMLLabelElement: A.HtmlElement, HTMLLegendElement: A.HtmlElement, HTMLLinkElement: A.HtmlElement, HTMLMapElement: A.HtmlElement, HTMLMediaElement: A.HtmlElement, HTMLMenuElement: A.HtmlElement, HTMLMetaElement: A.HtmlElement, HTMLMeterElement: A.HtmlElement, HTMLModElement: A.HtmlElement, HTMLOListElement: A.HtmlElement, HTMLObjectElement: A.HtmlElement, HTMLOptGroupElement: A.HtmlElement, HTMLOptionElement: A.HtmlElement, HTMLOutputElement: A.HtmlElement, HTMLParagraphElement: A.HtmlElement, HTMLParamElement: A.HtmlElement, HTMLPictureElement: A.HtmlElement, HTMLPreElement: A.HtmlElement, HTMLProgressElement: A.HtmlElement, HTMLQuoteElement: A.HtmlElement, HTMLScriptElement: A.HtmlElement, HTMLShadowElement: A.HtmlElement, HTMLSlotElement: A.HtmlElement, HTMLSourceElement: A.HtmlElement, HTMLSpanElement: A.HtmlElement, HTMLStyleElement: A.HtmlElement, HTMLTableCaptionElement: A.HtmlElement, HTMLTableCellElement: A.HtmlElement, HTMLTableDataCellElement: A.HtmlElement, HTMLTableHeaderCellElement: A.HtmlElement, HTMLTableColElement: A.HtmlElement, HTMLTableElement: A.HtmlElement, HTMLTableRowElement: A.HtmlElement, HTMLTableSectionElement: A.HtmlElement, HTMLTemplateElement: A.HtmlElement, HTMLTextAreaElement: A.HtmlElement, HTMLTimeElement: A.HtmlElement, HTMLTitleElement: A.HtmlElement, HTMLTrackElement: A.HtmlElement, HTMLUListElement: A.HtmlElement, HTMLUnknownElement: A.HtmlElement, HTMLVideoElement: A.HtmlElement, HTMLDirectoryElement: A.HtmlElement, HTMLFontElement: A.HtmlElement, HTMLFrameElement: A.HtmlElement, HTMLFrameSetElement: A.HtmlElement, HTMLMarqueeElement: A.HtmlElement, HTMLElement: A.HtmlElement, HTMLAnchorElement: A.AnchorElement, HTMLAreaElement: A.AreaElement, Comment: A.CharacterData, ProcessingInstruction: A.CharacterData, CharacterData: A.CharacterData, Document: A.Document, HTMLDocument: A.Document, XMLDocument: A.Document, DOMException: A.DomException, MathMLElement: A.Element0, SVGAElement: A.Element0, SVGAnimateElement: A.Element0, SVGAnimateMotionElement: A.Element0, SVGAnimateTransformElement: A.Element0, SVGAnimationElement: A.Element0, SVGCircleElement: A.Element0, SVGClipPathElement: A.Element0, SVGDefsElement: A.Element0, SVGDescElement: A.Element0, SVGDiscardElement: A.Element0, SVGEllipseElement: A.Element0, SVGFEBlendElement: A.Element0, SVGFEColorMatrixElement: A.Element0, SVGFEComponentTransferElement: A.Element0, SVGFECompositeElement: A.Element0, SVGFEConvolveMatrixElement: A.Element0, SVGFEDiffuseLightingElement: A.Element0, SVGFEDisplacementMapElement: A.Element0, SVGFEDistantLightElement: A.Element0, SVGFEFloodElement: A.Element0, SVGFEFuncAElement: A.Element0, SVGFEFuncBElement: A.Element0, SVGFEFuncGElement: A.Element0, SVGFEFuncRElement: A.Element0, SVGFEGaussianBlurElement: A.Element0, SVGFEImageElement: A.Element0, SVGFEMergeElement: A.Element0, SVGFEMergeNodeElement: A.Element0, SVGFEMorphologyElement: A.Element0, SVGFEOffsetElement: A.Element0, SVGFEPointLightElement: A.Element0, SVGFESpecularLightingElement: A.Element0, SVGFESpotLightElement: A.Element0, SVGFETileElement: A.Element0, SVGFETurbulenceElement: A.Element0, SVGFilterElement: A.Element0, SVGForeignObjectElement: A.Element0, SVGGElement: A.Element0, SVGGeometryElement: A.Element0, SVGGraphicsElement: A.Element0, SVGImageElement: A.Element0, SVGLineElement: A.Element0, SVGLinearGradientElement: A.Element0, SVGMarkerElement: A.Element0, SVGMaskElement: A.Element0, SVGMetadataElement: A.Element0, SVGPathElement: A.Element0, SVGPatternElement: A.Element0, SVGPolygonElement: A.Element0, SVGPolylineElement: A.Element0, SVGRadialGradientElement: A.Element0, SVGRectElement: A.Element0, SVGScriptElement: A.Element0, SVGSetElement: A.Element0, SVGStopElement: A.Element0, SVGStyleElement: A.Element0, SVGElement: A.Element0, SVGSVGElement: A.Element0, SVGSwitchElement: A.Element0, SVGSymbolElement: A.Element0, SVGTSpanElement: A.Element0, SVGTextContentElement: A.Element0, SVGTextElement: A.Element0, SVGTextPathElement: A.Element0, SVGTextPositioningElement: A.Element0, SVGTitleElement: A.Element0, SVGUseElement: A.Element0, SVGViewElement: A.Element0, SVGGradientElement: A.Element0, SVGComponentTransferFunctionElement: A.Element0, SVGFEDropShadowElement: A.Element0, SVGMPathElement: A.Element0, Element: A.Element0, AbortPaymentEvent: A.Event, AnimationEvent: A.Event, AnimationPlaybackEvent: A.Event, ApplicationCacheErrorEvent: A.Event, BackgroundFetchClickEvent: A.Event, BackgroundFetchEvent: A.Event, BackgroundFetchFailEvent: A.Event, BackgroundFetchedEvent: A.Event, BeforeInstallPromptEvent: A.Event, BeforeUnloadEvent: A.Event, BlobEvent: A.Event, CanMakePaymentEvent: A.Event, ClipboardEvent: A.Event, CloseEvent: A.Event, CompositionEvent: A.Event, CustomEvent: A.Event, DeviceMotionEvent: A.Event, DeviceOrientationEvent: A.Event, ErrorEvent: A.Event, ExtendableEvent: A.Event, ExtendableMessageEvent: A.Event, FetchEvent: A.Event, FocusEvent: A.Event, FontFaceSetLoadEvent: A.Event, ForeignFetchEvent: A.Event, GamepadEvent: A.Event, HashChangeEvent: A.Event, InstallEvent: A.Event, KeyboardEvent: A.Event, MediaEncryptedEvent: A.Event, MediaKeyMessageEvent: A.Event, MediaQueryListEvent: A.Event, MediaStreamEvent: A.Event, MediaStreamTrackEvent: A.Event, MessageEvent: A.Event, MIDIConnectionEvent: A.Event, MIDIMessageEvent: A.Event, MouseEvent: A.Event, DragEvent: A.Event, MutationEvent: A.Event, NotificationEvent: A.Event, PageTransitionEvent: A.Event, PaymentRequestEvent: A.Event, PaymentRequestUpdateEvent: A.Event, PointerEvent: A.Event, PopStateEvent: A.Event, PresentationConnectionAvailableEvent: A.Event, PresentationConnectionCloseEvent: A.Event, PromiseRejectionEvent: A.Event, PushEvent: A.Event, RTCDataChannelEvent: A.Event, RTCDTMFToneChangeEvent: A.Event, RTCPeerConnectionIceEvent: A.Event, RTCTrackEvent: A.Event, SecurityPolicyViolationEvent: A.Event, SensorErrorEvent: A.Event, SpeechRecognitionError: A.Event, SpeechRecognitionEvent: A.Event, SpeechSynthesisEvent: A.Event, StorageEvent: A.Event, SyncEvent: A.Event, TextEvent: A.Event, TouchEvent: A.Event, TrackEvent: A.Event, TransitionEvent: A.Event, WebKitTransitionEvent: A.Event, UIEvent: A.Event, VRDeviceEvent: A.Event, VRDisplayEvent: A.Event, VRSessionEvent: A.Event, WheelEvent: A.Event, MojoInterfaceRequestEvent: A.Event, USBConnectionEvent: A.Event, IDBVersionChangeEvent: A.Event, AudioProcessingEvent: A.Event, OfflineAudioCompletionEvent: A.Event, WebGLContextEvent: A.Event, Event: A.Event, InputEvent: A.Event, SubmitEvent: A.Event, EventTarget: A.EventTarget, HTMLFormElement: A.FormElement, HTMLCollection: A.HtmlCollection, HTMLFormControlsCollection: A.HtmlCollection, HTMLOptionsCollection: A.HtmlCollection, XMLHttpRequest: A.HttpRequest, XMLHttpRequestEventTarget: A.HttpRequestEventTarget, HTMLInputElement: A.InputElement, Location: A.Location, DocumentFragment: A.Node, ShadowRoot: A.Node, DocumentType: A.Node, Node: A.Node, NodeList: A.NodeList, RadioNodeList: A.NodeList, ProgressEvent: A.ProgressEvent, ResourceProgressEvent: A.ProgressEvent, HTMLSelectElement: A.SelectElement, CDATASection: A.Text0, Text: A.Text0, Window: A.Window, DOMWindow: A.Window, Attr: A._Attr, NamedNodeMap: A._NamedNodeMap, MozNamedAttrMap: A._NamedNodeMap});
    hunkHelpers.setOrUpdateLeafTags({Blob: true, DOMError: true, DOMImplementation: true, File: true, MediaError: true, Navigator: true, NavigatorConcurrentHardware: true, NavigatorUserMediaError: true, OverconstrainedError: true, PositionError: true, GeolocationPositionError: true, Range: true, SVGAnimatedEnumeration: true, ArrayBuffer: true, ArrayBufferView: false, DataView: true, Int8Array: true, Uint32Array: true, Uint8Array: false, HTMLAudioElement: true, HTMLBRElement: true, HTMLBaseElement: true, HTMLBodyElement: true, HTMLButtonElement: true, HTMLCanvasElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLDivElement: true, HTMLEmbedElement: true, HTMLFieldSetElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLIFrameElement: true, HTMLImageElement: true, HTMLLIElement: true, HTMLLabelElement: true, HTMLLegendElement: true, HTMLLinkElement: true, HTMLMapElement: true, HTMLMediaElement: true, HTMLMenuElement: true, HTMLMetaElement: true, HTMLMeterElement: true, HTMLModElement: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOptGroupElement: true, HTMLOptionElement: true, HTMLOutputElement: true, HTMLParagraphElement: true, HTMLParamElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLProgressElement: true, HTMLQuoteElement: true, HTMLScriptElement: true, HTMLShadowElement: true, HTMLSlotElement: true, HTMLSourceElement: true, HTMLSpanElement: true, HTMLStyleElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, HTMLTextAreaElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLVideoElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, HTMLAnchorElement: true, HTMLAreaElement: true, Comment: true, ProcessingInstruction: true, CharacterData: false, Document: true, HTMLDocument: true, XMLDocument: true, DOMException: true, MathMLElement: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGScriptElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, Element: false, AbortPaymentEvent: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, CanMakePaymentEvent: true, ClipboardEvent: true, CloseEvent: true, CompositionEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, FetchEvent: true, FocusEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, GamepadEvent: true, HashChangeEvent: true, InstallEvent: true, KeyboardEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MessageEvent: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MouseEvent: true, DragEvent: true, MutationEvent: true, NotificationEvent: true, PageTransitionEvent: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PointerEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, PromiseRejectionEvent: true, PushEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, SyncEvent: true, TextEvent: true, TouchEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, UIEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, WheelEvent: true, MojoInterfaceRequestEvent: true, USBConnectionEvent: true, IDBVersionChangeEvent: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, Event: false, InputEvent: false, SubmitEvent: false, EventTarget: false, HTMLFormElement: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, XMLHttpRequest: true, XMLHttpRequestEventTarget: false, HTMLInputElement: true, Location: true, DocumentFragment: true, ShadowRoot: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, ProgressEvent: true, ResourceProgressEvent: true, HTMLSelectElement: true, CDATASection: true, Text: true, Window: true, DOMWindow: true, Attr: true, NamedNodeMap: true, MozNamedAttrMap: true});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$1$0 = function() {
    return this();
  };
  Function.prototype.call$2$0 = function() {
    return this();
  };
  Function.prototype.call$2$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$1$2 = function(a, b) {
    return this(a, b);
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function")
      dartMainRunner(callMain, []);
    else
      callMain([]);
  });
})();

//# sourceMappingURL=main.dart.js.map
